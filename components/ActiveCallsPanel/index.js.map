{"version":3,"sources":["components/ActiveCallsPanel/index.js"],"names":["ActiveCallsPanel","props","state","isModalOpen","callOfModal","showConfirmMergeModal","call","setState","hideConfirmMergeModal","confirmMergeCall","mergeToConference","webphoneSession","hasCalls","onCallsEmpty","nextProps","activeRingCalls","length","activeOnHoldCalls","activeCurrentCalls","otherDeviceCalls","calls","title","currentLocale","areaCode","countryCode","brand","showContactDisplayPlaceholder","formatPhone","onClickToSms","onCreateContact","onViewContact","outboundSmsPermission","internalSmsPermission","isLoggedContact","onLogCall","autoLog","loggingMap","webphoneAnswer","webphoneReject","webphoneHangup","webphoneResume","enableContactFallback","webphoneToVoicemail","sourceIcons","isWebRTC","conferenceCallEquipped","hasConferenceCall","disableMerge","isSessionAConferenceCall","className","showSpinner","conferenceCallParties","styles","root","noCalls","i18n","getString","spinner","target","container","getCallList","Component","propTypes","PropTypes","string","isRequired","array","bool","func","object","arrayOf","defaultProps","undefined","i"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport SpinnerOverlay from '../SpinnerOverlay';\nimport ActiveCallList from '../ActiveCallList';\nimport ConfirmMergeModal from '../ConfirmMergeModal';\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nexport default class ActiveCallsPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalOpen: false,\n      callOfModal: null,\n    };\n\n    this.showConfirmMergeModal = (call) => {\n      this.setState({\n        isModalOpen: true,\n        callOfModal: call,\n      });\n    };\n\n    this.hideConfirmMergeModal = () => {\n      this.setState({\n        isModalOpen: false,\n        callOfModal: null,\n      });\n    };\n\n    this.confirmMergeCall = () => {\n      this.props.mergeToConference([this.state.callOfModal.webphoneSession]);\n      this.hideConfirmMergeModal();\n    };\n  }\n\n  componentDidMount() {\n    if (\n      !this.hasCalls(this.props) &&\n      typeof this.props.onCallsEmpty === 'function'\n    ) {\n      this.props.onCallsEmpty();\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (\n      this.hasCalls(this.props) &&\n      !this.hasCalls(nextProps) &&\n      typeof this.props.onCallsEmpty === 'function'\n    ) {\n      this.props.onCallsEmpty();\n    }\n  }\n\n  hasCalls(props = this.props) {\n    return (\n      props.activeRingCalls.length > 0 ||\n      props.activeOnHoldCalls.length > 0 ||\n      props.activeCurrentCalls.length > 0 ||\n      props.otherDeviceCalls.length > 0\n    );\n  }\n\n  getCallList(calls, title) {\n    const {\n      currentLocale,\n      areaCode,\n      countryCode,\n      brand,\n      showContactDisplayPlaceholder,\n      formatPhone,\n      onClickToSms,\n      onCreateContact,\n      onViewContact,\n      outboundSmsPermission,\n      internalSmsPermission,\n      isLoggedContact,\n      onLogCall,\n      autoLog,\n      loggingMap,\n      webphoneAnswer,\n      webphoneReject,\n      webphoneHangup,\n      webphoneResume,\n      enableContactFallback,\n      webphoneToVoicemail,\n      sourceIcons,\n      activeCurrentCalls,\n      isWebRTC,\n      conferenceCallEquipped,\n      hasConferenceCall,\n      disableMerge,\n      mergeToConference,\n      isSessionAConferenceCall,\n    } = this.props;\n\n    return (\n      <ActiveCallList\n        title={title}\n        calls={calls}\n        currentLocale={currentLocale}\n        areaCode={areaCode}\n        countryCode={countryCode}\n        brand={brand}\n        showContactDisplayPlaceholder={showContactDisplayPlaceholder}\n        formatPhone={formatPhone}\n        onClickToSms={onClickToSms}\n        onCreateContact={onCreateContact}\n        onViewContact={onViewContact}\n        outboundSmsPermission={outboundSmsPermission}\n        internalSmsPermission={internalSmsPermission}\n        isLoggedContact={isLoggedContact}\n        onLogCall={onLogCall}\n        autoLog={autoLog}\n        loggingMap={loggingMap}\n        webphoneAnswer={webphoneAnswer}\n        webphoneReject={webphoneReject}\n        webphoneHangup={webphoneHangup}\n        webphoneResume={webphoneResume}\n        webphoneToVoicemail={webphoneToVoicemail}\n        enableContactFallback={enableContactFallback}\n        sourceIcons={sourceIcons}\n        isWebRTC={isWebRTC}\n        conferenceCallEquipped={conferenceCallEquipped}\n        hasConferenceCall={hasConferenceCall}\n        disableMerge={disableMerge}\n        currentCall={activeCurrentCalls[0]}\n        mergeToConference={mergeToConference}\n        isSessionAConferenceCall={isSessionAConferenceCall}\n        onConfirmMergeCall={this.showConfirmMergeModal}\n      />\n    );\n  }\n\n  render() {\n    const {\n      activeRingCalls,\n      activeOnHoldCalls,\n      activeCurrentCalls,\n      otherDeviceCalls,\n      className,\n      currentLocale,\n      showSpinner,\n      conferenceCallEquipped,\n      conferenceCallParties,\n    } = this.props;\n\n    if (!this.hasCalls()) {\n      return (\n        <div className={classnames(styles.root, className)}>\n          <p className={styles.noCalls}>{i18n.getString('noActiveCalls', currentLocale)}</p>\n          {showSpinner ? <SpinnerOverlay className={styles.spinner} /> : null}\n        </div>\n      );\n    }\n\n    return (\n      <div className={styles.root}>\n        <div\n          className={classnames(styles.root, className)}\n          ref={(target) => { this.container = target; }}\n        >\n          {this.getCallList(activeRingCalls, i18n.getString('ringCall', currentLocale))}\n          {this.getCallList(activeCurrentCalls, i18n.getString('currentCall', currentLocale))}\n          {this.getCallList(activeOnHoldCalls, i18n.getString('onHoldCall', currentLocale))}\n          {this.getCallList(otherDeviceCalls, i18n.getString('otherDeviceCall', currentLocale))}\n          {\n            conferenceCallEquipped\n              ? <ConfirmMergeModal\n                currentLocale={currentLocale}\n                show={this.state.isModalOpen}\n                onMerge={this.confirmMergeCall}\n                onCancel={this.hideConfirmMergeModal}\n                partyProfiles={conferenceCallParties} />\n              : null\n          }\n        </div>\n        {showSpinner ? <SpinnerOverlay className={styles.spinner} /> : null}\n      </div>\n    );\n  }\n}\n\nActiveCallsPanel.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  activeRingCalls: PropTypes.array.isRequired,\n  activeOnHoldCalls: PropTypes.array.isRequired,\n  activeCurrentCalls: PropTypes.array.isRequired,\n  otherDeviceCalls: PropTypes.array.isRequired,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  brand: PropTypes.string,\n  showContactDisplayPlaceholder: PropTypes.bool,\n  formatPhone: PropTypes.func.isRequired,\n  onClickToSms: PropTypes.func,\n  onCreateContact: PropTypes.func,\n  outboundSmsPermission: PropTypes.bool,\n  internalSmsPermission: PropTypes.bool,\n  isLoggedContact: PropTypes.func,\n  onLogCall: PropTypes.func,\n  webphoneAnswer: PropTypes.func,\n  webphoneReject: PropTypes.func,\n  webphoneHangup: PropTypes.func,\n  webphoneResume: PropTypes.func,\n  webphoneToVoicemail: PropTypes.func,\n  autoLog: PropTypes.bool,\n  onViewContact: PropTypes.func,\n  enableContactFallback: PropTypes.bool,\n  loggingMap: PropTypes.object,\n  onCallsEmpty: PropTypes.func,\n  sourceIcons: PropTypes.object,\n  isWebRTC: PropTypes.bool.isRequired,\n  conferenceCallEquipped: PropTypes.bool,\n  hasConferenceCall: PropTypes.bool,\n  showSpinner: PropTypes.bool,\n  disableMerge: PropTypes.bool,\n  mergeToConference: PropTypes.func,\n  isSessionAConferenceCall: PropTypes.func,\n  conferenceCallParties: PropTypes.arrayOf(PropTypes.object),\n};\n\nActiveCallsPanel.defaultProps = {\n  className: undefined,\n  brand: 'RingCentral',\n  showContactDisplayPlaceholder: true,\n  onCreateContact: undefined,\n  onClickToSms: undefined,\n  outboundSmsPermission: true,\n  internalSmsPermission: true,\n  isLoggedContact: undefined,\n  onLogCall: undefined,\n  onViewContact: undefined,\n  webphoneAnswer: undefined,\n  webphoneReject: undefined,\n  webphoneHangup: undefined,\n  webphoneResume: undefined,\n  webphoneToVoicemail: undefined,\n  enableContactFallback: undefined,\n  loggingMap: {},\n  autoLog: false,\n  onCallsEmpty: undefined,\n  sourceIcons: undefined,\n  conferenceCallEquipped: false,\n  hasConferenceCall: false,\n  showSpinner: false,\n  disableMerge: false,\n  mergeToConference: i => i,\n  isSessionAConferenceCall: () => false,\n  conferenceCallParties: [],\n};\n"]}