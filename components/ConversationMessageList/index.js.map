{"version":3,"sources":["components/ConversationMessageList/index.js"],"names":["Message","subject","time","direction","sender","SubjectRenderer","subjectRenderer","styles","message","messageBody","outbound","inbound","length","big","clear","propTypes","PropTypes","string","isRequired","func","defaultProps","undefined","ConversationMessageList","onScroll","_listRef","currentScrollTop","scrollTop","_scrollHeight","scrollHeight","clientHeight","_scrollTop","_scrollUp","props","loadPreviousMessages","scrollToLastMessage","previousProps","messages","className","dateTimeFormatter","showSender","height","messageSubjectRenderer","formatPhone","loadingNextPage","lastDate","messageList","map","from","name","extensionNumber","phoneNumber","date","Date","creationTime","getHours","utcTimestamp","type","id","loading","root","body","Component","arrayOf","shape","number","bool","oneOfType"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport styles from './styles.scss';\n\nexport function Message({\n  subject,\n  time,\n  direction,\n  sender,\n  subjectRenderer: SubjectRenderer,\n}) {\n  return (\n    <div className={styles.message}>\n      {\n        time ?\n          (\n            <div className={styles.time}>\n              {time}\n            </div>\n          ) :\n          null\n      }\n      {\n        (sender && direction === 'Inbound') ?\n          (\n            <div className={styles.sender}>\n              {sender}\n            </div>\n          ) :\n          null\n      }\n      <div\n        className={classnames(\n          styles.messageBody,\n          direction === 'Outbound' ? styles.outbound : styles.inbound,\n          (subject && subject.length > 500) && styles.big,\n        )}>\n        {\n          SubjectRenderer ? <SubjectRenderer subject={subject} /> : subject\n        }\n      </div>\n      <div className={styles.clear} />\n    </div>\n  );\n}\n\nMessage.propTypes = {\n  direction: PropTypes.string.isRequired,\n  subject: PropTypes.string,\n  time: PropTypes.string,\n  sender: PropTypes.string,\n  subjectRenderer: PropTypes.func,\n};\n\nMessage.defaultProps = {\n  subject: '',\n  sender: undefined,\n  time: undefined,\n  subjectRenderer: undefined,\n};\n\nclass ConversationMessageList extends Component {\n  componentDidMount() {\n    this.scrollToLastMessage();\n  }\n\n  componentDidUpdate(previousProps) {\n    if (\n      previousProps.messages.length === this.props.messages.length\n    ) {\n      return;\n    }\n    if (!this._scrollUp) {\n      this.scrollToLastMessage();\n    } else if (\n      this._listRef &&\n      this._scrollHeight !== this._listRef.scrollHeight\n    ) {\n      this._listRef.scrollTop =\n        this._listRef.scrollTop + (this._listRef.scrollHeight - this._scrollHeight);\n    }\n  }\n\n  onScroll = async () => {\n    if (!this._listRef) {\n      return;\n    }\n    const currentScrollTop = this._listRef.scrollTop;\n    this._scrollHeight = this._listRef.scrollHeight;\n    const clientHeight = this._listRef.clientHeight;\n    if (currentScrollTop < this._scrollTop) {\n      // user scroll up\n      this._scrollUp = true;\n    } else if (currentScrollTop + clientHeight > this._scrollHeight - 200) {\n      // user scroll down to bottom\n      this._scrollUp = false;\n    }\n    if (\n      currentScrollTop < 20 &&\n      this._scrollTop >= 20\n    ) {\n      this.props.loadPreviousMessages();\n    }\n    this._scrollTop = currentScrollTop;\n  }\n\n  scrollToLastMessage = () => {\n    if (this._listRef) {\n      this._listRef.scrollTop = this._listRef.scrollHeight;\n    }\n  }\n\n  render() {\n    const {\n      className,\n      dateTimeFormatter,\n      messages,\n      showSender,\n      height,\n      messageSubjectRenderer,\n      formatPhone,\n      loadingNextPage,\n    } = this.props;\n\n    let lastDate = 0;\n    const messageList = messages.map((message) => {\n      const sender = showSender ?\n        (\n          message.from.name ||\n          formatPhone(message.from.extensionNumber || message.from.phoneNumber)\n        ) :\n        null;\n      const date = new Date(message.creationTime);\n      const time = (date - lastDate < 60 * 60 * 1000 && date.getHours() === lastDate.getHours()) ?\n        null :\n        dateTimeFormatter({ utcTimestamp: message.creationTime, type: 'long' });\n      lastDate = date;\n      return (\n        <Message\n          key={message.id}\n          sender={sender}\n          time={time}\n          direction={message.direction}\n          subject={message.subject}\n          subjectRenderer={messageSubjectRenderer}\n        />\n      );\n    });\n    const loading = loadingNextPage ? (\n      <div className={styles.loading}>\n        Loading...\n      </div>\n    ) : null;\n    return (\n      <div\n        className={classnames(styles.root, className)}\n        style={{ height }}\n        ref={(body) => { this._listRef = body; }}\n        onScroll={this.onScroll}\n      >\n        {loading}\n        {messageList}\n      </div>\n    );\n  }\n}\n\nConversationMessageList.propTypes = {\n  messages: PropTypes.arrayOf(PropTypes.shape({\n    creationTime: PropTypes.number,\n    id: PropTypes.number,\n    direction: PropTypes.string,\n    subject: PropTypes.string,\n  })).isRequired,\n  className: PropTypes.string,\n  showSender: PropTypes.bool,\n  dateTimeFormatter: PropTypes.func.isRequired,\n  messageSubjectRenderer: PropTypes.func,\n  formatPhone: PropTypes.func.isRequired,\n  loadPreviousMessages: PropTypes.func,\n  loadingNextPage: PropTypes.bool,\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n};\n\nConversationMessageList.defaultProps = {\n  className: null,\n  showSender: false,\n  messageSubjectRenderer: undefined,\n  height: '100%',\n  loadingNextPage: false,\n  loadPreviousMessages: () => null,\n};\n\nexport default ConversationMessageList;\n"]}