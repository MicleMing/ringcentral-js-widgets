{"version":3,"sources":["components/LogSection/index.js"],"names":["LogSection","props","state","mainCtrlOverlapped","window","addEventListener","checkOverlap","removeEventListener","mainCtrl","scrollHeight","clientHeight","scrollTop","overlappedHeight","setState","renderEditLogSection","renderSaveLogButton","currentLocale","onUpdateCallLog","currentLog","isInnerMask","showSaveLogBtn","onSaveCallLog","call","showSpinner","currentLogCall","styles","spinner","editLogSection","buttonPanelClassName","buttonPanel","overlapped","buttonClassName","primaryButton","isSaving","disabled","saveLogBtn","i18n","getString","section","formatPhone","ref","editSection","innerMask","Component","propTypes","PropTypes","object","string","isRequired","func","bool","defaultProps","undefined"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport SpinnerOverlay from '../SpinnerOverlay';\nimport Button from '../Button';\nimport styles from './styles.scss';\nimport LogBasicInfo from '../LogBasicInfo';\nimport i18n from './i18n';\n\nexport default class LogSection extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mainCtrlOverlapped: false\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.checkOverlap, false);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.checkOverlap, false);\n  }\n\n  checkOverlap() {\n    if (!this.mainCtrl) {\n      return;\n    }\n    const {\n      scrollHeight,\n      clientHeight,\n      scrollTop\n    } = this.mainCtrl;\n    const overlappedHeight = scrollHeight - clientHeight - scrollTop;\n    const mainCtrlOverlapped = overlappedHeight > 1;\n    if (mainCtrlOverlapped !== this.state.mainCtrlOverlapped) {\n      this.setState({ mainCtrlOverlapped });\n    }\n  }\n\n  render() {\n    const {\n      renderEditLogSection,\n      renderSaveLogButton,\n      currentLocale,\n      onUpdateCallLog,\n      currentLog,\n      isInnerMask,\n      showSaveLogBtn,\n      onSaveCallLog,\n    } = this.props;\n    const {\n      call,\n      showSpinner,\n      currentLogCall,\n    } = currentLog;\n    if (showSpinner) {\n      return (<SpinnerOverlay className={styles.spinner} />);\n    }\n    const editLogSection = renderEditLogSection({\n      currentLocale,\n      onSaveCallLog,\n      onUpdateCallLog,\n      currentLog,\n    });\n    const buttonPanelClassName = classnames(\n      styles.buttonPanel,\n      this.state.mainCtrlOverlapped && styles.overlapped\n    );\n    const buttonClassName = classnames(\n      styles.primaryButton,\n      currentLogCall.isSaving && styles.disabled\n    );\n    const saveLogBtn = showSaveLogBtn ? renderSaveLogButton && (\n      renderSaveLogButton({\n        currentLocale,\n        onSaveCallLog,\n        currentLog,\n        overlapped: this.state.mainCtrlOverlapped\n      })\n    ) || (\n      <div\n        className={buttonPanelClassName}>\n        <Button\n          disabled={currentLogCall.isSaving}\n          className={buttonClassName}\n          onClick={() => onSaveCallLog(call)}>\n          { i18n.getString('saveLog', currentLocale)}\n        </Button>\n      </div>\n    ) : null;\n    return (\n      <div className={styles.section}>\n        <LogBasicInfo\n          currentLog={this.props.currentLog}\n          currentLocale={this.props.currentLocale}\n          formatPhone={this.props.formatPhone}\n        />\n        <div\n          ref={(ref) => { this.mainCtrl = ref; }}\n          onScroll={() => this.checkOverlap()}\n          className={styles.editSection}>\n          {editLogSection}\n        </div>\n        {saveLogBtn}\n        {\n          isInnerMask ? (\n            <div className={styles.innerMask} />\n          ) : null\n        }\n      </div>);\n  }\n}\n\nLogSection.propTypes = {\n  currentLog: PropTypes.object,\n  currentLocale: PropTypes.string.isRequired,\n  formatPhone: PropTypes.func,\n  onUpdateCallLog: PropTypes.func,\n  onSaveCallLog: PropTypes.func,\n  renderEditLogSection: PropTypes.func,\n  renderSaveLogButton: PropTypes.func,\n  isInnerMask: PropTypes.bool,\n  showSaveLogBtn: PropTypes.bool,\n};\n\nLogSection.defaultProps = {\n  currentLog: {},\n  formatPhone: undefined,\n  onUpdateCallLog: undefined,\n  onSaveCallLog: undefined,\n  renderEditLogSection: undefined,\n  renderSaveLogButton: undefined,\n  isInnerMask: undefined,\n  showSaveLogBtn: true,\n};\n"]}