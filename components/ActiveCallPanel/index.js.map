{"version":3,"sources":["components/ActiveCallPanel/index.js"],"names":["CallInfo","props","avatar","avatarUrl","dynamicsFont","portrait","styles","icon","userInfo","avatarContainer","userName","contactDisplay","dropdown","nameMatches","phoneNumber","fallBackName","currentLocale","areaCode","countryCode","selectedMatcherIndex","onSelectMatcherName","brand","showContactDisplayPlaceholder","sourceIcons","userPhoneNumber","formatPhone","propTypes","PropTypes","string","func","isRequired","array","number","bool","object","defaultProps","undefined","ActiveCallPanel","onBackButtonClick","backButtonLabel","startTime","startTimeOffset","isOnMute","isOnHold","recordStatus","onMute","onUnmute","onHold","onUnhold","onRecord","onStopRecord","onShowKeyPad","onHangup","onPark","onAdd","onShowFlipPanel","onToggleTransferPanel","children","flipNumbers","calls","timeCounter","backHeader","length","hidden","root","panel","callPad","node"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,SAASA,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,MAAIC,eAAJ;AACA,MAAID,MAAME,SAAV,EAAqB;AACnBD,aAAU,uCAAK,KAAKD,MAAME,SAAhB,EAA2B,KAAI,QAA/B,GAAV;AACD,GAFD,MAEO;AACLD,aAAU,qCAAG,WAAW,0BAAWE,uBAAaC,QAAxB,EAAkCC,iBAAOC,IAAzC,CAAd,GAAV;AACD;AACD,SACE;AAAA;AAAA,MAAK,WAAWD,iBAAOE,QAAvB;AACE;AAAA;AAAA,QAAK,WAAWF,iBAAOG,eAAvB;AACE;AAAA;AAAA,UAAK,WAAWH,iBAAOJ,MAAvB;AACGA;AADH;AADF,KADF;AAME;AAAA;AAAA,QAAK,WAAWI,iBAAOI,QAAvB;AACE,oCAAC,wBAAD;AACE,mBAAWJ,iBAAOK,cADpB;AAEE,yBAAiBL,iBAAOM,QAF1B;AAGE,wBAAgBX,MAAMY,WAHxB;AAIE,qBAAaZ,MAAMa,WAJrB;AAKE,sBAAcb,MAAMc,YALtB;AAME,uBAAed,MAAMe,aANvB;AAOE,kBAAUf,MAAMgB,QAPlB;AAQE,qBAAahB,MAAMiB,WARrB;AASE,kBAAU,KATZ;AAUE,kBAAU,KAVZ;AAWE,kBAAUjB,MAAMkB,oBAXlB;AAYE,yBAAiBlB,MAAMmB,mBAZzB;AAaE,mBAAW,KAbb;AAcE,mCAdF;AAeE,eAAOnB,MAAMoB,KAff;AAgBE,yBAAiBpB,MAAMqB,6BAhBzB;AAiBE,qBAAarB,MAAMsB;AAjBrB;AADF,KANF;AA2BE;AAAA;AAAA,QAAK,WAAWjB,iBAAOkB,eAAvB;AACGvB,YAAMwB,WAAN,CAAkBxB,MAAMa,WAAxB;AADH;AA3BF,GADF;AAiCD;;AAEDd,SAAS0B,SAAT,GAAqB;AACnBZ,eAAaa,oBAAUC,MADJ;AAEnBH,eAAaE,oBAAUE,IAAV,CAAeC,UAFT;AAGnBjB,eAAac,oBAAUI,KAAV,CAAgBD,UAHV;AAInBf,gBAAcY,oBAAUC,MAAV,CAAiBE,UAJZ;AAKnBb,YAAUU,oBAAUC,MAAV,CAAiBE,UALR;AAMnBZ,eAAaS,oBAAUC,MAAV,CAAiBE,UANX;AAOnBd,iBAAeW,oBAAUC,MAAV,CAAiBE,UAPb;AAQnBX,wBAAsBQ,oBAAUK,MAAV,CAAiBF,UARpB;AASnBV,uBAAqBO,oBAAUE,IAAV,CAAeC,UATjB;AAUnB3B,aAAWwB,oBAAUC,MAVF;AAWnBP,SAAOM,oBAAUC,MAXE;AAYnBN,iCAA+BK,oBAAUM,IAZtB;AAanBV,eAAaI,oBAAUO;AAbJ,CAArB;;AAgBAlC,SAASmC,YAAT,GAAwB;AACtBrB,eAAa,IADS;AAEtBX,aAAW,IAFW;AAGtBkB,SAAO,aAHe;AAItBC,iCAA+B,IAJT;AAKtBC,eAAaa;AALS,CAAxB;;AAQA,SAASC,eAAT,OAoCG;AAAA,MAnCDC,iBAmCC,QAnCDA,iBAmCC;AAAA,MAlCDC,eAkCC,QAlCDA,eAkCC;AAAA,MAjCDvB,aAiCC,QAjCDA,aAiCC;AAAA,MAhCDH,WAgCC,QAhCDA,WAgCC;AAAA,MA/BDE,YA+BC,QA/BDA,YA+BC;AAAA,MA9BDD,WA8BC,QA9BDA,WA8BC;AAAA,MA7BDW,WA6BC,QA7BDA,WA6BC;AAAA,MA5BDe,SA4BC,QA5BDA,SA4BC;AAAA,MA3BDC,eA2BC,QA3BDA,eA2BC;AAAA,MA1BDxB,QA0BC,QA1BDA,QA0BC;AAAA,MAzBDC,WAyBC,QAzBDA,WAyBC;AAAA,MAxBDC,oBAwBC,QAxBDA,oBAwBC;AAAA,MAvBDC,mBAuBC,QAvBDA,mBAuBC;AAAA,MAtBDjB,SAsBC,QAtBDA,SAsBC;AAAA,MArBDuC,QAqBC,QArBDA,QAqBC;AAAA,MApBDC,QAoBC,QApBDA,QAoBC;AAAA,MAnBDC,YAmBC,QAnBDA,YAmBC;AAAA,MAlBDC,MAkBC,QAlBDA,MAkBC;AAAA,MAjBDC,QAiBC,QAjBDA,QAiBC;AAAA,MAhBDC,MAgBC,QAhBDA,MAgBC;AAAA,MAfDC,QAeC,QAfDA,QAeC;AAAA,MAdDC,QAcC,QAdDA,QAcC;AAAA,MAbDC,YAaC,QAbDA,YAaC;AAAA,MAZDC,YAYC,QAZDA,YAYC;AAAA,MAXDC,QAWC,QAXDA,QAWC;AAAA,MAVDC,MAUC,QAVDA,MAUC;AAAA,MATDC,KASC,QATDA,KASC;AAAA,MARDC,eAQC,QARDA,eAQC;AAAA,MAPDC,qBAOC,QAPDA,qBAOC;AAAA,MANDC,QAMC,QANDA,QAMC;AAAA,MALDnC,6BAKC,QALDA,6BAKC;AAAA,MAJDD,KAIC,QAJDA,KAIC;AAAA,MAHDqC,WAGC,QAHDA,WAGC;AAAA,MAFDC,KAEC,QAFDA,KAEC;AAAA,MADDpC,WACC,QADDA,WACC;;AACD,MAAMqC,cAAcpB,YAEhB;AAAA;AAAA,MAAM,WAAWlC,iBAAOsD,WAAxB;AACE,kCAAC,yBAAD,IAAiB,WAAWpB,SAA5B,EAAuC,QAAQC,eAA/C;AADF,GAFgB,GAKd,IALN;AAMA,MAAMoB,aAAaF,MAAMG,MAAN,GAAe,CAAf,GACjB,8BAAC,oBAAD;AACE,iBAAaxB,iBADf;AAEE,gBAAY,8BAAC,oBAAD,IAAY,OAAOC,eAAnB;AAFd,IADiB,GAKf,8BAAC,oBAAD,IAAY,WAAWjC,iBAAOyD,MAA9B,GALJ;AAMA,SACE;AAAA;AAAA,MAAK,WAAWzD,iBAAO0D,IAAvB;AACGH,cADH;AAEE;AAAC,qBAAD;AAAA,QAAO,WAAWvD,iBAAO2D,KAAzB;AACGL,iBADH;AAEE,oCAAC,QAAD;AACE,uBAAe5C,aADjB;AAEE,qBAAaH,WAFf;AAGE,sBAAcE,YAHhB;AAIE,qBAAaD,WAJf;AAKE,qBAAaW,WALf;AAME,mBAAWe,SANb;AAOE,kBAAUvB,QAPZ;AAQE,qBAAaC,WARf;AASE,8BAAsBC,oBATxB;AAUE,6BAAqBC,mBAVvB;AAWE,mBAAWjB,SAXb;AAYE,eAAOkB,KAZT;AAaE,uCAA+BC,6BAbjC;AAcE,qBAAaC;AAdf,QAFF;AAkBE,oCAAC,uBAAD;AACE,mBAAWjB,iBAAO4D,OADpB;AAEE,uBAAelD,aAFjB;AAGE,kBAAU0B,QAHZ;AAIE,kBAAUC,QAJZ;AAKE,sBAAcC,YALhB;AAME,gBAAQC,MANV;AAOE,kBAAUC,QAPZ;AAQE,gBAAQC,MARV;AASE,kBAAUC,QATZ;AAUE,kBAAUC,QAVZ;AAWE,sBAAcC,YAXhB;AAYE,sBAAcC,YAZhB;AAaE,kBAAUC,QAbZ;AAcE,eAAOE,KAdT;AAeE,yBAAiBC,eAfnB;AAgBE,+BAAuBC,qBAhBzB;AAiBE,qBAAaE,WAjBf;AAkBE,gBAAQL;AAlBV,QAlBF;AAsCGI;AAtCH;AAFF,GADF;AA6CD;;AAEDpB,gBAAgBX,SAAhB,GAA4B;AAC1BZ,eAAaa,oBAAUC,MADG;AAE1Bf,eAAac,oBAAUI,KAAV,CAAgBD,UAFH;AAG1Bf,gBAAcY,oBAAUC,MAAV,CAAiBE,UAHL;AAI1Bd,iBAAeW,oBAAUC,MAAV,CAAiBE,UAJN;AAK1BU,aAAWb,oBAAUK,MALK;AAM1BS,mBAAiBd,oBAAUK,MAND;AAO1BU,YAAUf,oBAAUM,IAPM;AAQ1BU,YAAUhB,oBAAUM,IARM;AAS1BW,gBAAcjB,oBAAUC,MAAV,CAAiBE,UATL;AAU1Be,UAAQlB,oBAAUE,IAAV,CAAeC,UAVG;AAW1BgB,YAAUnB,oBAAUE,IAAV,CAAeC,UAXC;AAY1BiB,UAAQpB,oBAAUE,IAAV,CAAeC,UAZG;AAa1BkB,YAAUrB,oBAAUE,IAAV,CAAeC,UAbC;AAc1BmB,YAAUtB,oBAAUE,IAAV,CAAeC,UAdC;AAe1BoB,gBAAcvB,oBAAUE,IAAV,CAAeC,UAfH;AAgB1BwB,SAAO3B,oBAAUE,IAAV,CAAeC,UAhBI;AAiB1BsB,YAAUzB,oBAAUE,IAAV,CAAeC,UAjBC;AAkB1BuB,UAAQ1B,oBAAUE,IAAV,CAAeC,UAlBG;AAmB1BQ,qBAAmBX,oBAAUE,IAAV,CAAeC,UAnBR;AAoB1BqB,gBAAcxB,oBAAUE,IAAV,CAAeC,UApBH;AAqB1BL,eAAaE,oBAAUE,IAAV,CAAeC,UArBF;AAsB1B2B,YAAU9B,oBAAUwC,IAtBM;AAuB1BlD,YAAUU,oBAAUC,MAAV,CAAiBE,UAvBD;AAwB1BZ,eAAaS,oBAAUC,MAAV,CAAiBE,UAxBJ;AAyB1BX,wBAAsBQ,oBAAUK,MAAV,CAAiBF,UAzBb;AA0B1BV,uBAAqBO,oBAAUE,IAAV,CAAeC,UA1BV;AA2B1B3B,aAAWwB,oBAAUC,MA3BK;AA4B1BW,mBAAiBZ,oBAAUC,MA5BD;AA6B1BP,SAAOM,oBAAUC,MA7BS;AA8B1BN,iCAA+BK,oBAAUM,IA9Bf;AA+B1BsB,mBAAiB5B,oBAAUE,IA/BD;AAgC1B6B,eAAa/B,oBAAUI,KAhCG;AAiC1B4B,SAAOhC,oBAAUI,KAAV,CAAgBD,UAjCG;AAkC1B0B,yBAAuB7B,oBAAUE,IAlCP;AAmC1BN,eAAaI,oBAAUO;AAnCG,CAA5B;;AAsCAG,gBAAgBF,YAAhB,GAA+B;AAC7BK,aAAW,IADkB;AAE7BC,mBAAiB,CAFY;AAG7BC,YAAU,KAHmB;AAI7BC,YAAU,KAJmB;AAK7B7B,eAAa,IALgB;AAM7B2C,YAAUrB,SANmB;AAO7BjC,aAAW,IAPkB;AAQ7BoC,mBAAiB,cARY;AAS7BlB,SAAO,aATsB;AAU7BC,iCAA+B,IAVF;AAW7BoC,eAAa,EAXgB;AAY7BH,mBAAiB;AAAA,WAAM,IAAN;AAAA,GAZY;AAa7BC,yBAAuB;AAAA,WAAM,IAAN;AAAA,GAbM;AAc7BjC,eAAaa;AAdgB,CAA/B;;kBAiBeC,e","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport BackButton from '../BackButton';\nimport BackHeader from '../BackHeader';\nimport Panel from '../Panel';\nimport DurationCounter from '../DurationCounter';\nimport ActiveCallPad from '../ActiveCallPad';\nimport ContactDisplay from '../ContactDisplay';\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\nimport styles from './styles.scss';\n\nfunction CallInfo(props) {\n  let avatar;\n  if (props.avatarUrl) {\n    avatar = (<img src={props.avatarUrl} alt=\"avatar\" />);\n  } else {\n    avatar = (<i className={classnames(dynamicsFont.portrait, styles.icon)} />);\n  }\n  return (\n    <div className={styles.userInfo}>\n      <div className={styles.avatarContainer}>\n        <div className={styles.avatar}>\n          {avatar}\n        </div>\n      </div>\n      <div className={styles.userName}>\n        <ContactDisplay\n          className={styles.contactDisplay}\n          selectClassName={styles.dropdown}\n          contactMatches={props.nameMatches}\n          phoneNumber={props.phoneNumber}\n          fallBackName={props.fallBackName}\n          currentLocale={props.currentLocale}\n          areaCode={props.areaCode}\n          countryCode={props.countryCode}\n          showType={false}\n          disabled={false}\n          selected={props.selectedMatcherIndex}\n          onSelectContact={props.onSelectMatcherName}\n          isLogging={false}\n          enableContactFallback\n          brand={props.brand}\n          showPlaceholder={props.showContactDisplayPlaceholder}\n          sourceIcons={props.sourceIcons}\n        />\n      </div>\n      <div className={styles.userPhoneNumber}>\n        {props.formatPhone(props.phoneNumber)}\n      </div>\n    </div>\n  );\n}\n\nCallInfo.propTypes = {\n  phoneNumber: PropTypes.string,\n  formatPhone: PropTypes.func.isRequired,\n  nameMatches: PropTypes.array.isRequired,\n  fallBackName: PropTypes.string.isRequired,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  selectedMatcherIndex: PropTypes.number.isRequired,\n  onSelectMatcherName: PropTypes.func.isRequired,\n  avatarUrl: PropTypes.string,\n  brand: PropTypes.string,\n  showContactDisplayPlaceholder: PropTypes.bool,\n  sourceIcons: PropTypes.object,\n};\n\nCallInfo.defaultProps = {\n  phoneNumber: null,\n  avatarUrl: null,\n  brand: 'RingCentral',\n  showContactDisplayPlaceholder: true,\n  sourceIcons: undefined,\n};\n\nfunction ActiveCallPanel({\n  onBackButtonClick,\n  backButtonLabel,\n  currentLocale,\n  nameMatches,\n  fallBackName,\n  phoneNumber,\n  formatPhone,\n  startTime,\n  startTimeOffset,\n  areaCode,\n  countryCode,\n  selectedMatcherIndex,\n  onSelectMatcherName,\n  avatarUrl,\n  isOnMute,\n  isOnHold,\n  recordStatus,\n  onMute,\n  onUnmute,\n  onHold,\n  onUnhold,\n  onRecord,\n  onStopRecord,\n  onShowKeyPad,\n  onHangup,\n  onPark,\n  onAdd,\n  onShowFlipPanel,\n  onToggleTransferPanel,\n  children,\n  showContactDisplayPlaceholder,\n  brand,\n  flipNumbers,\n  calls,\n  sourceIcons,\n}) {\n  const timeCounter = startTime ?\n    (\n      <span className={styles.timeCounter}>\n        <DurationCounter startTime={startTime} offset={startTimeOffset} />\n      </span>\n    ) : null;\n  const backHeader = calls.length > 1 ? (\n    <BackHeader\n      onBackClick={onBackButtonClick}\n      backButton={<BackButton label={backButtonLabel} />}\n    />\n  ) : <BackHeader className={styles.hidden} />;\n  return (\n    <div className={styles.root}>\n      {backHeader}\n      <Panel className={styles.panel}>\n        {timeCounter}\n        <CallInfo\n          currentLocale={currentLocale}\n          nameMatches={nameMatches}\n          fallBackName={fallBackName}\n          phoneNumber={phoneNumber}\n          formatPhone={formatPhone}\n          startTime={startTime}\n          areaCode={areaCode}\n          countryCode={countryCode}\n          selectedMatcherIndex={selectedMatcherIndex}\n          onSelectMatcherName={onSelectMatcherName}\n          avatarUrl={avatarUrl}\n          brand={brand}\n          showContactDisplayPlaceholder={showContactDisplayPlaceholder}\n          sourceIcons={sourceIcons}\n        />\n        <ActiveCallPad\n          className={styles.callPad}\n          currentLocale={currentLocale}\n          isOnMute={isOnMute}\n          isOnHold={isOnHold}\n          recordStatus={recordStatus}\n          onMute={onMute}\n          onUnmute={onUnmute}\n          onHold={onHold}\n          onUnhold={onUnhold}\n          onRecord={onRecord}\n          onStopRecord={onStopRecord}\n          onShowKeyPad={onShowKeyPad}\n          onHangup={onHangup}\n          onAdd={onAdd}\n          onShowFlipPanel={onShowFlipPanel}\n          onToggleTransferPanel={onToggleTransferPanel}\n          flipNumbers={flipNumbers}\n          onPark={onPark}\n        />\n        {children}\n      </Panel>\n    </div>\n  );\n}\n\nActiveCallPanel.propTypes = {\n  phoneNumber: PropTypes.string,\n  nameMatches: PropTypes.array.isRequired,\n  fallBackName: PropTypes.string.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  startTime: PropTypes.number,\n  startTimeOffset: PropTypes.number,\n  isOnMute: PropTypes.bool,\n  isOnHold: PropTypes.bool,\n  recordStatus: PropTypes.string.isRequired,\n  onMute: PropTypes.func.isRequired,\n  onUnmute: PropTypes.func.isRequired,\n  onHold: PropTypes.func.isRequired,\n  onUnhold: PropTypes.func.isRequired,\n  onRecord: PropTypes.func.isRequired,\n  onStopRecord: PropTypes.func.isRequired,\n  onAdd: PropTypes.func.isRequired,\n  onHangup: PropTypes.func.isRequired,\n  onPark: PropTypes.func.isRequired,\n  onBackButtonClick: PropTypes.func.isRequired,\n  onShowKeyPad: PropTypes.func.isRequired,\n  formatPhone: PropTypes.func.isRequired,\n  children: PropTypes.node,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  selectedMatcherIndex: PropTypes.number.isRequired,\n  onSelectMatcherName: PropTypes.func.isRequired,\n  avatarUrl: PropTypes.string,\n  backButtonLabel: PropTypes.string,\n  brand: PropTypes.string,\n  showContactDisplayPlaceholder: PropTypes.bool,\n  onShowFlipPanel: PropTypes.func,\n  flipNumbers: PropTypes.array,\n  calls: PropTypes.array.isRequired,\n  onToggleTransferPanel: PropTypes.func,\n  sourceIcons: PropTypes.object,\n};\n\nActiveCallPanel.defaultProps = {\n  startTime: null,\n  startTimeOffset: 0,\n  isOnMute: false,\n  isOnHold: false,\n  phoneNumber: null,\n  children: undefined,\n  avatarUrl: null,\n  backButtonLabel: 'Active Calls',\n  brand: 'RingCentral',\n  showContactDisplayPlaceholder: true,\n  flipNumbers: [],\n  onShowFlipPanel: () => null,\n  onToggleTransferPanel: () => null,\n  sourceIcons: undefined,\n};\n\nexport default ActiveCallPanel;\n"]}