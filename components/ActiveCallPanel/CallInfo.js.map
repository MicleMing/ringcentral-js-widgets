{"version":3,"sources":["components/ActiveCallPanel/CallInfo.js"],"names":["CallInfo","props","avatar","avatarUrl","dynamicsFont","portrait","styles","icon","userInfo","avatarContainer","userName","contactDisplay","dropdown","nameMatches","phoneNumber","fallBackName","currentLocale","areaCode","countryCode","selectedMatcherIndex","onSelectMatcherName","brand","showContactDisplayPlaceholder","sourceIcons","userPhoneNumber","formatPhone","propTypes","PropTypes","string","func","isRequired","array","number","bool","object","defaultProps","undefined"],"mappings":";;;;;kBAOwBA,Q;;AAPxB;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEe,SAASA,QAAT,CAAkBC,KAAlB,EAAyB;AACtC,MAAIC,eAAJ;AACA;AACA,MAAID,MAAME,SAAV,EAAqB;AACnBD,aAAU,uCAAK,KAAKD,MAAME,SAAhB,EAA2B,KAAI,QAA/B,GAAV;AACD,GAFD,MAEO;AACLD,aAAU,qCAAG,WAAW,0BAAWE,uBAAaC,QAAxB,EAAkCC,iBAAOC,IAAzC,CAAd,GAAV;AACD;AACD,SACE;AAAA;AAAA,MAAK,WAAWD,iBAAOE,QAAvB;AACE;AAAA;AAAA,QAAK,WAAWF,iBAAOG,eAAvB;AACE;AAAA;AAAA,UAAK,WAAWH,iBAAOJ,MAAvB;AACGA;AADH;AADF,KADF;AAME;AAAA;AAAA,QAAK,WAAWI,iBAAOI,QAAvB;AACE,oCAAC,wBAAD;AACE,mBAAWJ,iBAAOK,cADpB;AAEE,yBAAiBL,iBAAOM,QAF1B;AAGE,wBAAgBX,MAAMY,WAHxB;AAIE,qBAAaZ,MAAMa,WAJrB;AAKE,sBAAcb,MAAMc,YALtB;AAME,uBAAed,MAAMe,aANvB;AAOE,kBAAUf,MAAMgB,QAPlB;AAQE,qBAAahB,MAAMiB,WARrB;AASE,kBAAU,KATZ;AAUE,kBAAU,KAVZ;AAWE,kBAAUjB,MAAMkB,oBAXlB;AAYE,yBAAiBlB,MAAMmB,mBAZzB;AAaE,mBAAW,KAbb;AAcE,mCAdF;AAeE,eAAOnB,MAAMoB,KAff;AAgBE,yBAAiBpB,MAAMqB,6BAhBzB;AAiBE,qBAAarB,MAAMsB;AAjBrB;AADF,KANF;AA2BE;AAAA;AAAA,QAAK,WAAWjB,iBAAOkB,eAAvB;AACGvB,YAAMwB,WAAN,CAAkBxB,MAAMa,WAAxB;AADH;AA3BF,GADF;AAiCD;;AAEDd,SAAS0B,SAAT,GAAqB;AACnBZ,eAAaa,oBAAUC,MADJ;AAEnBH,eAAaE,oBAAUE,IAAV,CAAeC,UAFT;AAGnBjB,eAAac,oBAAUI,KAAV,CAAgBD,UAHV;AAInBf,gBAAcY,oBAAUC,MAAV,CAAiBE,UAJZ;AAKnBb,YAAUU,oBAAUC,MAAV,CAAiBE,UALR;AAMnBZ,eAAaS,oBAAUC,MAAV,CAAiBE,UANX;AAOnBd,iBAAeW,oBAAUC,MAAV,CAAiBE,UAPb;AAQnBX,wBAAsBQ,oBAAUK,MAAV,CAAiBF,UARpB;AASnBV,uBAAqBO,oBAAUE,IAAV,CAAeC,UATjB;AAUnB3B,aAAWwB,oBAAUC,MAVF;AAWnBP,SAAOM,oBAAUC,MAXE;AAYnBN,iCAA+BK,oBAAUM,IAZtB;AAanBV,eAAaI,oBAAUO;AAbJ,CAArB;;AAgBAlC,SAASmC,YAAT,GAAwB;AACtBrB,eAAa,IADS;AAEtBX,aAAW,IAFW;AAGtBkB,SAAO,aAHe;AAItBC,iCAA+B,IAJT;AAKtBC,eAAaa;AALS,CAAxB","file":"CallInfo.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport ContactDisplay from '../ContactDisplay';\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\nimport styles from './styles.scss';\n\nexport default function CallInfo(props) {\n  let avatar;\n  // todo: conference avatars\n  if (props.avatarUrl) {\n    avatar = (<img src={props.avatarUrl} alt=\"avatar\" />);\n  } else {\n    avatar = (<i className={classnames(dynamicsFont.portrait, styles.icon)} />);\n  }\n  return (\n    <div className={styles.userInfo}>\n      <div className={styles.avatarContainer}>\n        <div className={styles.avatar}>\n          {avatar}\n        </div>\n      </div>\n      <div className={styles.userName}>\n        <ContactDisplay\n          className={styles.contactDisplay}\n          selectClassName={styles.dropdown}\n          contactMatches={props.nameMatches}\n          phoneNumber={props.phoneNumber}\n          fallBackName={props.fallBackName}\n          currentLocale={props.currentLocale}\n          areaCode={props.areaCode}\n          countryCode={props.countryCode}\n          showType={false}\n          disabled={false}\n          selected={props.selectedMatcherIndex}\n          onSelectContact={props.onSelectMatcherName}\n          isLogging={false}\n          enableContactFallback\n          brand={props.brand}\n          showPlaceholder={props.showContactDisplayPlaceholder}\n          sourceIcons={props.sourceIcons}\n        />\n      </div>\n      <div className={styles.userPhoneNumber}>\n        {props.formatPhone(props.phoneNumber)}\n      </div>\n    </div>\n  );\n}\n\nCallInfo.propTypes = {\n  phoneNumber: PropTypes.string,\n  formatPhone: PropTypes.func.isRequired,\n  nameMatches: PropTypes.array.isRequired,\n  fallBackName: PropTypes.string.isRequired,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  selectedMatcherIndex: PropTypes.number.isRequired,\n  onSelectMatcherName: PropTypes.func.isRequired,\n  avatarUrl: PropTypes.string,\n  brand: PropTypes.string,\n  showContactDisplayPlaceholder: PropTypes.bool,\n  sourceIcons: PropTypes.object,\n};\n\nCallInfo.defaultProps = {\n  phoneNumber: null,\n  avatarUrl: null,\n  brand: 'RingCentral',\n  showContactDisplayPlaceholder: true,\n  sourceIcons: undefined,\n};\n"]}