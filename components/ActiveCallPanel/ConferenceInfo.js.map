{"version":3,"sources":["components/ActiveCallPanel/ConferenceInfo.js"],"names":["ConferenceInfo","displayedProfiles","remains","onClick","styles","conferenceCallInfoContainer","e","preventDefault","Array","isArray","length","avatarContainer","map","idx","avatarUrl","toUserName","avatar","backgroundImage","backgroundColor","dynamicsFont","portrait","icon","info","i18n","getString","propTypes","PropTypes","arrayOf","shape","string","isRequired","number","func","defaultProps","i"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEe,SAASA,cAAT,OAIZ;AAAA,MAHDC,iBAGC,QAHDA,iBAGC;AAAA,MAFDC,OAEC,QAFDA,OAEC;AAAA,MADDC,QACC,QADDA,OACC;;AACD,SACE;AAAA;AAAA;AACE,iBAAWC,iBAAOC,2BADpB;AAEE,eAAS,iBAACC,CAAD,EAAO;AAAEA,UAAEC,cAAF,GAAoBJ;AAAY;AAFpD;AAKIK,UAAMC,OAAN,CAAcR,iBAAd,KAAoCA,kBAAkBS,MAAtD,GAEI;AAAA;AAAA,QAAK,WAAWN,iBAAOO,eAAvB;AAEIV,wBAAkBW,GAAlB,CAAsB,iBAA4BC,GAA5B;AAAA,YAAGC,SAAH,SAAGA,SAAH;AAAA,YAAcC,UAAd,SAAcA,UAAd;AAAA,eACpB;AAAA;AAAA;AACE,iBAAQA,UAAR,SAAsBF,GADxB;AAEE,uBAAWT,iBAAOY,MAFpB;AAGE,mBAAOF,YACH,EAAEG,0BAAwBH,SAAxB,MAAF,EADG,GAEH,EAAEI,iBAAiB,MAAnB,EALN;AAOGJ,sBACG,IADH,GAEG,qCAAG,WAAW,0BAAWK,uBAAaC,QAAxB,EAAkChB,iBAAOiB,IAAzC,CAAd;AATN,SADoB;AAAA,OAAtB,CAFJ;AAiBInB,gBACK;AAAA;AAAA,UAAK,WAAW,0BAAWE,iBAAOY,MAAlB,EAA0BZ,iBAAOF,OAAjC,CAAhB;AAAA,cAAgEA;AAAhE,OADL,GAEI;AAnBR,KAFJ,GA0BI;AAAA;AAAA,QAAK,WAAWE,iBAAOO,eAAvB;AACE;AAAA;AAAA,UAAK,WAAWP,iBAAOY,MAAvB,EAA+B,OAAO,EAAEE,iBAAiB,MAAnB,EAAtC;AACE,6CAAG,WAAW,0BAAWC,uBAAaC,QAAxB,EAAkChB,iBAAOiB,IAAzC,CAAd;AADF;AADF,KA/BR;AAsCE;AAAA;AAAA,QAAG,WAAWjB,iBAAOkB,IAArB;AACGC,qBAAKC,SAAL,CAAe,gBAAf;AADH;AAtCF,GADF;AA4CD;;;AAEDxB,eAAeyB,SAAf,GAA2B;AACzBxB,qBAAmByB,oBAAUC,OAAV,CAAkBD,oBAAUE,KAAV,CAAgB;AACnDd,eAAWY,oBAAUG,MAD8B;AAEnDd,gBAAYW,oBAAUG;AAF6B,GAAhB,CAAlB,EAGfC,UAJqB;AAKzB5B,WAASwB,oBAAUK,MALM;AAMzB5B,WAASuB,oBAAUM;AANM,CAA3B;;AASAhC,eAAeiC,YAAf,GAA8B;AAC5B/B,WAAS,CADmB;AAE5BC,WAAS;AAAA,WAAK+B,CAAL;AAAA;AAFmB,CAA9B","file":"ConferenceInfo.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport styles from './styles.scss';\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\nimport i18n from './i18n';\n\nexport default function ConferenceInfo({\n  displayedProfiles,\n  remains,\n  onClick,\n}) {\n  return (\n    <a\n      className={styles.conferenceCallInfoContainer}\n      onClick={(e) => { e.preventDefault(); onClick(); }}\n    >\n      {\n        Array.isArray(displayedProfiles) && displayedProfiles.length\n          ? (\n            <div className={styles.avatarContainer}>\n              {\n                displayedProfiles.map(({ avatarUrl, toUserName }, idx) => (\n                  <div\n                    key={`${toUserName}_${idx}`}\n                    className={styles.avatar}\n                    style={avatarUrl\n                      ? { backgroundImage: `url(${avatarUrl})` }\n                      : { backgroundColor: '#fff' }\n                    }>\n                    {avatarUrl\n                      ? null\n                      : <i className={classnames(dynamicsFont.portrait, styles.icon)} />}\n                  </div>\n                )\n                )\n              }{\n                remains\n                  ? (<div className={classnames(styles.avatar, styles.remains)}>{`+${remains}`}</div>)\n                  : null\n              }\n            </div>\n          )\n          : (\n            <div className={styles.avatarContainer}>\n              <div className={styles.avatar} style={{ backgroundColor: '#fff' }}>\n                <i className={classnames(dynamicsFont.portrait, styles.icon)} />\n              </div>\n            </div>\n          )\n      }\n      <p className={styles.info}>\n        {i18n.getString('conferenceCall')}\n      </p>\n    </a>\n  );\n}\n\nConferenceInfo.propTypes = {\n  displayedProfiles: PropTypes.arrayOf(PropTypes.shape({\n    avatarUrl: PropTypes.string,\n    toUserName: PropTypes.string,\n  })).isRequired,\n  remains: PropTypes.number,\n  onClick: PropTypes.func\n};\n\nConferenceInfo.defaultProps = {\n  remains: 0,\n  onClick: i => i,\n};\n"]}