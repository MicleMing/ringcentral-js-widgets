{"version":3,"sources":["components/TabContentPanel/index.js"],"names":["TabTitle","label","isActive","styles","tabTitle","active","propTypes","PropTypes","string","isRequired","func","TabContentPanel","applicable","tabs","goTo","children","formattedTabs","map","icon","tab","path","root","MessageTabButton","tabBar","content","bool","arrayOf","shape","node","defaultProps"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;;;AAEA,SAASA,QAAT,OAGG;AAAA,MAFDC,KAEC,QAFDA,KAEC;AAAA,MADDC,QACC,QADDA,QACC;;AACD,SACE;AAAA;AAAA,MAAM,WAAW,0BAAWC,iBAAOC,QAAlB,EAA4BF,aAAaC,iBAAOE,MAApB,GAA6B,IAAzD,CAAjB;AACGJ;AADH,GADF;AAKD;;AAEDD,SAASM,SAAT,GAAqB;AACnBL,SAAOM,oBAAUC,MAAV,CAAiBC,UADL;AAEnBP,YAAUK,oBAAUG,IAAV,CAAeD;AAFN,CAArB;;AAKA,SAASE,eAAT,QAKG;AAAA,MAJDC,UAIC,SAJDA,UAIC;AAAA,MAHDC,IAGC,SAHDA,IAGC;AAAA,MAFDC,IAEC,SAFDA,IAEC;AAAA,MADDC,QACC,SADDA,QACC;;AACD,MAAI,CAACH,UAAL,EAAiB;AACf,WAAOG,QAAP;AACD;;AAED,MAAMC,gBAAgBH,KAAKI,GAAL,CAAS;AAAA,WAAQ;AACrCC,YACE,8BAAC,QAAD;AACE,eAAOC,IAAIlB,KADb;AAEE,kBAAUkB,IAAIjB;AAFhB,QAFmC;AAOrCD,aAAOkB,IAAIlB,KAP0B;AAQrCmB,YAAMD,IAAIC,IAR2B;AASrClB,gBAAUiB,IAAIjB;AATuB,KAAR;AAAA,GAAT,CAAtB;;AAYA,SACE;AAAA;AAAA,MAAK,WAAWC,iBAAOkB,IAAvB;AACE,kCAAC,uBAAD;AACE,cAAQC,0BADV;AAEE,iBAAWnB,iBAAOoB,MAFpB;AAGE,mBAAY,EAHd;AAIE,YAAMT,IAJR;AAKE,YAAME,aALR;AAME,mBAAa;AANf,MADF;AASE;AAAA;AAAA,QAAK,WAAWb,iBAAOqB,OAAvB;AACGT;AADH;AATF,GADF;AAeD;;AAEDJ,gBAAgBL,SAAhB,GAA4B;AAC1BM,cAAYL,oBAAUkB,IAAV,CAAehB,UADD;AAE1BI,QAAMN,oBAAUmB,OAAV,CAAkBnB,oBAAUoB,KAAV,CAAgB;AACtCP,UAAMb,oBAAUC,MAAV,CAAiBC,UADe;AAEtCR,WAAOM,oBAAUC,MAAV,CAAiBC,UAFc;AAGtCP,cAAUK,oBAAUG,IAAV,CAAeD;AAHa,GAAhB,CAAlB,EAIFA,UANsB;AAO1BK,QAAMP,oBAAUG,IAAV,CAAeD,UAPK;AAQ1BM,YAAUR,oBAAUqB;AARM,CAA5B;;AAWAjB,gBAAgBkB,YAAhB,GAA+B;AAC7Bd,YAAU;AADmB,CAA/B;;kBAIeJ,e","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport NavigationBar from '../../components/NavigationBar';\nimport MessageTabButton from '../../components/MessageTabButton';\nimport styles from './styles.scss';\n\nfunction TabTitle({\n  label,\n  isActive,\n}) {\n  return (\n    <span className={classnames(styles.tabTitle, isActive() ? styles.active : null)}>\n      {label}\n    </span>\n  );\n}\n\nTabTitle.propTypes = {\n  label: PropTypes.string.isRequired,\n  isActive: PropTypes.func.isRequired,\n};\n\nfunction TabContentPanel({\n  applicable,\n  tabs,\n  goTo,\n  children,\n}) {\n  if (!applicable) {\n    return children;\n  }\n\n  const formattedTabs = tabs.map(tab => ({\n    icon: (\n      <TabTitle\n        label={tab.label}\n        isActive={tab.isActive}\n      />\n    ),\n    label: tab.label,\n    path: tab.path,\n    isActive: tab.isActive,\n  }));\n\n  return (\n    <div className={styles.root}>\n      <NavigationBar\n        button={MessageTabButton}\n        className={styles.tabBar}\n        currentPath=\"\"\n        goTo={goTo}\n        tabs={formattedTabs}\n        fullSizeInk={false}\n      />\n      <div className={styles.content}>\n        {children}\n      </div>\n    </div>\n  );\n}\n\nTabContentPanel.propTypes = {\n  applicable: PropTypes.bool.isRequired,\n  tabs: PropTypes.arrayOf(PropTypes.shape({\n    path: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    isActive: PropTypes.func.isRequired,\n  })).isRequired,\n  goTo: PropTypes.func.isRequired,\n  children: PropTypes.node,\n};\n\nTabContentPanel.defaultProps = {\n  children: null,\n};\n\nexport default TabContentPanel;\n"]}