{"version":3,"sources":["components/CallItem/index.js"],"names":["callIconMap","callDirections","inbound","dynamicsFont","outbound","missed","CallIcon","direction","active","ringing","inboundTitle","outboundTitle","missedTitle","type","icon","messageTypes","fax","messageDirection","title","styles","activeCall","callIcon","propTypes","PropTypes","string","isRequired","bool","defaultProps","CallItem","props","onSelectContact","value","idx","selected","showContactDisplayPlaceholder","parseInt","_userSelection","setState","call","activityMatches","length","autoLog","logCall","redirect","toggleExtended","e","contactDisplay","contains","target","extended","preState","getSelectedContact","state","contactMatches","getContactMatches","bind","viewSelectedContact","onViewContact","contact","createSelectedContact","entityType","onCreateContact","_mounted","isCreating","phoneNumber","getPhoneNumber","name","enableContactFallback","getFallbackContactName","clickToSms","countryCode","areaCode","onClickToSms","formatted","clickToDial","onClickToDial","getInitialContactIndex","isLogging","loading","_loadingTimeout","setTimeout","nextProps","fromMatches","toMatches","clearTimeout","activity","index","findIndex","isLoggedContact","toNumberEntity","id","from","extensionNumber","to","onLogCall","root","telephonyStatus","result","startTime","duration","offset","brand","currentLocale","disableLinks","disableClickToDial","outboundSmsPermission","internalSmsPermission","dateTimeFormatter","sourceIcons","renderContactName","renderExtraButton","contactDisplayStyle","externalViewEntity","externalHasEntity","fallbackContactName","parsedInfo","isExtension","hasPlus","number","showClickToSms","durationEl","i18n","getString","dateEl","utcTimestamp","statusEl","contactName","undefined","extraButton","wrapper","infoWrapper","ref","dropdownSelect","details","Component","shape","array","webphoneSession","object","func"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA;;AAeA;;;AAtBA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AAEA;;AAKA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AAEA;;;;;;AAEA,IAAMA,8EACHC,yBAAeC,OADZ,EACsBC,uBAAaD,OADnC,+CAEHD,yBAAeG,QAFZ,EAEuBD,uBAAaC,QAFpC,yDAGID,uBAAaE,MAHjB,gBAAN;;AAMA,SAASC,QAAT,OASG;AAAA,MARDC,SAQC,QARDA,SAQC;AAAA,MAPDF,MAOC,QAPDA,MAOC;AAAA,MANDG,MAMC,QANDA,MAMC;AAAA,MALDC,OAKC,QALDA,OAKC;AAAA,MAJDC,YAIC,QAJDA,YAIC;AAAA,MAHDC,aAGC,QAHDA,aAGC;AAAA,MAFDC,WAEC,QAFDA,WAEC;AAAA,MADDC,IACC,QADDA,IACC;;AACD,MAAIC,OAAO,IAAX;AACA,UAAQD,IAAR;AACE,SAAKE,uBAAaC,GAAlB;AAAuB;AACrBF,eAAOP,cAAcU,2BAAiBf,OAA/B,GACL;AAAA;AAAA,YAAM,OAAOQ,YAAb;AAA4B,wCAAC,oBAAD,IAAgB,OAAO,EAAvB;AAA5B,SADK,GAEL;AAAA;AAAA,YAAM,OAAOC,aAAb;AAA6B,wCAAC,qBAAD,IAAiB,OAAO,EAAxB;AAA7B,SAFF;AAGA;AACD;AACD;AAAS;AACP,YAAIO,QAAQ,IAAZ;AACA,YAAIb,MAAJ,EAAY;AACVa,kBAAQN,WAAR;AACD,SAFD,MAEO,IAAIL,cAAcN,yBAAeC,OAAjC,EAA0C;AAC/CgB,kBAAQR,YAAR;AACD,SAFM,MAEA;AACLQ,kBAAQP,aAAR;AACD;AACDG,eACE;AACE,qBAAW,0BACTT,SAASL,YAAYK,MAArB,GAA8BL,YAAYO,SAAZ,CADrB,EAETC,UAAUW,iBAAOC,UAFR,EAGTX,WAAWU,iBAAOV,OAHT,EAITJ,UAAUc,iBAAOd,MAJR,CADb;AAOE,iBAAOa;AAPT,UADF;AAWD;AA3BH;AA6BA,SACE;AAAA;AAAA,MAAK,WAAWC,iBAAOE,QAAvB;AACGP;AADH,GADF;AAKD;AACDR,SAASgB,SAAT,GAAqB;AACnBf,aAAWgB,oBAAUC,MAAV,CAAiBC,UADT;AAEnBpB,UAAQkB,oBAAUG,IAFC;AAGnBlB,UAAQe,oBAAUG,IAHC;AAInBjB,WAASc,oBAAUG,IAJA;AAKnBhB,gBAAca,oBAAUC,MALL;AAMnBb,iBAAeY,oBAAUC,MANN;AAOnBZ,eAAaW,oBAAUC,MAPJ;AAQnBX,QAAMU,oBAAUC;AARG,CAArB;AAUAlB,SAASqB,YAAT,GAAwB;AACtBtB,UAAQ,KADc;AAEtBG,UAAQ,KAFc;AAGtBC,WAAS,KAHa;AAItBC,gBAAc,EAJQ;AAKtBC,iBAAe,EALO;AAMtBC,eAAa,EANS;AAOtBC,QAAM;AAPgB,CAAxB;;IAUqBe,Q;;;AACnB,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAAA,0IACXA,KADW;;AAAA,UA4CnBC,eA5CmB,GA4CD,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAChC,UAAMC,WAAW,MAAKJ,KAAL,CAAWK,6BAAX,GACbC,SAASH,GAAT,EAAc,EAAd,IAAoB,CADP,GACWG,SAASH,GAAT,EAAc,EAAd,CAD5B;AAEA,YAAKI,cAAL,GAAsB,IAAtB;AACA,YAAKC,QAAL,CAAc;AACZJ;AADY,OAAd;AAGA,UACE,MAAKJ,KAAL,CAAWS,IAAX,CAAgBC,eAAhB,CAAgCC,MAAhC,GAAyC,CAAzC,IACA,MAAKX,KAAL,CAAWY,OAFb,EAGE;AACA,cAAKC,OAAL,CAAa,EAAEC,UAAU,KAAZ,EAAmBV,kBAAnB,EAAb;AACD;AACF,KAzDkB;;AAAA,UA2DnBW,cA3DmB,GA2DF,UAACC,CAAD,EAAO;AACtB,UACE,MAAKC,cAAL,IACA,MAAKA,cAAL,CAAoBC,QAApB,CAA6BF,EAAEG,MAA/B,CAFF,EAGE;AACA;AACD;AACD,YAAKX,QAAL,CAAc;AAAA,eAAa;AACzBY,oBAAU,CAACC,SAASD;AADK,SAAb;AAAA,OAAd;AAGD,KArEkB;;AAAA,UA0FnBE,kBA1FmB,GA0FE,YAAoC;AAAA,UAAnClB,QAAmC,uEAAxB,MAAKmB,KAAL,CAAWnB,QAAa;;AACvD,UAAMoB,iBAAiB,MAAKC,iBAAL,EAAvB;AACA,aAAQrB,WAAW,CAAC,CAAZ,IAAiBoB,eAAepB,QAAf,CAAlB,IACJoB,eAAeb,MAAf,KAA0B,CAA1B,IAA+Ba,eAAe,CAAf,CAD3B,IAEL,IAFF;AAGD,KA/FkB;;AAAA,UAoInBX,OApImB,GAoIT,MAAKA,OAAL,CAAaa,IAAb,OApIS;;AAAA,UAsInBC,mBAtImB,GAsIG,YAAM;AAC1B,UAAI,OAAO,MAAK3B,KAAL,CAAW4B,aAAlB,KAAoC,UAAxC,EAAoD;AAClD,cAAK5B,KAAL,CAAW4B,aAAX,CAAyB;AACvBC,mBAAS,MAAKP,kBAAL;AADc,SAAzB;AAGD;AACF,KA5IkB;;AAAA,UA8InBQ,qBA9ImB;AAAA,2FA8IK,iBAAOC,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAElB,OAAO,MAAK/B,KAAL,CAAWgC,eAAlB,KAAsC,UAAtC,IACF,MAAKC,QADH,IAEF,CAAC,MAAKV,KAAL,CAAWW,UAJQ;AAAA;AAAA;AAAA;;AAKpB,sBAAK1B,QAAL,CAAc;AACZ0B,8BAAY;AADA,iBAAd;AAGA;AACMC,2BATc,GASA,MAAKC,cAAL,EATA;AAAA;AAAA,uBAUd,MAAKpC,KAAL,CAAWgC,eAAX,CAA2B;AAC/BG,0CAD+B;AAE/BE,wBAAM,MAAKrC,KAAL,CAAWsC,qBAAX,GAAmC,MAAKC,sBAAL,EAAnC,GAAmE,EAF1C;AAG/BR;AAH+B,iBAA3B,CAVc;;AAAA;;AAgBpB,oBAAI,MAAKE,QAAT,EAAmB;AACjB,wBAAKzB,QAAL,CAAc;AACZ0B,gCAAY;AADA,mBAAd;AAGA;AACD;;AArBmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OA9IL;;AAAA;AAAA;AAAA;AAAA;;AAAA,UAsKnBM,UAtKmB,GAsKN,iBAA+B;AAAA,UAA5BC,WAA4B,SAA5BA,WAA4B;AAAA,UAAfC,QAAe,SAAfA,QAAe;;AAC1C,UAAI,MAAK1C,KAAL,CAAW2C,YAAf,EAA6B;AAC3B,YAAMR,cAAc,MAAKC,cAAL,EAApB;AACA,YAAMP,UAAU,MAAKP,kBAAL,EAAhB;AACA,YAAIO,OAAJ,EAAa;AACX,gBAAK7B,KAAL,CAAW2C,YAAX,4BACKd,OADL;AAEEM;AAFF;AAID,SALD,MAKO;AACL,cAAMS,YAAY,4BAAa;AAC7BT,oCAD6B;AAE7BM,oCAF6B;AAG7BC;AAH6B,WAAb,CAAlB;AAKA,gBAAK1C,KAAL,CAAW2C,YAAX,CAAwB;AACtBN,kBAAM,MAAKrC,KAAL,CAAWsC,qBAAX,GAAmC,MAAKC,sBAAL,EAAnC,GAAmEK,SADnD;AAEtBT;AAFsB,WAAxB,EAGG,IAHH;AAID;AACF;AACF,KA3LkB;;AAAA,UA4LnBU,WA5LmB,GA4LL,YAAM;AAClB,UAAI,MAAK7C,KAAL,CAAW8C,aAAf,EAA8B;AAC5B,YAAMjB,UAAU,MAAKP,kBAAL,MAA6B,EAA7C;AACA,YAAMa,cAAc,MAAKC,cAAL,EAApB;;AAEA,YAAID,WAAJ,EAAiB;AACf,gBAAKnC,KAAL,CAAW8C,aAAX,4BACKjB,OADL;AAEEM;AAFF;AAID;AACF;AACF,KAxMkB;;AAGjB,UAAKZ,KAAL,GAAa;AACXnB,gBAAU,MAAK2C,sBAAL,EADC;AAEXC,iBAAW,KAFA;AAGXd,kBAAY,KAHD;AAIXe,eAAS,IAJE;AAKX7B,gBAAU;AALC,KAAb;AAOA,UAAKb,cAAL,GAAsB,KAAtB;AAViB;AAWlB;;;;wCACmB;AAAA;;AAClB,WAAK0B,QAAL,GAAgB,IAAhB;AACA,WAAKiB,eAAL,GAAuBC,WAAW,YAAM;AACtC;AACA,YAAI,OAAKlB,QAAT,EAAmB;AACjB,iBAAKzB,QAAL,CAAc;AACZyC,qBAAS;AADG,WAAd;AAGD;AACF,OAPsB,EAOpB,EAPoB,CAAvB;AAQD;;;8CACyBG,S,EAAW;AACnC,UACE,CAAC,KAAK7C,cAAN,KAEE6C,UAAU3C,IAAV,CAAeC,eAAf,KAAmC,KAAKV,KAAL,CAAWS,IAAX,CAAgBC,eAAnD,IACA0C,UAAU3C,IAAV,CAAe4C,WAAf,KAA+B,KAAKrD,KAAL,CAAWS,IAAX,CAAgB4C,WAD/C,IAEAD,UAAU3C,IAAV,CAAe6C,SAAf,KAA6B,KAAKtD,KAAL,CAAWS,IAAX,CAAgB6C,SAJ/C,CADF,EAOE;AACA,aAAK9C,QAAL,CAAc;AACZJ,oBAAU,KAAK2C,sBAAL,CAA4BK,SAA5B;AADE,SAAd;AAGD;AACF;;;2CACsB;AACrB,WAAKnB,QAAL,GAAgB,KAAhB;AACA,UAAI,KAAKiB,eAAT,EAA0B;AACxBK,qBAAa,KAAKL,eAAlB;AACA,aAAKA,eAAL,GAAuB,IAAvB;AACD;AACF;;;6CA4B8C;AAAA;;AAAA,UAAxBE,SAAwB,uEAAZ,KAAKpD,KAAO;;AAC7C,UAAMwB,iBAAiB,KAAKC,iBAAL,CAAuB2B,SAAvB,CAAvB;AACA,UAAM1C,kBAAkB0C,UAAU3C,IAAV,CAAeC,eAAvC;AACA;;AAH6C,iCAIlC8C,QAJkC;AAK3C,YAAMC,QAAQjC,eAAekC,SAAf,CAAyB;AAAA;AACrC;AACA,mBAAK1D,KAAL,CAAW2D,eAAX,CAA2BP,UAAU3C,IAArC,EAA2C+C,QAA3C,EAAqD3B,OAArD;AAFqC;AAAA,SAAzB,CAAd;AAIA,YAAI4B,QAAQ,CAAC,CAAb,EAAgB;AAAA,eAAOA;AAAP;AAT2B;;AAAA;AAAA;AAAA;;AAAA;AAI7C,wDAAuB/C,eAAvB,4GAAwC;AAAA,cAA7B8C,QAA6B;;AAAA,2BAA7BA,QAA6B;;AAAA;AAMvC;AAV4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAW7C,UAAIJ,UAAU3C,IAAV,CAAemD,cAAnB,EAAmC;AACjC,YAAMH,QAAQjC,eAAekC,SAAf,CAAyB;AAAA,iBACrC7B,QAAQgC,EAAR,KAAeT,UAAU3C,IAAV,CAAemD,cADO;AAAA,SAAzB,CAAd;AAGA,eAAOH,KAAP;AACD;AACD,aAAO,KAAKzD,KAAL,CAAWK,6BAAX,GAA2C,CAAC,CAA5C,GAAgD,CAAvD;AACD;;;qCAOgB;AACf,aAAO,+BAAU,KAAKL,KAAL,CAAWS,IAArB,IACJ,KAAKT,KAAL,CAAWS,IAAX,CAAgBqD,IAAhB,CAAqB3B,WAArB,IAAoC,KAAKnC,KAAL,CAAWS,IAAX,CAAgBqD,IAAhB,CAAqBC,eADrD,GAEJ,KAAK/D,KAAL,CAAWS,IAAX,CAAgBuD,EAAhB,CAAmB7B,WAAnB,IAAkC,KAAKnC,KAAL,CAAWS,IAAX,CAAgBuD,EAAhB,CAAmBD,eAFxD;AAGD;;;wCACyC;AAAA,UAAxBX,SAAwB,uEAAZ,KAAKpD,KAAO;;AACxC,aAAO,+BAAUoD,UAAU3C,IAApB,IACL2C,UAAU3C,IAAV,CAAe4C,WADV,GAELD,UAAU3C,IAAV,CAAe6C,SAFjB;AAGD;;;6CACwB;AACvB,aAAO,+BAAU,KAAKtD,KAAL,CAAWS,IAArB,IACJ,KAAKT,KAAL,CAAWS,IAAX,CAAgBqD,IAAhB,CAAqBzB,IADjB,GAEJ,KAAKrC,KAAL,CAAWS,IAAX,CAAgBuD,EAAhB,CAAmB3B,IAFtB;AAGD;;;;;mCACevB,Q;YAAAA,Q,kCAAW,I;YAAMV,Q,SAAAA,Q;;;;;sBAE7B,OAAO,KAAKJ,KAAL,CAAWiE,SAAlB,KAAgC,UAAhC,IACA,KAAKhC,QADL,IAEA,CAAC,KAAKV,KAAL,CAAWyB,S;;;;;AAEZ,qBAAKxC,QAAL,CAAc;AACZwC,6BAAW;AADC,iBAAd;;uBAGM,KAAKhD,KAAL,CAAWiE,SAAX,CAAqB;AACzBpC,2BAAS,KAAKP,kBAAL,CAAwBlB,QAAxB,CADgB;AAEzBK,wBAAM,KAAKT,KAAL,CAAWS,IAFQ;AAGzBK;AAHyB,iBAArB,C;;;AAKN,oBAAI,KAAKmB,QAAT,EAAmB;AACjB,uBAAKzB,QAAL,CAAc;AACZwC,+BAAW;AADC,mBAAd;AAGD;;;;;;;;;;;;;;;;;;6BAwEI;AAAA;;AACP,UAAI,KAAKzB,KAAL,CAAW0B,OAAf,EAAwB;AACtB,eACE,uCAAK,WAAW3D,iBAAO4E,IAAvB,GADF;AAGD;AALM,mBAyCH,KAAKlE,KAzCF;AAAA,+BAOLS,IAPK;AAAA,UAQH/B,SARG,eAQHA,SARG;AAAA,UASHyF,eATG,eASHA,eATG;AAAA,UAUHC,MAVG,eAUHA,MAVG;AAAA,UAWHC,SAXG,eAWHA,SAXG;AAAA,UAYHC,QAZG,eAYHA,QAZG;AAAA,UAaH5D,eAbG,eAaHA,eAbG;AAAA,UAcH6D,MAdG,eAcHA,MAdG;AAAA,UAeHvF,IAfG,eAeHA,IAfG;AAAA,UAiBLwF,KAjBK,UAiBLA,KAjBK;AAAA,UAkBLC,aAlBK,UAkBLA,aAlBK;AAAA,UAmBL/B,QAnBK,UAmBLA,QAnBK;AAAA,UAoBLD,WApBK,UAoBLA,WApBK;AAAA,UAqBLiC,YArBK,UAqBLA,YArBK;AAAA,UAsBLC,kBAtBK,UAsBLA,kBAtBK;AAAA,UAuBLC,qBAvBK,UAuBLA,qBAvBK;AAAA,UAwBLC,qBAxBK,UAwBLA,qBAxBK;AAAA,UAyBLlG,MAzBK,UAyBLA,MAzBK;AAAA,UA0BLiD,aA1BK,UA0BLA,aA1BK;AAAA,UA2BLI,eA3BK,UA2BLA,eA3BK;AAAA,UA4BLiC,SA5BK,UA4BLA,SA5BK;AAAA,UA6BLnB,aA7BK,UA6BLA,aA7BK;AAAA,UA8BLH,YA9BK,UA8BLA,YA9BK;AAAA,UA+BLmC,iBA/BK,UA+BLA,iBA/BK;AAAA,UAgCL9B,SAhCK,UAgCLA,SAhCK;AAAA,UAiCLV,qBAjCK,UAiCLA,qBAjCK;AAAA,UAkCLjC,6BAlCK,UAkCLA,6BAlCK;AAAA,UAmCL0E,WAnCK,UAmCLA,WAnCK;AAAA,UAoCLC,iBApCK,UAoCLA,iBApCK;AAAA,UAqCLC,iBArCK,UAqCLA,iBArCK;AAAA,UAsCLC,mBAtCK,UAsCLA,mBAtCK;AAAA,UAuCLC,kBAvCK,UAuCLA,kBAvCK;AAAA,UAwCLC,iBAxCK,UAwCLA,iBAxCK;;AA0CP,UAAMjD,cAAc,KAAKC,cAAL,EAApB;AACA,UAAMZ,iBAAiB,KAAKC,iBAAL,EAAvB;AACA,UAAM4D,sBAAsB,KAAK9C,sBAAL,EAA5B;AACA,UAAM3D,UAAU,+BAAU,KAAKoB,KAAL,CAAWS,IAArB,CAAhB;AACA,UAAMjC,SAAS,+BAAU,KAAKwB,KAAL,CAAWS,IAArB,KAA8B,8BAAS,KAAKT,KAAL,CAAWS,IAApB,CAA7C;AACA,UAAM6E,aAAa,2BAAYnD,WAAZ,CAAnB;AACA,UAAMoD,cAAc,CAACD,WAAWE,OAAZ,IAClBF,WAAWG,MAAX,CAAkB9E,MAAlB,IAA4B,CAD9B;AAEA,UAAM+E,iBAAiB,CAAC,EACtB/C,iBAEE4C,cACEV,qBADF,GAEED,qBAJJ,CADsB,CAAxB;;AASA,UAAIe,aAAa,IAAjB;AACA,UAAI,OAAOrB,QAAP,KAAoB,WAAxB,EAAqC;AACnCqB,qBAAajB,eACXkB,eAAKC,SAAL,CAAe,aAAf,EAA8BpB,aAA9B,CADW,GAEX,8BAAC,yBAAD,IAAiB,WAAWJ,SAA5B,EAAuC,QAAQE,MAA/C,GAFF;AAGD,OAJD,MAIO;AACLoB,qBAAa,8BAAerB,QAAf,CAAb;AACD;AACD,UAAIwB,SAAS,EAAb;AACA,UAAI,CAACnH,MAAL,EAAa;AACXmH,iBAAShB,kBAAkB,EAAEiB,cAAc1B,SAAhB,EAAlB,CAAT;AACD;AACD,UAAI2B,WAAW,EAAf;AACA,UAAIrH,MAAJ,EAAY;AACVqH,mBAAWJ,eAAKC,SAAL,CAAezB,UAAUD,eAAzB,EAA0CM,aAA1C,CAAX;AACD;AACD,UAAMwB,cAAc,OAAOjB,iBAAP,KAA6B,UAA7B,GAClBA,kBAAkB,KAAKhF,KAAL,CAAWS,IAA7B,CADkB,GAElByF,SAFF;AAGA,UAAMC,cAAc,OAAOlB,iBAAP,KAA6B,UAA7B,GAClBA,kBAAkB,KAAKjF,KAAL,CAAWS,IAA7B,CADkB,GAElByF,SAFF;AAGA,aACE;AAAA;AAAA,UAAK,WAAW5G,iBAAO4E,IAAvB,EAA6B,SAAS,KAAKnD,cAA3C;AACE;AAAA;AAAA,YAAK,WAAWzB,iBAAO8G,OAAvB;AACE,wCAAC,QAAD;AACE,uBAAW1H,SADb;AAEE,qBAASE,OAFX;AAGE,oBAAQD,MAHV;AAIE,oBAAQH,MAJV;AAKE,0BAAcoH,eAAKC,SAAL,CAAe,aAAf,EAA8BpB,aAA9B,CALhB;AAME,2BAAemB,eAAKC,SAAL,CAAe,cAAf,EAA+BpB,aAA/B,CANjB;AAOE,yBAAamB,eAAKC,SAAL,CAAe,YAAf,EAA6BpB,aAA7B,CAPf;AAQE,kBAAMzF;AARR,YADF;AAWE;AAAA;AAAA,cAAK,WAAWM,iBAAO+G,WAAvB;AACE,0CAAC,wBAAD;AACE,2BAAaJ,WADf;AAEE,yBAAW,mBAACK,GAAD,EAAS;AAAE,uBAAKrF,cAAL,GAAsBqF,GAAtB;AAA4B,eAFpD;AAGE,yBAAW,0BACThH,iBAAO2B,cADE,EAETiE,mBAFS,EAGT1G,UAAUc,iBAAOd,MAHR,EAITG,UAAUW,iBAAOX,MAJR,CAHb;AASE,+BAAiBW,iBAAOiH,cAT1B;AAUE,qBAAO/B,KAVT;AAWE,2BAAaO,WAXf;AAYE,8BAAgBvD,cAZlB;AAaE,wBAAU,KAAKD,KAAL,CAAWnB,QAbvB;AAcE,+BAAiB,KAAKH,eAdxB;AAeE,wBAAUyE,YAfZ;AAgBE,yBAAW1B,aAAa,KAAKzB,KAAL,CAAWyB,SAhBrC;AAiBE,4BAAcqC,mBAjBhB;AAkBE,qCAAuB/C,qBAlBzB;AAmBE,wBAAUI,QAnBZ;AAoBE,2BAAaD,WApBf;AAqBE,2BAAaN,WArBf;AAsBE,6BAAesC,aAtBjB;AAuBE,+BAAiB,KAvBnB;AAwBE,wBAAU,KAxBZ;AAyBE,+BAAiBpE;AAzBnB,cADF;AA4BE;AAAA;AAAA,gBAAK,WAAWf,iBAAOkH,OAAvB;AACGb,wBADH;AAAA,sBACqBG,MADrB,GAC8BE;AAD9B;AA5BF,WAXF;AA2CGG;AA3CH,SADF;AA8CE,sCAAC,oBAAD;AACE,oBAAU,KAAK5E,KAAL,CAAWH,QADvB;AAEE,oBAAU,KAAKL,cAFjB;AAGE,yBAAe0D,aAHjB;AAIE,iBAAOR,aAAa,KAAKpD,OAJ3B;AAKE,wBAAce,iBAAiB,KAAKD,mBALtC;AAME,0BAAgBK,mBAAmB,KAAKF,qBAN1C;AAOE,qBAAW,CAAC,CAACN,eAAeb,MAP9B;AAQE,yBAAemC,iBAAiB,KAAKD,WARvC;AASE,wBACE6C,iBACE;AAAA,mBAAM,OAAKlD,UAAL,CAAgB,EAAEC,wBAAF,EAAeC,kBAAf,EAAhB,CAAN;AAAA,WADF,GAEIwD,SAZR;AAcE,uBAAa/D,WAdf;AAeE,wBAAcuC,YAfhB;AAgBE,8BAAoBC,kBAhBtB;AAiBE,qBAAW3B,aAAa,KAAKzB,KAAL,CAAWyB,SAjBrC;AAkBE,oBAAUtC,gBAAgBC,MAAhB,GAAyB,CAlBrC;AAmBE,sBAAY,KAAKY,KAAL,CAAWW,UAnBzB;AAoBE,uBAAa0D,eAAKC,SAAL,CAAe,QAAf,EAAyBpB,aAAzB,CApBf;AAqBE,wBAAcmB,eAAKC,SAAL,CAAe,SAAf,EAA0BpB,aAA1B,CArBhB;AAsBE,qBAAWmB,eAAKC,SAAL,CAAe,MAAf,EAAuBpB,aAAvB,CAtBb;AAuBE,qBAAWmB,eAAKC,SAAL,CAAe,MAAf,EAAuBpB,aAAvB,CAvBb;AAwBE,6BAAmBmB,eAAKC,SAAL,CAAe,WAAf,EAA4BpB,aAA5B,CAxBrB;AAyBE,2BAAiBmB,eAAKC,SAAL,CAAe,aAAf,EAA8BpB,aAA9B,CAzBnB;AA0BE,8BAAoBU,sBAAuB;AAAA,mBAAMA,mBAAmB,OAAKnF,KAAL,CAAWS,IAA9B,CAAN;AAAA,WA1B7C;AA2BE,6BAAmB2E,qBAAqBA,kBAAkB,KAAKpF,KAAL,CAAWS,IAA7B;AA3B1C;AA9CF,OADF;AA8ED;;;EAzWmCgG,gB;;kBAAjB1G,Q;;;AA4WrBA,SAASN,SAAT,GAAqB;AACnBgB,QAAMf,oBAAUgH,KAAV,CAAgB;AACpBhI,eAAWgB,oBAAUC,MAAV,CAAiBC,UADR;AAEpBuE,qBAAiBzE,oBAAUC,MAFP;AAGpB0E,eAAW3E,oBAAU+F,MAAV,CAAiB7F,UAHR;AAIpBc,qBAAiBhB,oBAAUiH,KAAV,CAAgB/G,UAJb;AAKpByD,iBAAa3D,oBAAUiH,KAAV,CAAgB/G,UALT;AAMpB0D,eAAW5D,oBAAUiH,KAAV,CAAgB/G,UANP;AAOpBkE,UAAMpE,oBAAUgH,KAAV,CAAgB;AACpBvE,mBAAazC,oBAAUC,MADH;AAEpBoE,uBAAiBrE,oBAAUC,MAFP;AAGpB0C,YAAM3C,oBAAUC;AAHI,KAAhB,EAIHC,UAXiB;AAYpBoE,QAAItE,oBAAUgH,KAAV,CAAgB;AAClBvE,mBAAazC,oBAAUC,MADL;AAElBoE,uBAAiBrE,oBAAUC,MAFT;AAGlB0C,YAAM3C,oBAAUC;AAHE,KAAhB,CAZgB;AAiBpBiH,qBAAiBlH,oBAAUmH;AAjBP,GAAhB,EAkBHjH,UAnBgB;AAoBnB8C,YAAUhD,oBAAUC,MAAV,CAAiBC,UApBR;AAqBnB4E,SAAO9E,oBAAUC,MAAV,CAAiBC,UArBL;AAsBnB6C,eAAa/C,oBAAUC,MAAV,CAAiBC,UAtBX;AAuBnB6E,iBAAe/E,oBAAUC,MAAV,CAAiBC,UAvBb;AAwBnBqE,aAAWvE,oBAAUoH,IAxBF;AAyBnBlF,iBAAelC,oBAAUoH,IAzBN;AA0BnB9E,mBAAiBtC,oBAAUoH,IA1BR;AA2BnBhE,iBAAepD,oBAAUoH,IA3BN;AA4BnBnE,gBAAcjD,oBAAUoH,IA5BL;AA6BnBnD,mBAAiBjE,oBAAUoH,IA7BR;AA8BnBpC,gBAAchF,oBAAUG,IA9BL;AA+BnB8E,sBAAoBjF,oBAAUG,IA/BX;AAgCnB+E,yBAAuBlF,oBAAUG,IAhCd;AAiCnBgF,yBAAuBnF,oBAAUG,IAjCd;AAkCnBlB,UAAQe,oBAAUG,IAAV,CAAeD,UAlCJ;AAmCnBkF,qBAAmBpF,oBAAUoH,IAAV,CAAelH,UAnCf;AAoCnBoD,aAAWtD,oBAAUG,IApCF;AAqCnByC,yBAAuB5C,oBAAUG,IArCd;AAsCnBe,WAASlB,oBAAUG,IAtCA;AAuCnBQ,iCAA+BX,oBAAUG,IAvCtB;AAwCnBkF,eAAarF,oBAAUmH,MAxCJ;AAyCnB7B,qBAAmBtF,oBAAUoH,IAzCV;AA0CnB7B,qBAAmBvF,oBAAUoH,IA1CV;AA2CnB5B,uBAAqBxF,oBAAUC,MA3CZ;AA4CnBwF,sBAAoBzF,oBAAUoH,IA5CX;AA6CnB1B,qBAAmB1F,oBAAUoH;AA7CV,CAArB;;AAgDA/G,SAASD,YAAT,GAAwB;AACtBmE,aAAWiC,SADW;AAEtBpD,iBAAeoD,SAFO;AAGtBvD,gBAAcuD,SAHQ;AAItBtE,iBAAesE,SAJO;AAKtBlE,mBAAiBkE,SALK;AAMtBvC,mBAAiB;AAAA,WAAM,KAAN;AAAA,GANK;AAOtBX,aAAW,KAPW;AAQtB2B,sBAAoB,KARE;AAStBC,yBAAuB,KATD;AAUtBC,yBAAuB,KAVD;AAWtBH,gBAAc,KAXQ;AAYtBpC,yBAAuB4D,SAZD;AAatB7F,iCAA+B,IAbT;AActBO,WAAS,KAda;AAetBmE,eAAamB,SAfS;AAgBtBlB,qBAAmBkB,SAhBG;AAiBtBjB,qBAAmBiB,SAjBG;AAkBtBhB,uBAAqBgB,SAlBC;AAmBtBf,sBAAoBe,SAnBE;AAoBtBd,qBAAmBc;AApBG,CAAxB","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport 'core-js/fn/array/find';\nimport callDirections from 'ringcentral-integration/enums/callDirections';\nimport messageTypes from 'ringcentral-integration/enums/messageTypes';\nimport messageDirection from 'ringcentral-integration/enums/messageDirection';\n// import sessionStatus from 'ringcentral-integration/modules/Webphone/sessionStatus';\nimport {\n  isInbound,\n  isRinging,\n  isMissed,\n} from 'ringcentral-integration/lib/callLogHelpers';\nimport parseNumber from 'ringcentral-integration/lib/parseNumber';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\nimport DurationCounter from '../DurationCounter';\nimport ContactDisplay from '../ContactDisplay';\nimport formatDuration from '../../lib/formatDuration';\nimport ActionMenu from '../ActionMenu';\nimport FaxInboundIcon from '../../assets/images/FaxInbound.svg';\nimport FaxOutboundIcon from '../../assets/images/FaxOutbound.svg';\n// import Button from '../Button';\nimport styles from './styles.scss';\n\nimport i18n from './i18n';\n\nconst callIconMap = {\n  [callDirections.inbound]: dynamicsFont.inbound,\n  [callDirections.outbound]: dynamicsFont.outbound,\n  missed: dynamicsFont.missed,\n};\n\nfunction CallIcon({\n  direction,\n  missed,\n  active,\n  ringing,\n  inboundTitle,\n  outboundTitle,\n  missedTitle,\n  type,\n}) {\n  let icon = null;\n  switch (type) {\n    case messageTypes.fax: {\n      icon = direction === messageDirection.inbound ?\n        <span title={inboundTitle} ><FaxInboundIcon width={21} /></span> :\n        <span title={outboundTitle} ><FaxOutboundIcon width={21} /></span>;\n      break;\n    }\n    default: {\n      let title = null;\n      if (missed) {\n        title = missedTitle;\n      } else if (direction === callDirections.inbound) {\n        title = inboundTitle;\n      } else {\n        title = outboundTitle;\n      }\n      icon = (\n        <span\n          className={classnames(\n            missed ? callIconMap.missed : callIconMap[direction],\n            active && styles.activeCall,\n            ringing && styles.ringing,\n            missed && styles.missed,\n          )}\n          title={title}\n        />\n      );\n    }\n  }\n  return (\n    <div className={styles.callIcon}>\n      {icon}\n    </div>\n  );\n}\nCallIcon.propTypes = {\n  direction: PropTypes.string.isRequired,\n  missed: PropTypes.bool,\n  active: PropTypes.bool,\n  ringing: PropTypes.bool,\n  inboundTitle: PropTypes.string,\n  outboundTitle: PropTypes.string,\n  missedTitle: PropTypes.string,\n  type: PropTypes.string,\n};\nCallIcon.defaultProps = {\n  missed: false,\n  active: false,\n  ringing: false,\n  inboundTitle: '',\n  outboundTitle: '',\n  missedTitle: '',\n  type: '',\n};\n\nexport default class CallItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selected: this.getInitialContactIndex(),\n      isLogging: false,\n      isCreating: false,\n      loading: true,\n      extended: false,\n    };\n    this._userSelection = false;\n  }\n  componentDidMount() {\n    this._mounted = true;\n    this._loadingTimeout = setTimeout(() => {\n      // clear timeout is probably not necessary\n      if (this._mounted) {\n        this.setState({\n          loading: false,\n        });\n      }\n    }, 10);\n  }\n  componentWillReceiveProps(nextProps) {\n    if (\n      !this._userSelection &&\n      (\n        nextProps.call.activityMatches !== this.props.call.activityMatches ||\n        nextProps.call.fromMatches !== this.props.call.fromMatches ||\n        nextProps.call.toMatches !== this.props.call.toMatches\n      )\n    ) {\n      this.setState({\n        selected: this.getInitialContactIndex(nextProps),\n      });\n    }\n  }\n  componentWillUnmount() {\n    this._mounted = false;\n    if (this._loadingTimeout) {\n      clearTimeout(this._loadingTimeout);\n      this._loadingTimeout = null;\n    }\n  }\n  onSelectContact = (value, idx) => {\n    const selected = this.props.showContactDisplayPlaceholder\n      ? parseInt(idx, 10) - 1 : parseInt(idx, 10);\n    this._userSelection = true;\n    this.setState({\n      selected,\n    });\n    if (\n      this.props.call.activityMatches.length > 0 &&\n      this.props.autoLog\n    ) {\n      this.logCall({ redirect: false, selected });\n    }\n  }\n\n  toggleExtended = (e) => {\n    if ((\n      this.contactDisplay &&\n      this.contactDisplay.contains(e.target))\n    ) {\n      return;\n    }\n    this.setState(preState => ({\n      extended: !preState.extended,\n    }));\n  };\n\n  getInitialContactIndex(nextProps = this.props) {\n    const contactMatches = this.getContactMatches(nextProps);\n    const activityMatches = nextProps.call.activityMatches;\n    // console.log('getInitialContactIndex:', nextProps.call.toNumberEntity);\n    for (const activity of activityMatches) {\n      const index = contactMatches.findIndex(contact => (\n        // TODO find a better name or mechanism...\n        this.props.isLoggedContact(nextProps.call, activity, contact)\n      ));\n      if (index > -1) return index;\n    }\n    if (nextProps.call.toNumberEntity) {\n      const index = contactMatches.findIndex(contact => (\n        contact.id === nextProps.call.toNumberEntity\n      ));\n      return index;\n    }\n    return this.props.showContactDisplayPlaceholder ? -1 : 0;\n  }\n  getSelectedContact = (selected = this.state.selected) => {\n    const contactMatches = this.getContactMatches();\n    return (selected > -1 && contactMatches[selected]) ||\n      (contactMatches.length === 1 && contactMatches[0]) ||\n      null;\n  }\n  getPhoneNumber() {\n    return isInbound(this.props.call) ?\n      (this.props.call.from.phoneNumber || this.props.call.from.extensionNumber) :\n      (this.props.call.to.phoneNumber || this.props.call.to.extensionNumber);\n  }\n  getContactMatches(nextProps = this.props) {\n    return isInbound(nextProps.call) ?\n      nextProps.call.fromMatches :\n      nextProps.call.toMatches;\n  }\n  getFallbackContactName() {\n    return isInbound(this.props.call) ?\n      (this.props.call.from.name) :\n      (this.props.call.to.name);\n  }\n  async logCall({ redirect = true, selected }) {\n    if (\n      typeof this.props.onLogCall === 'function' &&\n      this._mounted &&\n      !this.state.isLogging\n    ) {\n      this.setState({\n        isLogging: true,\n      });\n      await this.props.onLogCall({\n        contact: this.getSelectedContact(selected),\n        call: this.props.call,\n        redirect,\n      });\n      if (this._mounted) {\n        this.setState({\n          isLogging: false,\n        });\n      }\n    }\n  }\n  logCall = this.logCall.bind(this)\n\n  viewSelectedContact = () => {\n    if (typeof this.props.onViewContact === 'function') {\n      this.props.onViewContact({\n        contact: this.getSelectedContact(),\n      });\n    }\n  }\n\n  createSelectedContact = async (entityType) => {\n    // console.log('click createSelectedContact!!', entityType);\n    if (typeof this.props.onCreateContact === 'function' &&\n      this._mounted &&\n      !this.state.isCreating) {\n      this.setState({\n        isCreating: true,\n      });\n      // console.log('start to create: isCreating...', this.state.isCreating);\n      const phoneNumber = this.getPhoneNumber();\n      await this.props.onCreateContact({\n        phoneNumber,\n        name: this.props.enableContactFallback ? this.getFallbackContactName() : '',\n        entityType,\n      });\n\n      if (this._mounted) {\n        this.setState({\n          isCreating: false,\n        });\n        // console.log('created: isCreating...', this.state.isCreating);\n      }\n    }\n  }\n  clickToSms = ({ countryCode, areaCode }) => {\n    if (this.props.onClickToSms) {\n      const phoneNumber = this.getPhoneNumber();\n      const contact = this.getSelectedContact();\n      if (contact) {\n        this.props.onClickToSms({\n          ...contact,\n          phoneNumber,\n        });\n      } else {\n        const formatted = formatNumber({\n          phoneNumber,\n          countryCode,\n          areaCode,\n        });\n        this.props.onClickToSms({\n          name: this.props.enableContactFallback ? this.getFallbackContactName() : formatted,\n          phoneNumber,\n        }, true);\n      }\n    }\n  }\n  clickToDial = () => {\n    if (this.props.onClickToDial) {\n      const contact = this.getSelectedContact() || {};\n      const phoneNumber = this.getPhoneNumber();\n\n      if (phoneNumber) {\n        this.props.onClickToDial({\n          ...contact,\n          phoneNumber,\n        });\n      }\n    }\n  }\n  render() {\n    if (this.state.loading) {\n      return (\n        <div className={styles.root} />\n      );\n    }\n    const {\n      call: {\n        direction,\n        telephonyStatus,\n        result,\n        startTime,\n        duration,\n        activityMatches,\n        offset,\n        type\n      },\n      brand,\n      currentLocale,\n      areaCode,\n      countryCode,\n      disableLinks,\n      disableClickToDial,\n      outboundSmsPermission,\n      internalSmsPermission,\n      active,\n      onViewContact,\n      onCreateContact,\n      onLogCall,\n      onClickToDial,\n      onClickToSms,\n      dateTimeFormatter,\n      isLogging,\n      enableContactFallback,\n      showContactDisplayPlaceholder,\n      sourceIcons,\n      renderContactName,\n      renderExtraButton,\n      contactDisplayStyle,\n      externalViewEntity,\n      externalHasEntity,\n    } = this.props;\n    const phoneNumber = this.getPhoneNumber();\n    const contactMatches = this.getContactMatches();\n    const fallbackContactName = this.getFallbackContactName();\n    const ringing = isRinging(this.props.call);\n    const missed = isInbound(this.props.call) && isMissed(this.props.call);\n    const parsedInfo = parseNumber(phoneNumber);\n    const isExtension = !parsedInfo.hasPlus &&\n      parsedInfo.number.length <= 6;\n    const showClickToSms = !!(\n      onClickToSms &&\n      (\n        isExtension ?\n          internalSmsPermission :\n          outboundSmsPermission\n      )\n    );\n\n    let durationEl = null;\n    if (typeof duration === 'undefined') {\n      durationEl = disableLinks ?\n        i18n.getString('unavailable', currentLocale) :\n        <DurationCounter startTime={startTime} offset={offset} />;\n    } else {\n      durationEl = formatDuration(duration);\n    }\n    let dateEl = '';\n    if (!active) {\n      dateEl = dateTimeFormatter({ utcTimestamp: startTime });\n    }\n    let statusEl = '';\n    if (active) {\n      statusEl = i18n.getString(result || telephonyStatus, currentLocale);\n    }\n    const contactName = typeof renderContactName === 'function' ?\n      renderContactName(this.props.call) :\n      undefined;\n    const extraButton = typeof renderExtraButton === 'function' ?\n      renderExtraButton(this.props.call) :\n      undefined;\n    return (\n      <div className={styles.root} onClick={this.toggleExtended}>\n        <div className={styles.wrapper}>\n          <CallIcon\n            direction={direction}\n            ringing={ringing}\n            active={active}\n            missed={missed}\n            inboundTitle={i18n.getString('inboundCall', currentLocale)}\n            outboundTitle={i18n.getString('outboundCall', currentLocale)}\n            missedTitle={i18n.getString('missedCall', currentLocale)}\n            type={type}\n          />\n          <div className={styles.infoWrapper}>\n            <ContactDisplay\n              contactName={contactName}\n              reference={(ref) => { this.contactDisplay = ref; }}\n              className={classnames(\n                styles.contactDisplay,\n                contactDisplayStyle,\n                missed && styles.missed,\n                active && styles.active,\n              )}\n              selectClassName={styles.dropdownSelect}\n              brand={brand}\n              sourceIcons={sourceIcons}\n              contactMatches={contactMatches}\n              selected={this.state.selected}\n              onSelectContact={this.onSelectContact}\n              disabled={disableLinks}\n              isLogging={isLogging || this.state.isLogging}\n              fallBackName={fallbackContactName}\n              enableContactFallback={enableContactFallback}\n              areaCode={areaCode}\n              countryCode={countryCode}\n              phoneNumber={phoneNumber}\n              currentLocale={currentLocale}\n              stopPropagation={false}\n              showType={false}\n              showPlaceholder={showContactDisplayPlaceholder}\n            />\n            <div className={styles.details} >\n              {durationEl}{` | ${dateEl}${statusEl}`}\n            </div>\n          </div>\n          {extraButton}\n        </div>\n        <ActionMenu\n          extended={this.state.extended}\n          onToggle={this.toggleExtended}\n          currentLocale={currentLocale}\n          onLog={onLogCall && this.logCall}\n          onViewEntity={onViewContact && this.viewSelectedContact}\n          onCreateEntity={onCreateContact && this.createSelectedContact}\n          hasEntity={!!contactMatches.length}\n          onClickToDial={onClickToDial && this.clickToDial}\n          onClickToSms={\n            showClickToSms ?\n              () => this.clickToSms({ countryCode, areaCode })\n              : undefined\n          }\n          phoneNumber={phoneNumber}\n          disableLinks={disableLinks}\n          disableClickToDial={disableClickToDial}\n          isLogging={isLogging || this.state.isLogging}\n          isLogged={activityMatches.length > 0}\n          isCreating={this.state.isCreating}\n          addLogTitle={i18n.getString('addLog', currentLocale)}\n          editLogTitle={i18n.getString('editLog', currentLocale)}\n          textTitle={i18n.getString('text', currentLocale)}\n          callTitle={i18n.getString('call', currentLocale)}\n          createEntityTitle={i18n.getString('addEntity', currentLocale)}\n          viewEntityTitle={i18n.getString('viewDetails', currentLocale)}\n          externalViewEntity={externalViewEntity && (() => externalViewEntity(this.props.call))}\n          externalHasEntity={externalHasEntity && externalHasEntity(this.props.call)}\n        />\n      </div>\n    );\n  }\n}\n\nCallItem.propTypes = {\n  call: PropTypes.shape({\n    direction: PropTypes.string.isRequired,\n    telephonyStatus: PropTypes.string,\n    startTime: PropTypes.number.isRequired,\n    activityMatches: PropTypes.array.isRequired,\n    fromMatches: PropTypes.array.isRequired,\n    toMatches: PropTypes.array.isRequired,\n    from: PropTypes.shape({\n      phoneNumber: PropTypes.string,\n      extensionNumber: PropTypes.string,\n      name: PropTypes.string,\n    }).isRequired,\n    to: PropTypes.shape({\n      phoneNumber: PropTypes.string,\n      extensionNumber: PropTypes.string,\n      name: PropTypes.string,\n    }),\n    webphoneSession: PropTypes.object,\n  }).isRequired,\n  areaCode: PropTypes.string.isRequired,\n  brand: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  onLogCall: PropTypes.func,\n  onViewContact: PropTypes.func,\n  onCreateContact: PropTypes.func,\n  onClickToDial: PropTypes.func,\n  onClickToSms: PropTypes.func,\n  isLoggedContact: PropTypes.func,\n  disableLinks: PropTypes.bool,\n  disableClickToDial: PropTypes.bool,\n  outboundSmsPermission: PropTypes.bool,\n  internalSmsPermission: PropTypes.bool,\n  active: PropTypes.bool.isRequired,\n  dateTimeFormatter: PropTypes.func.isRequired,\n  isLogging: PropTypes.bool,\n  enableContactFallback: PropTypes.bool,\n  autoLog: PropTypes.bool,\n  showContactDisplayPlaceholder: PropTypes.bool,\n  sourceIcons: PropTypes.object,\n  renderContactName: PropTypes.func,\n  renderExtraButton: PropTypes.func,\n  contactDisplayStyle: PropTypes.string,\n  externalViewEntity: PropTypes.func,\n  externalHasEntity: PropTypes.func,\n};\n\nCallItem.defaultProps = {\n  onLogCall: undefined,\n  onClickToDial: undefined,\n  onClickToSms: undefined,\n  onViewContact: undefined,\n  onCreateContact: undefined,\n  isLoggedContact: () => false,\n  isLogging: false,\n  disableClickToDial: false,\n  outboundSmsPermission: false,\n  internalSmsPermission: false,\n  disableLinks: false,\n  enableContactFallback: undefined,\n  showContactDisplayPlaceholder: true,\n  autoLog: false,\n  sourceIcons: undefined,\n  renderContactName: undefined,\n  renderExtraButton: undefined,\n  contactDisplayStyle: undefined,\n  externalViewEntity: undefined,\n  externalHasEntity: undefined,\n};\n"]}