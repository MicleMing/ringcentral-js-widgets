{"version":3,"sources":["components/CallAvatar/index.js"],"names":["CallAvatar","props","state","avatarUrl","_mounted","$img","document","createElement","src","onload","setState","onerror","loadImg","nextProp","extraNum","isOnConferenceCall","initialSize","margin","avatarCircleRadius","extraNumCircleRadius","extraNumCircleBorder","$snow","$gray","$blue","res","hash","uuid","v4","textId","clipId","avatarStyle","stroke","strokeWidth","styles","callAvatar","fontSize","fill","opacity","portrait","fontWeight","Component","propTypes","PropTypes","bool","string","number","defaultProps"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport uuid from 'uuid';\nimport styles from './styles.scss';\n\nclass CallAvatar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      avatarUrl: null,\n    };\n    this._mounted = false;\n  }\n\n  loadImg(props = this.props) {\n    if (!this._mounted) {\n      return;\n    }\n    if (props.avatarUrl) {\n      const $img = document.createElement('img');\n      $img.src = props.avatarUrl;\n      $img.onload = () => this.setState({\n        avatarUrl: props.avatarUrl,\n      });\n      $img.onerror = () => this.setState({\n        avatarUrl: null,\n      });\n    }\n  }\n\n  componentDidMount() {\n    this._mounted = true;\n    this.loadImg();\n  }\n\n  componentWillReceiveProps(nextProp) {\n    if (nextProp.avatarUrl !== this.props.avatarUrl) {\n      this.loadImg(nextProp);\n    }\n  }\n\n  render() {\n    const { extraNum, isOnConferenceCall } = this.props;\n    const { avatarUrl } = this.state;\n    const initialSize = 38;\n    const margin = 4;\n    const avatarCircleRadius = 15;\n    const extraNumCircleRadius = 8.5;\n    const extraNumCircleBorder = 1;\n    const $snow = '#fff';\n    const $gray = '#cee7f2';\n    const $blue = '#0684bd';\n\n    let res;\n    const hash = uuid.v4();\n    const textId = `text-${hash}`;\n    const clipId = `circleClip-${hash}`;\n    const avatarStyle = { stroke: '#e2e2e2', strokeWidth: '1px' };\n    if (isOnConferenceCall && extraNum > 0) {\n      res = (\n        <svg\n          className={styles.callAvatar}\n          style={avatarUrl ? avatarStyle : null}\n          viewBox={`0 0 ${initialSize} ${initialSize}`}\n          preserveAspectRatio=\"xMidYMid meet\"\n          xmlns=\"http://www.w3.org/2000/svg\">\n          <defs>\n            <g id={textId}>\n              <text\n                x=\"0\"\n                y=\"0\"\n                dy=\"29px\"\n                style={{\n                      fontSize: `${avatarCircleRadius * 2}px`,\n                      fill: $blue,\n                      opacity: '.5'\n                    }}\n                className={styles.portrait}\n                // HACK: &#xe904; is the font code for the portrait icon\n                >\n                {'\\ue904'}\n              </text>\n            </g>\n          </defs>\n          <circle\n            cx={avatarCircleRadius}\n            cy={margin + avatarCircleRadius}\n            r={avatarCircleRadius}\n            fill={$snow} />\n          <g>\n            <clipPath id={clipId}>\n              <circle\n                cx={avatarCircleRadius}\n                cy={margin + avatarCircleRadius}\n                r={avatarCircleRadius}\n                fill={$snow} />\n            </clipPath>\n          </g>\n          {\n            avatarUrl ?\n              <image clipPath={`url(#${clipId})`} height=\"100%\" width=\"100%\" xlinkHref={avatarUrl} /> :\n              <use xlinkHref={`#${textId}`} clipPath={`url(#${clipId})`} />\n          }\n          <circle\n            cx={initialSize - extraNumCircleRadius}\n            cy={extraNumCircleRadius}\n            r={extraNumCircleRadius}\n            fill={$snow} />\n          <circle\n            cx={initialSize - extraNumCircleRadius}\n            cy={extraNumCircleRadius}\n            r={extraNumCircleRadius - extraNumCircleBorder}\n            fill={$gray} />\n\n          <text\n            x={initialSize - extraNumCircleRadius}\n            y={extraNumCircleRadius}\n            dy=\"3px\"\n            textAnchor=\"middle\"\n            style={{\n              fontSize: '9px',\n              stroke: 'none',\n              fill: $blue,\n              fontWeight: 'bolder',\n              opacity: '.5'\n            }}>\n            {`+${extraNum}`}\n          </text>\n        </svg>\n      );\n    } else {\n      res = (\n        <svg\n          className={styles.callAvatar}\n          style={avatarUrl ? avatarStyle : null}\n          viewBox={`0 0 ${initialSize} ${initialSize}`}\n          xmlns=\"http://www.w3.org/2000/svg\">\n          <defs>\n            <g id={textId}>\n              <text\n                x=\"0\"\n                y=\"0\"\n                dy=\"29px\"\n                dx=\"2\"\n                style={{\n                      fontSize: `${(initialSize / 2 - 2) * 2}px`,\n                      fill: $blue,\n                      opacity: '.5'\n                    }}\n                className={styles.portrait}>\n                {'\\ue904'}\n              </text>\n            </g>\n          </defs>\n          <circle\n            cx={initialSize / 2}\n            cy={initialSize / 2}\n            r={initialSize / 2}\n            fill={$snow} />\n          <g>\n            <clipPath id={clipId}>\n              <circle\n                cx={initialSize / 2}\n                cy={initialSize / 2}\n                r={initialSize / 2 - 1}\n              />\n            </clipPath>\n          </g>\n          {\n            avatarUrl ?\n              <image\n                clipPath={`url(#${clipId})`}\n                height=\"100%\"\n                width=\"100%\"\n                xlinkHref={avatarUrl}\n                preserveAspectRatio=\"xMinYMin slice\" /> :\n              <use xlinkHref={`#${textId}`} clipPath={`url(#${clipId})`} />\n          }\n        </svg>\n      );\n    }\n    return res;\n  }\n}\n\n\nCallAvatar.propTypes = {\n  isOnConferenceCall: PropTypes.bool,\n  avatarUrl: PropTypes.string,\n  extraNum: PropTypes.number,\n};\n\nCallAvatar.defaultProps = {\n  isOnConferenceCall: false,\n  avatarUrl: null,\n  extraNum: 0,\n};\n\n\nexport default CallAvatar;\n"]}