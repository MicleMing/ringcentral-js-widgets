{"version":3,"sources":["components/CallCtrlPanel/index.js"],"names":["CallCtrlPanel","props","state","isShowKeyPad","isShowFlipPanel","isShowMergeConfirm","hiddenKeyPad","setState","showKeyPad","showFlipPanel","hideFlipPanel","toggleTransferPanel","isShowTransferPanel","prevState","onMerge","hasConferenceCall","layout","callCtrlLayouts","normalCtrl","showMergeConfirm","hideMergeConfirm","confirmMerge","onOpenPartiesModal","nextProps","onKeyPadChange","onHangup","currentLocale","isOnFlip","flipNumbers","formatPhone","onFlip","onTransfer","isOnTransfer","searchContactList","searchContact","phoneTypeRenderer","recipientsContactInfoRenderer","recipientsContactPhoneRenderer","showBackButton","backButtonLabel","onBackButtonClick","phoneNumber","sessionId","callStatus","startTime","isOnMute","isOnHold","recordStatus","onMute","onUnmute","onHold","onUnhold","onRecord","onStopRecord","onPark","onAdd","nameMatches","fallBackName","areaCode","countryCode","selectedMatcherIndex","onSelectMatcherName","avatarUrl","brand","showContactDisplayPlaceholder","sourceIcons","direction","addDisabled","mergeDisabled","conferenceCallEquipped","conferenceCallParties","lastCallInfo","children","showSpinner","Component","propTypes","PropTypes","string","array","isRequired","number","bool","func","node","object","defaultProps","undefined"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;IAEMA,a;;;AACJ,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA,oJACXA,KADW;;AAEjB,UAAKC,KAAL,GAAa;AACXC,oBAAc,KADH;AAEXC,uBAAiB,KAFN;AAGXC,0BAAoB;AAHT,KAAb;;AAMA,UAAKC,YAAL,GAAoB,YAAM;AACxB,YAAKC,QAAL,CAAc;AACZJ,sBAAc;AADF,OAAd;AAGD,KAJD;;AAMA,UAAKK,UAAL,GAAkB,YAAM;AACtB,YAAKD,QAAL,CAAc;AACZJ,sBAAc;AADF,OAAd;AAGD,KAJD;;AAMA,UAAKM,aAAL,GAAqB,YAAM;AACzB,YAAKF,QAAL,CAAc;AACZH,yBAAiB;AADL,OAAd;AAGD,KAJD;;AAMA,UAAKM,aAAL,GAAqB,YAAM;AACzB,YAAKH,QAAL,CAAc;AACZH,yBAAiB;AADL,OAAd;AAGD,KAJD;;AAMA,UAAKO,mBAAL,GAA2B,YAAM;AAC/B,YAAKJ,QAAL,CAAc;AAAA,eAAc;AAC1BK,+BAAqB,CAACC,UAAUD;AADN,SAAd;AAAA,OAAd;AAGD,KAJD;AAKA,UAAKE,OAAL,GAAe,YAAM;AACnB,UACE,MAAKb,KAAL,CAAWc,iBAAX,IACA,MAAKd,KAAL,CAAWe,MAAX,KAAsBC,0BAAgBC,UAFxC,EAGE;AACA,cAAKC,gBAAL;AACD,OALD,MAKO,IAAI,MAAKlB,KAAL,CAAWa,OAAf,EAAwB;AAC7B,cAAKb,KAAL,CAAWa,OAAX;AACD;AACF,KATD;AAUA,UAAKK,gBAAL,GAAwB,YAAM;AAC5B,YAAKZ,QAAL,CAAc;AACZF,4BAAoB;AADR,OAAd;AAGD,KAJD;;AAMA,UAAKe,gBAAL,GAAwB,YAAM;AAC5B,YAAKb,QAAL,CAAc;AACZF,4BAAoB;AADR,OAAd;AAGD,KAJD;;AAMA,UAAKgB,YAAL,GAAoB,YAAM;AACxB,YAAKD,gBAAL;AACA,UAAI,MAAKnB,KAAL,CAAWa,OAAf,EAAwB;AACtB,cAAKb,KAAL,CAAWa,OAAX;AACD;AACF,KALD;;AAOA,UAAKQ,kBAAL,GAA0B,YAAM;AAC9B;AACD,KAFD;AAlEiB;AAqElB;;;;8CAEyBC,S,EAAW;AACnC,UAAI,CAACA,UAAUR,iBAAX,IAAgC,KAAKb,KAAL,CAAWG,kBAA/C,EAAmE;AACjE,aAAKe,gBAAL;AACD;AACF;;;6BAEQ;AACP,UAAI,KAAKlB,KAAL,CAAWC,YAAf,EAA6B;AAC3B,eACE,8BAAC,2BAAD;AACE,oBAAU,KAAKF,KAAL,CAAWuB,cADvB;AAEE,yBAAe,KAAKlB,YAFtB;AAGE,oBAAU,KAAKL,KAAL,CAAWwB,QAHvB;AAIE,yBAAe,KAAKxB,KAAL,CAAWyB;AAJ5B,UADF;AAQD;AACD,UAAI,KAAKxB,KAAL,CAAWE,eAAf,EAAgC;AAC9B,eACE,8BAAC,mBAAD;AACE,oBAAU,KAAKH,KAAL,CAAW0B,QADvB;AAEE,uBAAa,KAAK1B,KAAL,CAAW2B,WAF1B;AAGE,yBAAe,KAAK3B,KAAL,CAAWyB,aAH5B;AAIE,uBAAa,KAAKzB,KAAL,CAAW4B,WAJ1B;AAKE,yBAAe,KAAKnB,aALtB;AAME,kBAAQ,KAAKT,KAAL,CAAW6B,MANrB;AAOE,oBAAU,KAAK7B,KAAL,CAAWwB;AAPvB,UADF;AAWD;AACD,UAAI,KAAKvB,KAAL,CAAWU,mBAAf,EAAoC;AAClC,eACE,8BAAC,uBAAD;AACE,sBAAY,KAAKX,KAAL,CAAW8B,UADzB;AAEE,yBAAe,KAAK9B,KAAL,CAAWyB,aAF5B;AAGE,+BAAqB,KAAKf,mBAH5B;AAIE,wBAAc,KAAKV,KAAL,CAAW+B,YAJ3B;AAKE,6BAAmB,KAAK/B,KAAL,CAAWgC,iBALhC;AAME,yBAAe,KAAKhC,KAAL,CAAWiC,aAN5B;AAOE,uBAAa,KAAKjC,KAAL,CAAW4B,WAP1B;AAQE,6BAAmB,KAAK5B,KAAL,CAAWkC,iBARhC;AASE,yCAA+B,KAAKlC,KAAL,CAAWmC,6BAT5C;AAUE,0CAAgC,KAAKnC,KAAL,CAAWoC;AAV7C,UADF;AAcD;AACD,aACE;AAAC,iCAAD;AAAA;AACE,0BAAgB,KAAKpC,KAAL,CAAWqC,cAD7B;AAEE,2BAAiB,KAAKrC,KAAL,CAAWsC,eAF9B;AAGE,6BAAmB,KAAKtC,KAAL,CAAWuC,iBAHhC;AAIE,yBAAe,KAAKvC,KAAL,CAAWyB,aAJ5B;AAKE,uBAAa,KAAKzB,KAAL,CAAW4B,WAL1B;AAME,uBAAa,KAAK5B,KAAL,CAAWwC,WAN1B;AAOE,qBAAW,KAAKxC,KAAL,CAAWyC,SAPxB;AAQE,sBAAY,KAAKzC,KAAL,CAAW0C,UARzB;AASE,qBAAW,KAAK1C,KAAL,CAAW2C,SATxB;AAUE,oBAAU,KAAK3C,KAAL,CAAW4C,QAVvB;AAWE,oBAAU,KAAK5C,KAAL,CAAW6C,QAXvB;AAYE,wBAAc,KAAK7C,KAAL,CAAW8C,YAZ3B;AAaE,kBAAQ,KAAK9C,KAAL,CAAW+C,MAbrB;AAcE,oBAAU,KAAK/C,KAAL,CAAWgD,QAdvB;AAeE,kBAAQ,KAAKhD,KAAL,CAAWiD,MAfrB;AAgBE,oBAAU,KAAKjD,KAAL,CAAWkD,QAhBvB;AAiBE,oBAAU,KAAKlD,KAAL,CAAWmD,QAjBvB;AAkBE,wBAAc,KAAKnD,KAAL,CAAWoD,YAlB3B;AAmBE,wBAAc,KAAK7C,UAnBrB;AAoBE,oBAAU,KAAKP,KAAL,CAAWwB,QApBvB;AAqBE,kBAAQ,KAAKxB,KAAL,CAAWqD,MArBrB;AAsBE,iBAAO,KAAKrD,KAAL,CAAWsD,KAtBpB;AAuBE,mBAAS,KAAKzC,OAvBhB;AAwBE,uBAAa,KAAKb,KAAL,CAAWuD,WAxB1B;AAyBE,wBAAc,KAAKvD,KAAL,CAAWwD,YAzB3B;AA0BE,oBAAU,KAAKxD,KAAL,CAAWyD,QA1BvB;AA2BE,uBAAa,KAAKzD,KAAL,CAAW0D,WA3B1B;AA4BE,gCAAsB,KAAK1D,KAAL,CAAW2D,oBA5BnC;AA6BE,+BAAqB,KAAK3D,KAAL,CAAW4D,mBA7BlC;AA8BE,qBAAW,KAAK5D,KAAL,CAAW6D,SA9BxB;AA+BE,iBAAO,KAAK7D,KAAL,CAAW8D,KA/BpB;AAgCE,yCAA+B,KAAK9D,KAAL,CAAW+D,6BAhC5C;AAiCE,2BAAiB,KAAKvD,aAjCxB;AAkCE,iCAAuB,KAAKE,mBAlC9B;AAmCE,8BAAoB,KAAKW,kBAnC3B;AAoCE,uBAAa,KAAKrB,KAAL,CAAW2B,WApC1B;AAqCE,uBAAa,KAAK3B,KAAL,CAAWgE,WArC1B;AAsCE,kBAAQ,KAAKhE,KAAL,CAAWe,MAtCrB;AAuCE,qBAAW,KAAKf,KAAL,CAAWiE,SAvCxB;AAwCE,uBAAa,KAAKjE,KAAL,CAAWkE,WAxC1B;AAyCE,yBAAe,KAAKlE,KAAL,CAAWmE,aAzC5B;AA0CE,kCAAwB,KAAKnE,KAAL,CAAWoE,sBA1CrC;AA2CE,6BAAmB,KAAKpE,KAAL,CAAWc,iBA3ChC;AA4CE,iCAAuB,KAAKd,KAAL,CAAWqE,qBA5CpC;AA6CE,wBAAc,KAAKrE,KAAL,CAAWsE;AA7C3B;AA+CG,aAAKtE,KAAL,CAAWuE,QA/Cd;AAgDG,aAAKvE,KAAL,CAAWwE,WAAX,GAAyB,8BAAC,wBAAD,OAAzB,GAA8C,IAhDjD;AAiDG,aAAKxE,KAAL,CAAWe,MAAX,KAAsBC,0BAAgBC,UAAtC,GACG,8BAAC,2BAAD;AACA,yBAAe,KAAKjB,KAAL,CAAWyB,aAD1B;AAEA,gBAAM,KAAKxB,KAAL,CAAWG,kBAFjB;AAGA,mBAAS,KAAKgB,YAHd;AAIA,oBAAU,KAAKD,gBAJf;AAKA,yBAAe,KAAKnB,KAAL,CAAWqE;AAL1B,UADH,GAQG;AAzDN,OADF;AA8DD;;;EApLyBI,gB;;AAuL5B1E,cAAc2E,SAAd,GAA0B;AACxBhC,cAAYiC,oBAAUC,MADE;AAExBnC,aAAWkC,oBAAUC,MAFG;AAGxBpC,eAAamC,oBAAUC,MAHC;AAIxBrB,eAAaoB,oBAAUE,KAAV,CAAgBC,UAJL;AAKxBtB,gBAAcmB,oBAAUC,MAAV,CAAiBE,UALP;AAMxBrD,iBAAekD,oBAAUC,MAAV,CAAiBE,UANR;AAOxBnC,aAAWgC,oBAAUI,MAPG;AAQxBnC,YAAU+B,oBAAUK,IARI;AASxBnC,YAAU8B,oBAAUK,IATI;AAUxBtD,YAAUiD,oBAAUK,IAVI;AAWxBjD,gBAAc4C,oBAAUK,IAXA;AAYxBrD,eAAagD,oBAAUE,KAZC;AAaxB/B,gBAAc6B,oBAAUC,MAAV,CAAiBE,UAbP;AAcxB/B,UAAQ4B,oBAAUM,IAAV,CAAeH,UAdC;AAexB9B,YAAU2B,oBAAUM,IAAV,CAAeH,UAfD;AAgBxB7B,UAAQ0B,oBAAUM,IAAV,CAAeH,UAhBC;AAiBxB5B,YAAUyB,oBAAUM,IAAV,CAAeH,UAjBD;AAkBxB3B,YAAUwB,oBAAUM,IAAV,CAAeH,UAlBD;AAmBxB1B,gBAAcuB,oBAAUM,IAAV,CAAeH,UAnBL;AAoBxBxB,SAAOqB,oBAAUM,IApBO;AAqBxBpE,WAAS8D,oBAAUM,IArBK;AAsBxB5B,UAAQsB,oBAAUM,IAAV,CAAeH,UAtBC;AAuBxBtD,YAAUmD,oBAAUM,IAAV,CAAeH,UAvBD;AAwBxBjD,UAAQ8C,oBAAUM,IAAV,CAAeH,UAxBC;AAyBxBhD,cAAY6C,oBAAUM,IAAV,CAAeH,UAzBH;AA0BxBzC,kBAAgBsC,oBAAUK,IA1BF;AA2BxB1C,mBAAiBqC,oBAAUC,MA3BH;AA4BxBrC,qBAAmBoC,oBAAUM,IA5BL;AA6BxB1D,kBAAgBoD,oBAAUM,IAAV,CAAeH,UA7BP;AA8BxBlD,eAAa+C,oBAAUM,IAAV,CAAeH,UA9BJ;AA+BxBP,YAAUI,oBAAUO,IA/BI;AAgCxBzB,YAAUkB,oBAAUC,MAAV,CAAiBE,UAhCH;AAiCxBpB,eAAaiB,oBAAUC,MAAV,CAAiBE,UAjCN;AAkCxBnB,wBAAsBgB,oBAAUI,MAAV,CAAiBD,UAlCf;AAmCxBlB,uBAAqBe,oBAAUM,IAAV,CAAeH,UAnCZ;AAoCxBjB,aAAWc,oBAAUC,MApCG;AAqCxBd,SAAOa,oBAAUC,MArCO;AAsCxBb,iCAA+BY,oBAAUK,IAtCjB;AAuCxBhB,eAAaW,oBAAUQ,MAvCC;AAwCxBnD,qBAAmB2C,oBAAUE,KAAV,CAAgBC,UAxCX;AAyCxB7C,iBAAe0C,oBAAUM,IAAV,CAAeH,UAzCN;AA0CxB5C,qBAAmByC,oBAAUM,IA1CL;AA2CxB9C,iCAA+BwC,oBAAUM,IA3CjB;AA4CxB7C,kCAAgCuC,oBAAUM,IA5ClB;AA6CxBlE,UAAQ4D,oBAAUC,MAAV,CAAiBE,UA7CD;AA8CxBN,eAAaG,oBAAUK,IA9CC;AA+CxBf,aAAWU,oBAAUC,MA/CG;AAgDxBV,eAAaS,oBAAUK,IAhDC;AAiDxBb,iBAAeQ,oBAAUK,IAjDD;AAkDxBZ,0BAAwBO,oBAAUK,IAlDV;AAmDxBlE,qBAAmB6D,oBAAUK,IAnDL;AAoDxBV,gBAAcK,oBAAUQ,MApDA;AAqDxBd,yBAAuBM,oBAAUE;AArDT,CAA1B;;AAwDA9E,cAAcqF,YAAd,GAA6B;AAC3BzC,aAAW,IADgB;AAE3BC,YAAU,KAFiB;AAG3BC,YAAU,KAHiB;AAI3Bd,gBAAc,KAJa;AAK3BL,YAAU,KALiB;AAM3BC,eAAa,EANc;AAO3Ba,eAAa,IAPc;AAQ3B+B,YAAUc,SARiB;AAS3BxB,aAAW,IATgB;AAU3BxB,kBAAgB,KAVW;AAW3BC,mBAAiB,cAXU;AAY3BC,qBAAmB,IAZQ;AAa3BE,aAAW4C,SAbgB;AAc3B3C,cAAY,IAde;AAe3BoB,SAAO,aAfoB;AAgB3BC,iCAA+B,IAhBJ;AAiB3BC,eAAaqB,SAjBc;AAkB3BnD,qBAAmBmD,SAlBQ;AAmB3BlD,iCAA+BkD,SAnBJ;AAoB3BjD,kCAAgCiD,SApBL;AAqB3B/B,SAAO+B,SArBoB;AAsB3BxE,WAASwE,SAtBkB;AAuB3Bb,eAAa,KAvBc;AAwB3BP,aAAW,IAxBgB;AAyB3BC,eAAa,KAzBc;AA0B3BC,iBAAe,KA1BY;AA2B3BC,0BAAwB,KA3BG;AA4B3BtD,qBAAmB,KA5BQ;AA6B3BuD,yBAAuBgB,SA7BI;AA8B3Bf,gBAAce;AA9Ba,CAA7B;;kBAiCetF,a","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport callCtrlLayouts from '../../enums/callCtrlLayouts';\nimport ActiveCallDialPad from '../ActiveCallDialPad';\nimport ActiveCallPanel from '../ActiveCallPanel';\nimport FlipPanel from '../FlipPanel';\nimport TransferPanel from '../TransferPanel';\nimport ConfirmMergeModal from '../ConfirmMergeModal';\nimport SpinnerOverlay from '../SpinnerOverlay';\n\nclass CallCtrlPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isShowKeyPad: false,\n      isShowFlipPanel: false,\n      isShowMergeConfirm: false,\n    };\n\n    this.hiddenKeyPad = () => {\n      this.setState({\n        isShowKeyPad: false,\n      });\n    };\n\n    this.showKeyPad = () => {\n      this.setState({\n        isShowKeyPad: true,\n      });\n    };\n\n    this.showFlipPanel = () => {\n      this.setState({\n        isShowFlipPanel: true,\n      });\n    };\n\n    this.hideFlipPanel = () => {\n      this.setState({\n        isShowFlipPanel: false,\n      });\n    };\n\n    this.toggleTransferPanel = () => {\n      this.setState(prevState => ({\n        isShowTransferPanel: !prevState.isShowTransferPanel\n      }));\n    };\n    this.onMerge = () => {\n      if (\n        this.props.hasConferenceCall &&\n        this.props.layout === callCtrlLayouts.normalCtrl\n      ) {\n        this.showMergeConfirm();\n      } else if (this.props.onMerge) {\n        this.props.onMerge();\n      }\n    };\n    this.showMergeConfirm = () => {\n      this.setState({\n        isShowMergeConfirm: true,\n      });\n    };\n\n    this.hideMergeConfirm = () => {\n      this.setState({\n        isShowMergeConfirm: false,\n      });\n    };\n\n    this.confirmMerge = () => {\n      this.hideMergeConfirm();\n      if (this.props.onMerge) {\n        this.props.onMerge();\n      }\n    };\n\n    this.onOpenPartiesModal = () => {\n      // TODO:\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.hasConferenceCall && this.state.isShowMergeConfirm) {\n      this.hideMergeConfirm();\n    }\n  }\n\n  render() {\n    if (this.state.isShowKeyPad) {\n      return (\n        <ActiveCallDialPad\n          onChange={this.props.onKeyPadChange}\n          hiddenDialPad={this.hiddenKeyPad}\n          onHangup={this.props.onHangup}\n          currentLocale={this.props.currentLocale}\n        />\n      );\n    }\n    if (this.state.isShowFlipPanel) {\n      return (\n        <FlipPanel\n          isOnFlip={this.props.isOnFlip}\n          flipNumbers={this.props.flipNumbers}\n          currentLocale={this.props.currentLocale}\n          formatPhone={this.props.formatPhone}\n          hideFlipPanel={this.hideFlipPanel}\n          onFlip={this.props.onFlip}\n          complete={this.props.onHangup}\n        />\n      );\n    }\n    if (this.state.isShowTransferPanel) {\n      return (\n        <TransferPanel\n          onTransfer={this.props.onTransfer}\n          currentLocale={this.props.currentLocale}\n          toggleTransferPanel={this.toggleTransferPanel}\n          isOnTransfer={this.props.isOnTransfer}\n          searchContactList={this.props.searchContactList}\n          searchContact={this.props.searchContact}\n          formatPhone={this.props.formatPhone}\n          phoneTypeRenderer={this.props.phoneTypeRenderer}\n          recipientsContactInfoRenderer={this.props.recipientsContactInfoRenderer}\n          recipientsContactPhoneRenderer={this.props.recipientsContactPhoneRenderer}\n        />\n      );\n    }\n    return (\n      <ActiveCallPanel\n        showBackButton={this.props.showBackButton}\n        backButtonLabel={this.props.backButtonLabel}\n        onBackButtonClick={this.props.onBackButtonClick}\n        currentLocale={this.props.currentLocale}\n        formatPhone={this.props.formatPhone}\n        phoneNumber={this.props.phoneNumber}\n        sessionId={this.props.sessionId}\n        callStatus={this.props.callStatus}\n        startTime={this.props.startTime}\n        isOnMute={this.props.isOnMute}\n        isOnHold={this.props.isOnHold}\n        recordStatus={this.props.recordStatus}\n        onMute={this.props.onMute}\n        onUnmute={this.props.onUnmute}\n        onHold={this.props.onHold}\n        onUnhold={this.props.onUnhold}\n        onRecord={this.props.onRecord}\n        onStopRecord={this.props.onStopRecord}\n        onShowKeyPad={this.showKeyPad}\n        onHangup={this.props.onHangup}\n        onPark={this.props.onPark}\n        onAdd={this.props.onAdd}\n        onMerge={this.onMerge}\n        nameMatches={this.props.nameMatches}\n        fallBackName={this.props.fallBackName}\n        areaCode={this.props.areaCode}\n        countryCode={this.props.countryCode}\n        selectedMatcherIndex={this.props.selectedMatcherIndex}\n        onSelectMatcherName={this.props.onSelectMatcherName}\n        avatarUrl={this.props.avatarUrl}\n        brand={this.props.brand}\n        showContactDisplayPlaceholder={this.props.showContactDisplayPlaceholder}\n        onShowFlipPanel={this.showFlipPanel}\n        onToggleTransferPanel={this.toggleTransferPanel}\n        onOpenPartiesModal={this.onOpenPartiesModal}\n        flipNumbers={this.props.flipNumbers}\n        sourceIcons={this.props.sourceIcons}\n        layout={this.props.layout}\n        direction={this.props.direction}\n        addDisabled={this.props.addDisabled}\n        mergeDisabled={this.props.mergeDisabled}\n        conferenceCallEquipped={this.props.conferenceCallEquipped}\n        hasConferenceCall={this.props.hasConferenceCall}\n        conferenceCallParties={this.props.conferenceCallParties}\n        lastCallInfo={this.props.lastCallInfo}\n      >\n        {this.props.children}\n        {this.props.showSpinner ? <SpinnerOverlay /> : null}\n        {this.props.layout === callCtrlLayouts.normalCtrl\n          ? <ConfirmMergeModal\n            currentLocale={this.props.currentLocale}\n            show={this.state.isShowMergeConfirm}\n            onMerge={this.confirmMerge}\n            onCancel={this.hideMergeConfirm}\n            partyProfiles={this.props.conferenceCallParties}\n          />\n          : null\n        }\n      </ActiveCallPanel>\n    );\n  }\n}\n\nCallCtrlPanel.propTypes = {\n  callStatus: PropTypes.string,\n  sessionId: PropTypes.string,\n  phoneNumber: PropTypes.string,\n  nameMatches: PropTypes.array.isRequired,\n  fallBackName: PropTypes.string.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  startTime: PropTypes.number,\n  isOnMute: PropTypes.bool,\n  isOnHold: PropTypes.bool,\n  isOnFlip: PropTypes.bool,\n  isOnTransfer: PropTypes.bool,\n  flipNumbers: PropTypes.array,\n  recordStatus: PropTypes.string.isRequired,\n  onMute: PropTypes.func.isRequired,\n  onUnmute: PropTypes.func.isRequired,\n  onHold: PropTypes.func.isRequired,\n  onUnhold: PropTypes.func.isRequired,\n  onRecord: PropTypes.func.isRequired,\n  onStopRecord: PropTypes.func.isRequired,\n  onAdd: PropTypes.func,\n  onMerge: PropTypes.func,\n  onPark: PropTypes.func.isRequired,\n  onHangup: PropTypes.func.isRequired,\n  onFlip: PropTypes.func.isRequired,\n  onTransfer: PropTypes.func.isRequired,\n  showBackButton: PropTypes.bool,\n  backButtonLabel: PropTypes.string,\n  onBackButtonClick: PropTypes.func,\n  onKeyPadChange: PropTypes.func.isRequired,\n  formatPhone: PropTypes.func.isRequired,\n  children: PropTypes.node,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  selectedMatcherIndex: PropTypes.number.isRequired,\n  onSelectMatcherName: PropTypes.func.isRequired,\n  avatarUrl: PropTypes.string,\n  brand: PropTypes.string,\n  showContactDisplayPlaceholder: PropTypes.bool,\n  sourceIcons: PropTypes.object,\n  searchContactList: PropTypes.array.isRequired,\n  searchContact: PropTypes.func.isRequired,\n  phoneTypeRenderer: PropTypes.func,\n  recipientsContactInfoRenderer: PropTypes.func,\n  recipientsContactPhoneRenderer: PropTypes.func,\n  layout: PropTypes.string.isRequired,\n  showSpinner: PropTypes.bool,\n  direction: PropTypes.string,\n  addDisabled: PropTypes.bool,\n  mergeDisabled: PropTypes.bool,\n  conferenceCallEquipped: PropTypes.bool,\n  hasConferenceCall: PropTypes.bool,\n  lastCallInfo: PropTypes.object,\n  conferenceCallParties: PropTypes.array,\n};\n\nCallCtrlPanel.defaultProps = {\n  startTime: null,\n  isOnMute: false,\n  isOnHold: false,\n  isOnTransfer: false,\n  isOnFlip: false,\n  flipNumbers: [],\n  phoneNumber: null,\n  children: undefined,\n  avatarUrl: null,\n  showBackButton: false,\n  backButtonLabel: 'Active Calls',\n  onBackButtonClick: null,\n  sessionId: undefined,\n  callStatus: null,\n  brand: 'RingCentral',\n  showContactDisplayPlaceholder: true,\n  sourceIcons: undefined,\n  phoneTypeRenderer: undefined,\n  recipientsContactInfoRenderer: undefined,\n  recipientsContactPhoneRenderer: undefined,\n  onAdd: undefined,\n  onMerge: undefined,\n  showSpinner: false,\n  direction: null,\n  addDisabled: false,\n  mergeDisabled: false,\n  conferenceCallEquipped: false,\n  hasConferenceCall: false,\n  conferenceCallParties: undefined,\n  lastCallInfo: undefined,\n};\n\nexport default CallCtrlPanel;\n"]}