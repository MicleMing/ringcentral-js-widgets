{"version":3,"sources":["components/ActiveCallButton/index.js"],"names":["ActiveCallButton","props","className","styles","btnSvg","buttonClassName","button","active","buttonActive","disabled","buttonDisabled","text","title","split","map","line","index","buttonSize","width","height","x","y","toString","onClick","icon","showBorder","iconWidth","iconHeight","iconX","iconY","buttonTitle","propTypes","PropTypes","string","func","bool","isRequired","number","defaultProps","undefined"],"mappings":";;;;;kBAOwBA,gB;;AAPxB;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;AAEe,SAASA,gBAAT,CAA0BC,KAA1B,EAAiC;AAC9C,MAAMC,YAAY,0BAAWC,iBAAOC,MAAlB,EAA0BH,MAAMC,SAAhC,CAAlB;AACA,MAAMG,kBAAkB,0BACtBF,iBAAOG,MADe,EAEtBL,MAAMI,eAFgB,EAGtBJ,MAAMM,MAAN,GAAeJ,iBAAOK,YAAtB,GAAqC,IAHf,EAItBP,MAAMQ,QAAN,GAAiBN,iBAAOO,cAAxB,GAAyC,IAJnB,CAAxB;AAMA,MAAMC,OAAOV,MAAMW,KAAN,CAAYC,KAAZ,CAAkB,IAAlB,EAAwBC,GAAxB,CAA4B,UAACC,IAAD,EAAOC,KAAP;AAAA,WACvC;AAAA;AAAA,QAAO,IAAIA,QAAQ,OAAR,GAAkB,CAA7B,EAAgC,GAAE,KAAlC,EAAwC,KAAKD,IAA7C;AACGA;AADH,KADuC;AAAA,GAA5B,CAAb;AAKA,MAAME,aAAa,KAAnB;;AAEA,SACE;AAAA;AAAA;AACE,iBAAWf,SADb;AAEE,eAAQ,aAFV;AAGE,aAAOD,MAAMiB,KAHf;AAIE,cAAQjB,MAAMkB,MAJhB;AAKE,SAAGlB,MAAMmB,CALX;AAME,SAAGnB,MAAMoB;AANX;AAQE,kCAAC,sBAAD;AACE,aAAOJ,WAAWK,QAAX,EADT;AAEE,cAAQL,WAAWK,QAAX,EAFV;AAGE,SAAG,MAAM,CAAN,GAAUL,aAAa,CAH5B;AAIE,SAAG,CAJL;AAKE,iBAAWZ,eALb;AAME,eAASJ,MAAMsB,OANjB;AAOE,YAAMtB,MAAMuB,IAPd;AAQE,gBAAUvB,MAAMQ,QARlB;AASE,kBAAYR,MAAMwB,UATpB;AAUE,qBAAexB,MAAMI,eAVvB;AAWE,iBAAWJ,MAAMyB,SAXnB;AAYE,kBAAYzB,MAAM0B,UAZpB;AAaE,aAAO1B,MAAM2B,KAbf;AAcE,aAAO3B,MAAM4B;AAdf,MARF;AAwBE;AAAA;AAAA;AACE,mBAAW1B,iBAAO2B,WADpB;AAEE,WAAE,KAFJ;AAGE,WAAE,KAHJ;AAIE,oBAAW;AAJb;AAMGnB;AANH;AAxBF,GADF;AAmCD;;AAEDX,iBAAiB+B,SAAjB,GAA6B;AAC3B7B,aAAW8B,oBAAUC,MADM;AAE3B5B,mBAAiB2B,oBAAUC,MAFA;AAG3BV,WAASS,oBAAUE,IAHQ;AAI3BzB,YAAUuB,oBAAUG,IAJO;AAK3B5B,UAAQyB,oBAAUG,IALS;AAM3BvB,SAAOoB,oBAAUC,MAAV,CAAiBG,UANG;AAO3BZ,QAAMQ,oBAAUE,IAPW;AAQ3BT,cAAYO,oBAAUG,IARK;AAS3BjB,SAAOc,oBAAUC,MATU;AAU3Bd,UAAQa,oBAAUC,MAVS;AAW3Bb,KAAGY,oBAAUK,MAXc;AAY3BhB,KAAGW,oBAAUK,MAZc;AAa3BX,aAAWM,oBAAUK,MAbM;AAc3BV,cAAYK,oBAAUK,MAdK;AAe3BT,SAAOI,oBAAUK,MAfU;AAgB3BR,SAAOG,oBAAUK;AAhBU,CAA7B;;AAmBArC,iBAAiBsC,YAAjB,GAAgC;AAC9BpC,aAAWqC,SADmB;AAE9BlC,mBAAiBkC,SAFa;AAG9BhB,WAASgB,SAHqB;AAI9B9B,YAAU,KAJoB;AAK9BF,UAAQ,KALsB;AAM9BiB,QAAMe,SANwB;AAO9Bd,cAAY,IAPkB;AAQ9BP,SAAO,MARuB;AAS9BC,UAAQ,MATsB;AAU9BC,KAAG,CAV2B;AAW9BC,KAAG,CAX2B;AAY9BK,aAAWa,SAZmB;AAa9BZ,cAAYY,SAbkB;AAc9BX,SAAOW,SAduB;AAe9BV,SAAOU;AAfuB,CAAhC","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport CircleButton from '../CircleButton';\n\nimport styles from './styles.scss';\n\nexport default function ActiveCallButton(props) {\n  const className = classnames(styles.btnSvg, props.className);\n  const buttonClassName = classnames(\n    styles.button,\n    props.buttonClassName,\n    props.active ? styles.buttonActive : null,\n    props.disabled ? styles.buttonDisabled : null,\n  );\n  const text = props.title.split('\\n').map((line, index) => (\n    <tspan dy={index ? '1.1em' : 0} x=\"250\" key={line}>\n      {line}\n    </tspan>\n  ));\n  const buttonSize = 383.8;\n\n  return (\n    <svg\n      className={className}\n      viewBox=\"0 0 500 600\"\n      width={props.width}\n      height={props.height}\n      x={props.x}\n      y={props.y}\n    >\n      <CircleButton\n        width={buttonSize.toString()}\n        height={buttonSize.toString()}\n        x={500 / 2 - buttonSize / 2}\n        y={0}\n        className={buttonClassName}\n        onClick={props.onClick}\n        icon={props.icon}\n        disabled={props.disabled}\n        showBorder={props.showBorder}\n        iconClassName={props.buttonClassName}\n        iconWidth={props.iconWidth}\n        iconHeight={props.iconHeight}\n        iconX={props.iconX}\n        iconY={props.iconY}\n      />\n      <text\n        className={styles.buttonTitle}\n        x=\"250\"\n        y=\"500\"\n        textAnchor=\"middle\"\n      >\n        {text}\n      </text>\n    </svg>\n  );\n}\n\nActiveCallButton.propTypes = {\n  className: PropTypes.string,\n  buttonClassName: PropTypes.string,\n  onClick: PropTypes.func,\n  disabled: PropTypes.bool,\n  active: PropTypes.bool,\n  title: PropTypes.string.isRequired,\n  icon: PropTypes.func,\n  showBorder: PropTypes.bool,\n  width: PropTypes.string,\n  height: PropTypes.string,\n  x: PropTypes.number,\n  y: PropTypes.number,\n  iconWidth: PropTypes.number,\n  iconHeight: PropTypes.number,\n  iconX: PropTypes.number,\n  iconY: PropTypes.number,\n};\n\nActiveCallButton.defaultProps = {\n  className: undefined,\n  buttonClassName: undefined,\n  onClick: undefined,\n  disabled: false,\n  active: false,\n  icon: undefined,\n  showBorder: true,\n  width: '100%',\n  height: '100%',\n  x: 0,\n  y: 0,\n  iconWidth: undefined,\n  iconHeight: undefined,\n  iconX: undefined,\n  iconY: undefined,\n};\n"]}