{"version":3,"sources":["containers/CallCtrlPage/index.js"],"names":["CallCtrlPage","props","state","selectedMatcherIndex","avatarUrl","onSelectMatcherName","option","nameMatches","findIndex","match","id","setState","contact","updateSessionMatchedContact","session","getAvatarUrl","then","onMute","onUnmute","onHold","onUnhold","onRecord","onStopRecord","onHangup","onKeyPadChange","sendDTMF","value","onFlip","onTransfer","onPark","onAdd","onMerge","_mounted","_updateAvatarAndMatchIndex","nextProps","layout","callCtrlLayouts","mergeCtrl","direction","callDirections","inbound","onIncomingCallCaptured","contactMatch","phoneNumber","outbound","to","from","fallbackUserName","i18n","getString","currentLocale","backButtonLabel","formatPhone","callStatus","startTime","isOnMute","isOnHold","isOnFlip","isOnTransfer","recordStatus","showBackButton","onBackButtonClick","areaCode","countryCode","brand","showContactDisplayPlaceholder","flipNumbers","sourceIcons","searchContactList","searchContact","phoneTypeRenderer","recipientsContactInfoRenderer","recipientsContactPhoneRenderer","showSpinner","addDisabled","mergeDisabled","conferenceCallEquipped","hasConferenceCall","conferenceCallParties","lastCallInfo","onLastCallEnded","children","Component","propTypes","PropTypes","shape","string","number","bool","object","isRequired","func","node","array","defaultProps","undefined","calleeType","calleeTypes","unknow","i","mapToProps","_","phone","webphone","locale","contactMatcher","regionSettings","forwardingNumber","contactSearch","conferenceCall","callingSettings","callMonitor","normalCtrl","currentSession","activeSession","contactMapping","dataMapping","fromMatches","toMatches","isWebRTC","callingMode","callingModes","data","length","isOnConference","isMerging","isConferenceSession","conferenceData","conferences","mergingPair","find","newVal","isOverload","conference","partyProfiles","status","sessionStatus","finished","conferenceCtrl","fullName","sortedResult","mapToFunctions","routerInteraction","hangup","sessionId","mute","unmute","hold","unhold","startRecord","stopRecord","flipNumber","flip","transferNumber","transfer","park","debouncedSearch","searchString","sessionData","x","sessions","setMergeParty","fromSessionId","outBoundOnholdCalls","activeOnHoldCalls","filter","call","push","fromNumber","replace","currentPath","_sessions","get","isOnhold","local","toSessionId","sessionToMergeWith","webphoneSessions","mergeToConference","conferenceSession","resume","CallCtrlContainer","default"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;IAEMA,Y;;;AACJ,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA,kJACXA,KADW;;AAEjB,UAAKC,KAAL,GAAa;AACXC,4BAAsB,CADX;AAEXC,iBAAW;AAFA,KAAb;;AAKA,UAAKC,mBAAL,GAA2B,UAACC,MAAD,EAAY;AACrC,UAAMC,cAAc,MAAKN,KAAL,CAAWM,WAAX,IAA0B,EAA9C;AACA,UAAIJ,uBAAuBI,YAAYC,SAAZ,CACzB;AAAA,eAASC,MAAMC,EAAN,KAAaJ,OAAOI,EAA7B;AAAA,OADyB,CAA3B;AAGA,UAAIP,uBAAuB,CAA3B,EAA8B;AAC5BA,+BAAuB,CAAvB;AACD;AACD,YAAKQ,QAAL,CAAc;AACZR,kDADY;AAEZC,mBAAW;AAFC,OAAd;AAIA,UAAMQ,UAAUL,YAAYJ,oBAAZ,CAAhB;AACA,UAAIS,OAAJ,EAAa;AACX,cAAKX,KAAL,CAAWY,2BAAX,CAAuC,MAAKZ,KAAL,CAAWa,OAAX,CAAmBJ,EAA1D,EAA8DE,OAA9D;AACA,cAAKX,KAAL,CAAWc,YAAX,CAAwBH,OAAxB,EAAiCI,IAAjC,CAAsC,UAACZ,SAAD,EAAe;AACnD,gBAAKO,QAAL,CAAc,EAAEP,oBAAF,EAAd;AACD,SAFD;AAGD;AACF,KAnBD;;AAqBA,UAAKa,MAAL,GAAc;AAAA,aACZ,MAAKhB,KAAL,CAAWgB,MAAX,CAAkB,MAAKhB,KAAL,CAAWa,OAAX,CAAmBJ,EAArC,CADY;AAAA,KAAd;AAEA,UAAKQ,QAAL,GAAgB;AAAA,aACd,MAAKjB,KAAL,CAAWiB,QAAX,CAAoB,MAAKjB,KAAL,CAAWa,OAAX,CAAmBJ,EAAvC,CADc;AAAA,KAAhB;AAEA,UAAKS,MAAL,GAAc;AAAA,aACZ,MAAKlB,KAAL,CAAWkB,MAAX,CAAkB,MAAKlB,KAAL,CAAWa,OAAX,CAAmBJ,EAArC,CADY;AAAA,KAAd;AAEA,UAAKU,QAAL,GAAgB;AAAA,aACd,MAAKnB,KAAL,CAAWmB,QAAX,CAAoB,MAAKnB,KAAL,CAAWa,OAAX,CAAmBJ,EAAvC,CADc;AAAA,KAAhB;AAEA,UAAKW,QAAL,GAAgB;AAAA,aACd,MAAKpB,KAAL,CAAWoB,QAAX,CAAoB,MAAKpB,KAAL,CAAWa,OAAX,CAAmBJ,EAAvC,CADc;AAAA,KAAhB;AAEA,UAAKY,YAAL,GAAoB;AAAA,aAClB,MAAKrB,KAAL,CAAWqB,YAAX,CAAwB,MAAKrB,KAAL,CAAWa,OAAX,CAAmBJ,EAA3C,CADkB;AAAA,KAApB;AAEA,UAAKa,QAAL,GAAgB;AAAA,aACd,MAAKtB,KAAL,CAAWsB,QAAX,CAAoB,MAAKtB,KAAL,CAAWa,OAAX,CAAmBJ,EAAvC,CADc;AAAA,KAAhB;AAEA,UAAKc,cAAL,GAAsB;AAAA,aACpB,MAAKvB,KAAL,CAAWwB,QAAX,CAAoBC,KAApB,EAA2B,MAAKzB,KAAL,CAAWa,OAAX,CAAmBJ,EAA9C,CADoB;AAAA,KAAtB;AAEA,UAAKiB,MAAL,GAAc;AAAA,aACZ,MAAK1B,KAAL,CAAW0B,MAAX,CAAkBD,KAAlB,EAAyB,MAAKzB,KAAL,CAAWa,OAAX,CAAmBJ,EAA5C,CADY;AAAA,KAAd;AAEA,UAAKkB,UAAL,GAAkB;AAAA,aAChB,MAAK3B,KAAL,CAAW2B,UAAX,CAAsBF,KAAtB,EAA6B,MAAKzB,KAAL,CAAWa,OAAX,CAAmBJ,EAAhD,CADgB;AAAA,KAAlB;AAEA,UAAKmB,MAAL,GAAc;AAAA,aACZ,MAAK5B,KAAL,CAAW4B,MAAX,CAAkB,MAAK5B,KAAL,CAAWa,OAAX,CAAmBJ,EAArC,CADY;AAAA,KAAd;AAEA,UAAKoB,KAAL,GAAa;AAAA,aACX,MAAK7B,KAAL,CAAW6B,KAAX,CAAiB,MAAK7B,KAAL,CAAWa,OAAX,CAAmBJ,EAApC,CADW;AAAA,KAAb;AAEA,UAAKqB,OAAL,GAAe;AAAA,aACb,MAAK9B,KAAL,CAAW8B,OAAX,CAAmB,MAAK9B,KAAL,CAAWa,OAAX,CAAmBJ,EAAtC,CADa;AAAA,KAAf;AApDiB;AAsDlB;;;;wCAEmB;AAClB,WAAKsB,QAAL,GAAgB,IAAhB;AACA,WAAKC,0BAAL,CAAgC,KAAKhC,KAArC;AACD;;;8CAEyBiC,S,EAAW;AACnC,UACEA,UAAUC,MAAV,KAAqBC,0BAAgBC,SAArC,IACAH,UAAUpB,OAAV,CAAkBwB,SAAlB,KAAgCC,yBAAeC,OAFjD,EAGE;AACAN,kBAAUO,sBAAV;AACD;AACD,UAAI,KAAKxC,KAAL,CAAWa,OAAX,CAAmBJ,EAAnB,KAA0BwB,UAAUpB,OAAV,CAAkBJ,EAAhD,EAAoD;AAClD,aAAKuB,0BAAL,CAAgCC,SAAhC;AACD;AACF;;;2CAEsB;AACrB,WAAKF,QAAL,GAAgB,KAAhB;AACD;;;+CAE0B/B,K,EAAO;AAAA;;AAChC,UAAIW,UAAUX,MAAMa,OAAN,CAAc4B,YAA5B;AACA,UAAIvC,uBAAuB,CAA3B;AACA,UAAI,CAACS,OAAL,EAAc;AACZA,kBAAUX,MAAMM,WAAN,IAAqBN,MAAMM,WAAN,CAAkB,CAAlB,CAA/B;AACD,OAFD,MAEO;AACLJ,+BAAuBF,MAAMM,WAAN,CAAkBC,SAAlB,CAA4B;AAAA,iBACjDC,MAAMC,EAAN,KAAaE,QAAQF,EAD4B;AAAA,SAA5B,CAAvB;AAGD;AACD,WAAKC,QAAL,CAAc;AACZR,kDADY;AAEZC,mBAAW;AAFC,OAAd;AAIA,UAAIQ,OAAJ,EAAa;AACXX,cAAMc,YAAN,CAAmBH,OAAnB,EAA4BI,IAA5B,CAAiC,UAACZ,SAAD,EAAe;AAC9C,cAAI,CAAC,OAAK4B,QAAV,EAAoB;AAClB;AACD;AACD,iBAAKrB,QAAL,CAAc,EAAEP,oBAAF,EAAd;AACD,SALD;AAMD;AACF;;;6BAEQ;AAAA,UACCU,OADD,GACa,KAAKb,KADlB,CACCa,OADD;;AAEP,UAAI,CAACA,QAAQJ,EAAb,EAAiB;AACf,eAAO,IAAP;AACD;;AAED,UAAMiC,cAAc7B,QAAQwB,SAAR,KAAsBC,yBAAeK,QAArC,GAClB9B,QAAQ+B,EADU,GACL/B,QAAQgC,IADvB;;AAGA,UAAIC,yBAAJ;AACA,UAAIjC,QAAQwB,SAAR,KAAsBC,yBAAeC,OAArC,IAAgD1B,QAAQgC,IAAR,KAAiB,WAArE,EAAkF;AAChFC,2BAAmBC,eAAKC,SAAL,CAAe,WAAf,EAA4B,KAAKhD,KAAL,CAAWiD,aAAvC,CAAnB;AACD;AACD,UAAI,CAACH,gBAAL,EAAuB;AACrBA,2BAAmBC,eAAKC,SAAL,CAAe,SAAf,EAA0B,KAAKhD,KAAL,CAAWiD,aAArC,CAAnB;AACD;;AAED,UAAMC,kBAAkB,KAAKlD,KAAL,CAAWkD,eAAX,GACpB,KAAKlD,KAAL,CAAWkD,eADS,GAEpBH,eAAKC,SAAL,CAAe,aAAf,EAA8B,KAAKhD,KAAL,CAAWiD,aAAzC,CAFJ;;AAIA,aACE;AAAC,+BAAD;AAAA;AACE,yBAAe,KAAKjD,KAAL,CAAWiD,aAD5B;AAEE,uBAAa,KAAKjD,KAAL,CAAWmD,WAF1B;AAGE,uBAAaT,WAHf;AAIE,qBAAW7B,QAAQJ,EAJrB;AAKE,sBAAYI,QAAQuC,UALtB;AAME,qBAAWvC,QAAQwC,SANrB;AAOE,oBAAUxC,QAAQyC,QAPpB;AAQE,oBAAUzC,QAAQ0C,QARpB;AASE,oBAAU1C,QAAQ2C,QATpB;AAUE,wBAAc3C,QAAQ4C,YAVxB;AAWE,wBAAc5C,QAAQ6C,YAXxB;AAYE,0BAAgB,KAAK1D,KAAL,CAAW2D,cAZ7B;AAaE,2BAAiBT,eAbnB;AAcE,6BAAmB,KAAKlD,KAAL,CAAW4D,iBAdhC;AAeE,kBAAQ,KAAK5C,MAff;AAgBE,oBAAU,KAAKC,QAhBjB;AAiBE,kBAAQ,KAAKC,MAjBf;AAkBE,oBAAU,KAAKC,QAlBjB;AAmBE,oBAAU,KAAKC,QAnBjB;AAoBE,wBAAc,KAAKC,YApBrB;AAqBE,0BAAgB,KAAKE,cArBvB;AAsBE,oBAAU,KAAKD,QAtBjB;AAuBE,iBAAO,KAAKO,KAvBd;AAwBE,mBAAS,KAAKC,OAxBhB;AAyBE,kBAAQ,KAAKJ,MAzBf;AA0BE,sBAAY,KAAKC,UA1BnB;AA2BE,kBAAQ,KAAKC,MA3Bf;AA4BE,uBAAa,KAAK5B,KAAL,CAAWM,WA5B1B;AA6BE,wBAAcwC,gBA7BhB;AA8BE,oBAAU,KAAK9C,KAAL,CAAW6D,QA9BvB;AA+BE,uBAAa,KAAK7D,KAAL,CAAW8D,WA/B1B;AAgCE,gCAAsB,KAAK7D,KAAL,CAAWC,oBAhCnC;AAiCE,+BAAqB,KAAKE,mBAjC5B;AAkCE,qBAAW,KAAKH,KAAL,CAAWE,SAlCxB;AAmCE,iBAAO,KAAKH,KAAL,CAAW+D,KAnCpB;AAoCE,yCAA+B,KAAK/D,KAAL,CAAWgE,6BApC5C;AAqCE,uBAAa,KAAKhE,KAAL,CAAWiE,WArC1B;AAsCE,uBAAa,KAAKjE,KAAL,CAAWkE,WAtC1B;AAuCE,6BAAmB,KAAKlE,KAAL,CAAWmE,iBAvChC;AAwCE,yBAAe,KAAKnE,KAAL,CAAWoE,aAxC5B;AAyCE,6BAAmB,KAAKpE,KAAL,CAAWqE,iBAzChC;AA0CE,yCAA+B,KAAKrE,KAAL,CAAWsE,6BA1C5C;AA2CE,0CAAgC,KAAKtE,KAAL,CAAWuE,8BA3C7C;AA4CE,kBAAQ,KAAKvE,KAAL,CAAWkC,MA5CrB;AA6CE,uBAAa,KAAKlC,KAAL,CAAWwE,WA7C1B;AA8CE,qBAAW3D,QAAQwB,SA9CrB;AA+CE,uBAAa,KAAKrC,KAAL,CAAWyE,WA/C1B;AAgDE,yBAAe,KAAKzE,KAAL,CAAW0E,aAhD5B;AAiDE,kCAAwB,KAAK1E,KAAL,CAAW2E,sBAjDrC;AAkDE,6BAAmB,KAAK3E,KAAL,CAAW4E,iBAlDhC;AAmDE,iCAAuB,KAAK5E,KAAL,CAAW6E,qBAnDpC;AAoDE,wBAAc,KAAK7E,KAAL,CAAW8E,YApD3B;AAqDE,2BAAiB,KAAK9E,KAAL,CAAW+E;AArD9B;AAuDG,aAAK/E,KAAL,CAAWgF;AAvDd,OADF;AA2DD;;;EAtLwBC,gB;;AAyL3BlF,aAAamF,SAAb,GAAyB;AACvBrE,WAASsE,oBAAUC,KAAV,CAAgB;AACvB3E,QAAI0E,oBAAUE,MADS;AAEvBhD,eAAW8C,oBAAUE,MAFE;AAGvBhC,eAAW8B,oBAAUG,MAHE;AAIvBhC,cAAU6B,oBAAUI,IAJG;AAKvBhC,cAAU4B,oBAAUI,IALG;AAMvB/B,cAAU2B,oBAAUI,IANG;AAOvB9B,kBAAc0B,oBAAUI,IAPD;AAQvB7B,kBAAcyB,oBAAUE,MARD;AASvBzC,QAAIuC,oBAAUE,MATS;AAUvBxC,UAAMsC,oBAAUE,MAVO;AAWvB5C,kBAAc0C,oBAAUK;AAXD,GAAhB,EAYNC,UAboB;AAcvBxC,iBAAekC,oBAAUE,MAAV,CAAiBI,UAdT;AAevBzE,UAAQmE,oBAAUO,IAAV,CAAeD,UAfA;AAgBvBxE,YAAUkE,oBAAUO,IAAV,CAAeD,UAhBF;AAiBvBvE,UAAQiE,oBAAUO,IAAV,CAAeD,UAjBA;AAkBvBtE,YAAUgE,oBAAUO,IAAV,CAAeD,UAlBF;AAmBvBrE,YAAU+D,oBAAUO,IAAV,CAAeD,UAnBF;AAoBvBpE,gBAAc8D,oBAAUO,IAAV,CAAeD,UApBN;AAqBvBnE,YAAU6D,oBAAUO,IAAV,CAAeD,UArBF;AAsBvBjE,YAAU2D,oBAAUO,IAAV,CAAeD,UAtBF;AAuBvBtC,eAAagC,oBAAUO,IAAV,CAAeD,UAvBL;AAwBvB5D,SAAOsD,oBAAUO,IAxBM;AAyBvB5D,WAASqD,oBAAUO,IAzBI;AA0BvBhE,UAAQyD,oBAAUO,IAAV,CAAeD,UA1BA;AA2BvB7D,UAAQuD,oBAAUO,IAAV,CAAeD,UA3BA;AA4BvB9D,cAAYwD,oBAAUO,IAAV,CAAeD,UA5BJ;AA6BvBT,YAAUG,oBAAUQ,IA7BG;AA8BvBrF,eAAa6E,oBAAUS,KAAV,CAAgBH,UA9BN;AA+BvB5B,YAAUsB,oBAAUE,MAAV,CAAiBI,UA/BJ;AAgCvB3B,eAAaqB,oBAAUE,MAAV,CAAiBI,UAhCP;AAiCvB3E,gBAAcqE,oBAAUO,IAAV,CAAeD,UAjCN;AAkCvB7E,+BAA6BuE,oBAAUO,IAAV,CAAeD,UAlCrB;AAmCvB9B,kBAAgBwB,oBAAUI,IAnCH;AAoCvBrC,mBAAiBiC,oBAAUE,MApCJ;AAqCvBzB,qBAAmBuB,oBAAUO,IArCN;AAsCvB3B,SAAOoB,oBAAUE,MAAV,CAAiBI,UAtCD;AAuCvBzB,iCAA+BmB,oBAAUI,IAAV,CAAeE,UAvCvB;AAwCvBxB,eAAakB,oBAAUS,KAAV,CAAgBH,UAxCN;AAyCvBvB,eAAaiB,oBAAUK,MAzCA;AA0CvBrB,qBAAmBgB,oBAAUS,KAAV,CAAgBH,UA1CZ;AA2CvBrB,iBAAee,oBAAUO,IAAV,CAAeD,UA3CP;AA4CvBpB,qBAAmBc,oBAAUO,IA5CN;AA6CvBpB,iCAA+Ba,oBAAUO,IA7ClB;AA8CvBnB,kCAAgCY,oBAAUO,IA9CnB;AA+CvBxD,UAAQiD,oBAAUE,MAAV,CAAiBI,UA/CF;AAgDvBjB,eAAaW,oBAAUI,IAhDA;AAiDvBd,eAAaU,oBAAUI,IAjDA;AAkDvBb,iBAAeS,oBAAUI,IAlDF;AAmDvBV,yBAAuBM,oBAAUS,KAnDV;AAoDvBjB,0BAAwBQ,oBAAUI,IApDX;AAqDvBX,qBAAmBO,oBAAUI,IArDN;AAsDvBT,gBAAcK,oBAAUK,MAtDD;AAuDvBT,mBAAiBI,oBAAUO,IAvDJ;AAwDvBlD,0BAAwB2C,oBAAUO;AAxDX,CAAzB;;AA2DA3F,aAAa8F,YAAb,GAA4B;AAC1Bb,YAAUc,SADgB;AAE1BnC,kBAAgB,KAFU;AAG1BT,mBAAiB,IAHS;AAI1BU,qBAAmB,IAJO;AAK1BM,eAAa4B,SALa;AAM1BzB,qBAAmByB,SANO;AAO1BxB,iCAA+BwB,SAPL;AAQ1BvB,kCAAgCuB,SARN;AAS1BjE,SAAOiE,SATmB;AAU1BhE,WAASgE,SAViB;AAW1BtB,eAAa,KAXa;AAY1BC,eAAa,KAZa;AAa1BC,iBAAe,KAbW;AAc1BC,0BAAwB,KAdE;AAe1BC,qBAAmB,KAfO;AAgB1BC,yBAAuBiB,SAhBG;AAiB1BhB,gBAAc,EAAEiB,YAAYC,sBAAYC,MAA1B,EAjBY;AAkB1BlB,mBAAiBe,SAlBS;AAmB1BtD,0BAAwB;AAAA,WAAK0D,CAAL;AAAA;AAnBE,CAA5B;;AAsBA,SAASC,UAAT,CAAoBC,CAApB,QAcG;AAAA,wBAbDC,KAaC;AAAA,MAZCC,QAYD,cAZCA,QAYD;AAAA,MAXCC,MAWD,cAXCA,MAWD;AAAA,MAVCC,cAUD,cAVCA,cAUD;AAAA,MATCC,cASD,cATCA,cASD;AAAA,MARC1C,KAQD,cARCA,KAQD;AAAA,MAPC2C,gBAOD,cAPCA,gBAOD;AAAA,MANCC,aAMD,cANCA,aAMD;AAAA,MALCC,cAKD,cALCA,cAKD;AAAA,MAJCC,eAID,cAJCA,eAID;AAAA,MAHCC,WAGD,cAHCA,WAGD;AAAA,yBADD5E,MACC;AAAA,MADDA,MACC,+BADQC,0BAAgB4E,UACxB;;AACD,MAAMC,iBAAiBV,SAASW,aAAT,IAA0B,EAAjD;AACA,MAAMC,iBAAiBV,kBAAkBA,eAAeW,WAAxD;AACA,MAAMC,cAAeF,kBAAkBA,eAAeF,eAAenE,IAA9B,CAAnB,IAA2D,EAA/E;AACA,MAAMwE,YAAaH,kBAAkBA,eAAeF,eAAepE,EAA9B,CAAnB,IAAyD,EAA3E;AACA,MAAMtC,cACJ0G,eAAe3E,SAAf,KAA6BC,yBAAeK,QAA5C,GAAuD0E,SAAvD,GAAmED,WADrE;;AAGA,MAAME,WAAWT,gBAAgBU,WAAhB,KAAgCC,uBAAalB,QAA9D;AACA,MAAI5B,gBAAgB,EAAEsC,eAAeS,IAAf,IAAuB,oBAAYT,eAAeS,IAA3B,EAAiCC,MAA1D,KACf,CAACJ,QADN;AAEA,MAAI7C,cAAc,CAAC6C,QAAD,IAAaN,eAAe3E,SAAf,KAA6BC,yBAAeC,OAA3E;;AAEA,MAAIoF,iBAAiB,KAArB;AACA,MAAI/C,oBAAoB,KAAxB;AACA,MAAIgD,YAAY,KAAhB;AACA,MAAI9C,qBAAJ;AACA,MAAID,8BAAJ;;AAEA,MAAI+B,cAAJ,EAAoB;AAClBe,qBAAiBf,eAAeiB,mBAAf,CAAmCb,eAAevG,EAAlD,CAAjB;AACA,QAAMqH,iBAAiB,sBAAclB,eAAemB,WAA7B,EAA0C,CAA1C,CAAvB;;AAEAH,gBAAYhB,eAAegB,SAAf,IAA4B,CAAC,EACvC,sBACUhB,eAAeoB,WADzB,EAEGC,IAFH,CAEQ;AAAA,aAAMxH,OAAOuG,eAAevG,EAA5B;AAAA,KAFR,KAGIkH,cAJmC,CAAzC;;AAOA,QAAIG,kBAAkBR,QAAtB,EAAgC;AAC9B,UAAMY,SAAStB,eAAeuB,UAAf,CAA0BL,eAAeM,UAAf,CAA0B3H,EAApD;AACb;AADa,SAEV,EAAEuG,eAAeS,IAAf,IAAuB,oBAAYT,eAAeS,IAA3B,EAAiCC,MAA1D,CAFL;AAGA;AACAhD,sBAAgBwD,UAAU,EAAElB,eAAeS,IAAf,IAAuB,oBAAYT,eAAeS,IAA3B,EAAiCC,MAA1D,CAA1B;AACAjD,oBAAcyD,MAAd;AACD;;AAEDtD,wBAAoB,CAAC,CAACkD,cAAtB;AACAjD,4BAAwB+B,eAAeyB,aAAvC;AACAvD,mBAAegC,YAAYhC,YAA3B;;AAEA,QACE5C,WAAWC,0BAAgBC,SAA3B,KACI,CAAC0C,YAAD,IAAiBA,aAAawD,MAAb,KAAwBC,wBAAcC,QAD3D,CADF,EAGE;AACA9D,sBAAgB,IAAhB;AACD;AACF;;AAEDxC,WAASyF,iBAAiBxF,0BAAgBsG,cAAjC,GAAkDvG,MAA3D;AACA,SAAO;AACL6B,WAAOA,MAAM2E,QADR;AAELpI,4BAFK;AAGL2C,mBAAesD,OAAOtD,aAHjB;AAILpC,aAASmG,cAJJ;AAKLnD,cAAU4C,eAAe5C,QALpB;AAMLC,iBAAa2C,eAAe3C,WANvB;AAOLG,iBAAayC,iBAAiBzC,WAPzB;AAQLN,oBAAgB,IARX,EAQiB;AACtBQ,uBAAmBwC,cAAcgC,YAT5B;AAULzG,kBAVK;AAWLsC,iBAAaoD,SAXR;AAYLnD,4BAZK;AAaLC,gCAbK;AAcLC,4BAAwB,CAAC,CAACiC,cAdrB;AAeLhC,wCAfK;AAgBLC,gDAhBK;AAiBLC;AAjBK,GAAP;AAmBD;;AAED,SAAS8D,cAAT,CAAwBxC,CAAxB,SAcG;AAAA,0BAbDC,KAaC;AAAA,MAZCC,QAYD,eAZCA,QAYD;AAAA,MAXCG,cAWD,eAXCA,cAWD;AAAA,MAVCE,aAUD,eAVCA,aAUD;AAAA,MATCC,cASD,eATCA,cASD;AAAA,MARCiC,iBAQD,eARCA,iBAQD;AAAA,MAPC/B,WAOD,eAPCA,WAOD;AAAA,MALDhG,YAKC,SALDA,YAKC;AAAA,MAJD8C,iBAIC,SAJDA,iBAIC;AAAA,MAHDS,iBAGC,SAHDA,iBAGC;AAAA,MAFDC,6BAEC,SAFDA,6BAEC;AAAA,MADDC,8BACC,SADDA,8BACC;;AACD,SAAO;AACLpB,iBAAa;AAAA,aAAe,4BAAa;AACvCT,gCADuC;AAEvCmB,kBAAU4C,eAAe5C,QAFc;AAGvCC,qBAAa2C,eAAe3C;AAHW,OAAb,CAAf;AAAA,KADR;AAMLxC,cAAU;AAAA,aAAagF,SAASwC,MAAT,CAAgBC,SAAhB,CAAb;AAAA,KANL;AAOL/H,YAAQ;AAAA,aAAasF,SAAS0C,IAAT,CAAcD,SAAd,CAAb;AAAA,KAPH;AAQL9H,cAAU;AAAA,aAAaqF,SAAS2C,MAAT,CAAgBF,SAAhB,CAAb;AAAA,KARL;AASL7H,YAAQ;AAAA,aAAaoF,SAAS4C,IAAT,CAAcH,SAAd,CAAb;AAAA,KATH;AAUL5H,cAAU;AAAA,aAAamF,SAAS6C,MAAT,CAAgBJ,SAAhB,CAAb;AAAA,KAVL;AAWL3H,cAAU;AAAA,aAAakF,SAAS8C,WAAT,CAAqBL,SAArB,CAAb;AAAA,KAXL;AAYL1H,kBAAc;AAAA,aAAaiF,SAAS+C,UAAT,CAAoBN,SAApB,CAAb;AAAA,KAZT;AAaLvH,cAAU,kBAACC,KAAD,EAAQsH,SAAR;AAAA,aAAsBzC,SAAS9E,QAAT,CAAkBC,KAAlB,EAAyBsH,SAAzB,CAAtB;AAAA,KAbL;AAcLnI,iCAA6B,qCAACmI,SAAD,EAAYpI,OAAZ;AAAA,aAC3B2F,SAAS1F,2BAAT,CAAqCmI,SAArC,EAAgDpI,OAAhD,CAD2B;AAAA,KAdxB;AAiBLG,8BAjBK;AAkBL8C,wCAlBK;AAmBLlC,YAAQ,gBAAC4H,UAAD,EAAaP,SAAb;AAAA,aAA2BzC,SAASiD,IAAT,CAAcD,UAAd,EAA0BP,SAA1B,CAA3B;AAAA,KAnBH;AAoBLpH,gBAAY,oBAAC6H,cAAD,EAAiBT,SAAjB;AAAA,aAA+BzC,SAASmD,QAAT,CAAkBD,cAAlB,EAAkCT,SAAlC,CAA/B;AAAA,KApBP;AAqBLnH,YAAQ;AAAA,aAAa0E,SAASoD,IAAT,CAAcX,SAAd,CAAb;AAAA,KArBH;AAsBL3E,mBAAe;AAAA,aACbuC,cAAcgD,eAAd,CAA8B,EAAEC,0BAAF,EAA9B,CADa;AAAA,KAtBV;AAyBLvF,wCAzBK;AA0BLC,gEA1BK;AA2BLC,kEA3BK;AA4BL1C,SA5BK,iBA4BCkH,SA5BD,EA4BY;AACf,UAAMc,cAAc,iBAAK;AAAA,eAAKC,EAAErJ,EAAF,KAASsI,SAAd;AAAA,OAAL,EAA8BzC,SAASyD,QAAvC,CAApB;AACA,UAAIF,WAAJ,EAAiB;AACfjD,uBAAeoD,aAAf,CAA6B,EAAEC,eAAelB,SAAjB,EAA7B;AACA,YAAMmB,sBAAsBpD,YAAYqD,iBAAZ,CACzBC,MADyB,CAClB;AAAA,iBAAQC,KAAKhI,SAAL,KAAmBC,yBAAeK,QAA1C;AAAA,SADkB,CAA5B;AAEA,YAAIuH,oBAAoBxC,MAAxB,EAAgC;AAC9B;AACAmB,4BACGyB,IADH,kCACuCT,YAAYU,UADnD,SACiEV,YAAYpJ,EAD7E;AAED,SAJD,MAIO;AAAE;AACPoI,4BAAkByB,IAAlB,6BAAiDT,YAAYU,UAA7D;AACD;AACF;AACF,KA1CI;AA2CCzI,WA3CD;AAAA,4GA2CSiH,SA3CT;AAAA;AAAA;AAAA;AAAA;AAAA;AA4CHF,kCAAkB2B,OAAlB,CAA6B3B,kBAAkB4B,WAA/C,SAA8D1B,SAA9D;AACMlI,uBA7CH,GA6CayF,SAASoE,SAAT,CAAmBC,GAAnB,CAAuB5B,SAAvB,CA7Cb;AA8CG6B,wBA9CH,GA8Cc/J,QAAQ0C,QAAR,GAAmBsH,KA9CjC;;AA+CHjE,+BAAeoD,aAAf,CAA6B,EAAEc,aAAa/B,SAAf,EAA7B;AACMgC,kCAhDH,GAgDwBzE,SAASoE,SAAT,CAAmBC,GAAnB,CAAuB/D,eAAeoB,WAAf,CAA2BiC,aAAlD,CAhDxB;AAiDGe,gCAjDH,GAiDsBD,qBACrB,CAACA,kBAAD,EAAqBlK,OAArB,CADqB,GAErB,CAACA,OAAD,CAnDD;AAAA;AAAA,uBAoDG+F,eAAeqE,iBAAf,CAAiCD,gBAAjC,CApDH;;AAAA;AAqDGlD,8BArDH,GAqDoB,sBAAclB,eAAemB,WAA7B,EAA0C,CAA1C,CArDpB;AAsDGmD,iCAtDH,GAsDuB5E,SAASoE,SAAT,CAAmBC,GAAnB,CAAuB7C,eAAeiB,SAAtC,CAtDvB;;AAAA,sBAwDDjB,kBACG,CAAC8C,QADJ,IAEGM,kBAAkB3H,QAAlB,GAA6BsH,KA1D/B;AAAA;AAAA;AAAA;;AA4DD;;;;AAIAvE,yBAAS6E,MAAT,CAAgBrD,eAAeiB,SAA/B;AAhEC;;AAAA;AAAA,oBAmEEjB,cAnEF;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAoEKxB,SAAS6E,MAAT,CAAgBtK,QAAQJ,EAAxB,CApEL;;AAAA;AAqEDoI,kCAAkByB,IAAlB,CAAuB,2BAAvB;;AArEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAwEL9H,0BAxEK,oCAwEoB;AACvBqG,wBAAkByB,IAAlB,CAAuB,eAAvB;AACD,KA1EI;AA2ECvF,mBA3ED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA4EG,qBAAM,IAAN,CA5EH;;AAAA;AA6EH8D,kCAAkByB,IAAlB,CAAuB,eAAvB;;AA7EG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,GAAP;AAgFD;;AAED,IAAMc,oBAAoB,yBAAU,yBAClCjF,UADkC,EAElCyC,cAFkC,EAGlC7I,YAHkC,CAAV,CAA1B;;AAKAqL,kBAAkBlG,SAAlB,GAA8B;AAC5BpE,gBAAcqE,oBAAUO,IADI;AAE5B9B,qBAAmBuB,oBAAUO,IAAV,CAAeD,UAFN;AAG5B5D,SAAOsD,oBAAUO,IAAV,CAAeD,UAHM;AAI5BvC,mBAAiBiC,oBAAUE,MAJC;AAK5BL,YAAUG,oBAAUQ,IALQ;AAM5B3B,iCAA+BmB,oBAAUI,IANb;AAO5BrB,eAAaiB,oBAAUK;AAPK,CAA9B;;AAUA4F,kBAAkBvF,YAAlB,GAAiC;AAC/B/E,gBAAc;AAAA,WAAM,IAAN;AAAA,GADiB;AAE/BkD,iCAA+B,KAFA;AAG/BgB,YAAUc,SAHqB;AAI/B5B,eAAa4B;AAJkB,CAAjC;;QAQEK,U,GAAAA,U;QACAyC,c,GAAAA,c;QACA7I,Y,GAAAA,Y;QACqBsL,O,GAArBD,iB","file":"index.js","sourcesContent":["import { find } from 'ramda';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport sleep from 'ringcentral-integration/lib/sleep';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\nimport calleeTypes from 'ringcentral-integration/enums/calleeTypes';\nimport callDirections from 'ringcentral-integration/enums/callDirections';\nimport callingModes from 'ringcentral-integration/modules/CallingSettings/callingModes';\nimport sessionStatus from 'ringcentral-integration/modules/Webphone/sessionStatus';\nimport withPhone from '../../lib/withPhone';\nimport callCtrlLayouts from '../../enums/callCtrlLayouts';\nimport CallCtrlPanel from '../../components/CallCtrlPanel';\nimport i18n from './i18n';\n\nclass CallCtrlPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedMatcherIndex: 0,\n      avatarUrl: null,\n    };\n\n    this.onSelectMatcherName = (option) => {\n      const nameMatches = this.props.nameMatches || [];\n      let selectedMatcherIndex = nameMatches.findIndex(\n        match => match.id === option.id\n      );\n      if (selectedMatcherIndex < 0) {\n        selectedMatcherIndex = 0;\n      }\n      this.setState({\n        selectedMatcherIndex,\n        avatarUrl: null,\n      });\n      const contact = nameMatches[selectedMatcherIndex];\n      if (contact) {\n        this.props.updateSessionMatchedContact(this.props.session.id, contact);\n        this.props.getAvatarUrl(contact).then((avatarUrl) => {\n          this.setState({ avatarUrl });\n        });\n      }\n    };\n\n    this.onMute = () =>\n      this.props.onMute(this.props.session.id);\n    this.onUnmute = () =>\n      this.props.onUnmute(this.props.session.id);\n    this.onHold = () =>\n      this.props.onHold(this.props.session.id);\n    this.onUnhold = () =>\n      this.props.onUnhold(this.props.session.id);\n    this.onRecord = () =>\n      this.props.onRecord(this.props.session.id);\n    this.onStopRecord = () =>\n      this.props.onStopRecord(this.props.session.id);\n    this.onHangup = () =>\n      this.props.onHangup(this.props.session.id);\n    this.onKeyPadChange = value =>\n      this.props.sendDTMF(value, this.props.session.id);\n    this.onFlip = value =>\n      this.props.onFlip(value, this.props.session.id);\n    this.onTransfer = value =>\n      this.props.onTransfer(value, this.props.session.id);\n    this.onPark = () =>\n      this.props.onPark(this.props.session.id);\n    this.onAdd = () =>\n      this.props.onAdd(this.props.session.id);\n    this.onMerge = () =>\n      this.props.onMerge(this.props.session.id);\n  }\n\n  componentDidMount() {\n    this._mounted = true;\n    this._updateAvatarAndMatchIndex(this.props);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (\n      nextProps.layout === callCtrlLayouts.mergeCtrl &&\n      nextProps.session.direction === callDirections.inbound\n    ) {\n      nextProps.onIncomingCallCaptured();\n    }\n    if (this.props.session.id !== nextProps.session.id) {\n      this._updateAvatarAndMatchIndex(nextProps);\n    }\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n  }\n\n  _updateAvatarAndMatchIndex(props) {\n    let contact = props.session.contactMatch;\n    let selectedMatcherIndex = 0;\n    if (!contact) {\n      contact = props.nameMatches && props.nameMatches[0];\n    } else {\n      selectedMatcherIndex = props.nameMatches.findIndex(match =>\n        match.id === contact.id\n      );\n    }\n    this.setState({\n      selectedMatcherIndex,\n      avatarUrl: null,\n    });\n    if (contact) {\n      props.getAvatarUrl(contact).then((avatarUrl) => {\n        if (!this._mounted) {\n          return;\n        }\n        this.setState({ avatarUrl });\n      });\n    }\n  }\n\n  render() {\n    const { session } = this.props;\n    if (!session.id) {\n      return null;\n    }\n\n    const phoneNumber = session.direction === callDirections.outbound ?\n      session.to : session.from;\n\n    let fallbackUserName;\n    if (session.direction === callDirections.inbound && session.from === 'anonymous') {\n      fallbackUserName = i18n.getString('anonymous', this.props.currentLocale);\n    }\n    if (!fallbackUserName) {\n      fallbackUserName = i18n.getString('unknown', this.props.currentLocale);\n    }\n\n    const backButtonLabel = this.props.backButtonLabel\n      ? this.props.backButtonLabel\n      : i18n.getString('activeCalls', this.props.currentLocale);\n\n    return (\n      <CallCtrlPanel\n        currentLocale={this.props.currentLocale}\n        formatPhone={this.props.formatPhone}\n        phoneNumber={phoneNumber}\n        sessionId={session.id}\n        callStatus={session.callStatus}\n        startTime={session.startTime}\n        isOnMute={session.isOnMute}\n        isOnHold={session.isOnHold}\n        isOnFlip={session.isOnFlip}\n        isOnTransfer={session.isOnTransfer}\n        recordStatus={session.recordStatus}\n        showBackButton={this.props.showBackButton}\n        backButtonLabel={backButtonLabel}\n        onBackButtonClick={this.props.onBackButtonClick}\n        onMute={this.onMute}\n        onUnmute={this.onUnmute}\n        onHold={this.onHold}\n        onUnhold={this.onUnhold}\n        onRecord={this.onRecord}\n        onStopRecord={this.onStopRecord}\n        onKeyPadChange={this.onKeyPadChange}\n        onHangup={this.onHangup}\n        onAdd={this.onAdd}\n        onMerge={this.onMerge}\n        onFlip={this.onFlip}\n        onTransfer={this.onTransfer}\n        onPark={this.onPark}\n        nameMatches={this.props.nameMatches}\n        fallBackName={fallbackUserName}\n        areaCode={this.props.areaCode}\n        countryCode={this.props.countryCode}\n        selectedMatcherIndex={this.state.selectedMatcherIndex}\n        onSelectMatcherName={this.onSelectMatcherName}\n        avatarUrl={this.state.avatarUrl}\n        brand={this.props.brand}\n        showContactDisplayPlaceholder={this.props.showContactDisplayPlaceholder}\n        flipNumbers={this.props.flipNumbers}\n        sourceIcons={this.props.sourceIcons}\n        searchContactList={this.props.searchContactList}\n        searchContact={this.props.searchContact}\n        phoneTypeRenderer={this.props.phoneTypeRenderer}\n        recipientsContactInfoRenderer={this.props.recipientsContactInfoRenderer}\n        recipientsContactPhoneRenderer={this.props.recipientsContactPhoneRenderer}\n        layout={this.props.layout}\n        showSpinner={this.props.showSpinner}\n        direction={session.direction}\n        addDisabled={this.props.addDisabled}\n        mergeDisabled={this.props.mergeDisabled}\n        conferenceCallEquipped={this.props.conferenceCallEquipped}\n        hasConferenceCall={this.props.hasConferenceCall}\n        conferenceCallParties={this.props.conferenceCallParties}\n        lastCallInfo={this.props.lastCallInfo}\n        onLastCallEnded={this.props.onLastCallEnded}\n      >\n        {this.props.children}\n      </CallCtrlPanel>\n    );\n  }\n}\n\nCallCtrlPage.propTypes = {\n  session: PropTypes.shape({\n    id: PropTypes.string,\n    direction: PropTypes.string,\n    startTime: PropTypes.number,\n    isOnMute: PropTypes.bool,\n    isOnHold: PropTypes.bool,\n    isOnFlip: PropTypes.bool,\n    isOnTransfer: PropTypes.bool,\n    recordStatus: PropTypes.string,\n    to: PropTypes.string,\n    from: PropTypes.string,\n    contactMatch: PropTypes.object,\n  }).isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  onMute: PropTypes.func.isRequired,\n  onUnmute: PropTypes.func.isRequired,\n  onHold: PropTypes.func.isRequired,\n  onUnhold: PropTypes.func.isRequired,\n  onRecord: PropTypes.func.isRequired,\n  onStopRecord: PropTypes.func.isRequired,\n  onHangup: PropTypes.func.isRequired,\n  sendDTMF: PropTypes.func.isRequired,\n  formatPhone: PropTypes.func.isRequired,\n  onAdd: PropTypes.func,\n  onMerge: PropTypes.func,\n  onFlip: PropTypes.func.isRequired,\n  onPark: PropTypes.func.isRequired,\n  onTransfer: PropTypes.func.isRequired,\n  children: PropTypes.node,\n  nameMatches: PropTypes.array.isRequired,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  getAvatarUrl: PropTypes.func.isRequired,\n  updateSessionMatchedContact: PropTypes.func.isRequired,\n  showBackButton: PropTypes.bool,\n  backButtonLabel: PropTypes.string,\n  onBackButtonClick: PropTypes.func,\n  brand: PropTypes.string.isRequired,\n  showContactDisplayPlaceholder: PropTypes.bool.isRequired,\n  flipNumbers: PropTypes.array.isRequired,\n  sourceIcons: PropTypes.object,\n  searchContactList: PropTypes.array.isRequired,\n  searchContact: PropTypes.func.isRequired,\n  phoneTypeRenderer: PropTypes.func,\n  recipientsContactInfoRenderer: PropTypes.func,\n  recipientsContactPhoneRenderer: PropTypes.func,\n  layout: PropTypes.string.isRequired,\n  showSpinner: PropTypes.bool,\n  addDisabled: PropTypes.bool,\n  mergeDisabled: PropTypes.bool,\n  conferenceCallParties: PropTypes.array,\n  conferenceCallEquipped: PropTypes.bool,\n  hasConferenceCall: PropTypes.bool,\n  lastCallInfo: PropTypes.object,\n  onLastCallEnded: PropTypes.func,\n  onIncomingCallCaptured: PropTypes.func,\n};\n\nCallCtrlPage.defaultProps = {\n  children: undefined,\n  showBackButton: false,\n  backButtonLabel: null,\n  onBackButtonClick: null,\n  sourceIcons: undefined,\n  phoneTypeRenderer: undefined,\n  recipientsContactInfoRenderer: undefined,\n  recipientsContactPhoneRenderer: undefined,\n  onAdd: undefined,\n  onMerge: undefined,\n  showSpinner: false,\n  addDisabled: false,\n  mergeDisabled: false,\n  conferenceCallEquipped: false,\n  hasConferenceCall: false,\n  conferenceCallParties: undefined,\n  lastCallInfo: { calleeType: calleeTypes.unknow },\n  onLastCallEnded: undefined,\n  onIncomingCallCaptured: i => i,\n};\n\nfunction mapToProps(_, {\n  phone: {\n    webphone,\n    locale,\n    contactMatcher,\n    regionSettings,\n    brand,\n    forwardingNumber,\n    contactSearch,\n    conferenceCall,\n    callingSettings,\n    callMonitor,\n  },\n  layout = callCtrlLayouts.normalCtrl,\n}) {\n  const currentSession = webphone.activeSession || {};\n  const contactMapping = contactMatcher && contactMatcher.dataMapping;\n  const fromMatches = (contactMapping && contactMapping[currentSession.from]) || [];\n  const toMatches = (contactMapping && contactMapping[currentSession.to]) || [];\n  const nameMatches =\n    currentSession.direction === callDirections.outbound ? toMatches : fromMatches;\n\n  const isWebRTC = callingSettings.callingMode === callingModes.webphone;\n  let mergeDisabled = !(currentSession.data && Object.keys(currentSession.data).length)\n    || !isWebRTC;\n  let addDisabled = !isWebRTC || currentSession.direction === callDirections.inbound;\n\n  let isOnConference = false;\n  let hasConferenceCall = false;\n  let isMerging = false;\n  let lastCallInfo;\n  let conferenceCallParties;\n\n  if (conferenceCall) {\n    isOnConference = conferenceCall.isConferenceSession(currentSession.id);\n    const conferenceData = Object.values(conferenceCall.conferences)[0];\n\n    isMerging = conferenceCall.isMerging && !!(\n      Object\n        .values(conferenceCall.mergingPair)\n        .find(id => id === currentSession.id)\n      || (isOnConference)\n    );\n\n    if (conferenceData && isWebRTC) {\n      const newVal = conferenceCall.isOverload(conferenceData.conference.id)\n        // in case webphone.activeSession has not been updated yet\n        || !(currentSession.data && Object.keys(currentSession.data).length);\n      // update\n      mergeDisabled = newVal || !(currentSession.data && Object.keys(currentSession.data).length);\n      addDisabled = newVal;\n    }\n\n    hasConferenceCall = !!conferenceData;\n    conferenceCallParties = conferenceCall.partyProfiles;\n    lastCallInfo = callMonitor.lastCallInfo;\n\n    if (\n      layout === callCtrlLayouts.mergeCtrl\n      && (!lastCallInfo || lastCallInfo.status === sessionStatus.finished)\n    ) {\n      mergeDisabled = true;\n    }\n  }\n\n  layout = isOnConference ? callCtrlLayouts.conferenceCtrl : layout;\n  return {\n    brand: brand.fullName,\n    nameMatches,\n    currentLocale: locale.currentLocale,\n    session: currentSession,\n    areaCode: regionSettings.areaCode,\n    countryCode: regionSettings.countryCode,\n    flipNumbers: forwardingNumber.flipNumbers,\n    showBackButton: true, // callMonitor.calls.length > 0,\n    searchContactList: contactSearch.sortedResult,\n    layout,\n    showSpinner: isMerging,\n    addDisabled,\n    mergeDisabled,\n    conferenceCallEquipped: !!conferenceCall,\n    hasConferenceCall,\n    conferenceCallParties,\n    lastCallInfo,\n  };\n}\n\nfunction mapToFunctions(_, {\n  phone: {\n    webphone,\n    regionSettings,\n    contactSearch,\n    conferenceCall,\n    routerInteraction,\n    callMonitor,\n  },\n  getAvatarUrl,\n  onBackButtonClick,\n  phoneTypeRenderer,\n  recipientsContactInfoRenderer,\n  recipientsContactPhoneRenderer,\n}) {\n  return {\n    formatPhone: phoneNumber => formatNumber({\n      phoneNumber,\n      areaCode: regionSettings.areaCode,\n      countryCode: regionSettings.countryCode,\n    }),\n    onHangup: sessionId => webphone.hangup(sessionId),\n    onMute: sessionId => webphone.mute(sessionId),\n    onUnmute: sessionId => webphone.unmute(sessionId),\n    onHold: sessionId => webphone.hold(sessionId),\n    onUnhold: sessionId => webphone.unhold(sessionId),\n    onRecord: sessionId => webphone.startRecord(sessionId),\n    onStopRecord: sessionId => webphone.stopRecord(sessionId),\n    sendDTMF: (value, sessionId) => webphone.sendDTMF(value, sessionId),\n    updateSessionMatchedContact: (sessionId, contact) => (\n      webphone.updateSessionMatchedContact(sessionId, contact)\n    ),\n    getAvatarUrl,\n    onBackButtonClick,\n    onFlip: (flipNumber, sessionId) => webphone.flip(flipNumber, sessionId),\n    onTransfer: (transferNumber, sessionId) => webphone.transfer(transferNumber, sessionId),\n    onPark: sessionId => webphone.park(sessionId),\n    searchContact: searchString => (\n      contactSearch.debouncedSearch({ searchString })\n    ),\n    phoneTypeRenderer,\n    recipientsContactInfoRenderer,\n    recipientsContactPhoneRenderer,\n    onAdd(sessionId) {\n      const sessionData = find(x => x.id === sessionId, webphone.sessions);\n      if (sessionData) {\n        conferenceCall.setMergeParty({ fromSessionId: sessionId });\n        const outBoundOnholdCalls = callMonitor.activeOnHoldCalls\n          .filter(call => call.direction === callDirections.outbound);\n        if (outBoundOnholdCalls.length) {\n          // goto 'calls on hold' page\n          routerInteraction\n            .push(`/conferenceCall/callsOnhold/${sessionData.fromNumber}/${sessionData.id}`);\n        } else { // goto dialer directly\n          routerInteraction.push(`/conferenceCall/dialer/${sessionData.fromNumber}`);\n        }\n      }\n    },\n    async onMerge(sessionId) {\n      routerInteraction.replace(`${routerInteraction.currentPath}/${sessionId}`);\n      const session = webphone._sessions.get(sessionId);\n      const isOnhold = session.isOnHold().local;\n      conferenceCall.setMergeParty({ toSessionId: sessionId });\n      const sessionToMergeWith = webphone._sessions.get(conferenceCall.mergingPair.fromSessionId);\n      const webphoneSessions = sessionToMergeWith\n        ? [sessionToMergeWith, session]\n        : [session];\n      await conferenceCall.mergeToConference(webphoneSessions);\n      const conferenceData = Object.values(conferenceCall.conferences)[0];\n      const conferenceSession = webphone._sessions.get(conferenceData.sessionId);\n      if (\n        conferenceData\n        && !isOnhold\n        && conferenceSession.isOnHold().local\n      ) {\n        /**\n         * because session termination operation in conferenceCall._mergeToConference,\n         * need to wait for webphone.getActiveSessionIdReducer to update\n         */\n        webphone.resume(conferenceData.sessionId);\n        return;\n      }\n      if (!conferenceData) {\n        await webphone.resume(session.id);\n        routerInteraction.push('/conferenceCall/mergeCtrl');\n      }\n    },\n    onIncomingCallCaptured() {\n      routerInteraction.push('/calls/active');\n    },\n    async onLastCallEnded() {\n      await sleep(2000);\n      routerInteraction.push('/calls/active');\n    },\n  };\n}\n\nconst CallCtrlContainer = withPhone(connect(\n  mapToProps,\n  mapToFunctions,\n)(CallCtrlPage));\n\nCallCtrlContainer.propTypes = {\n  getAvatarUrl: PropTypes.func,\n  onBackButtonClick: PropTypes.func.isRequired,\n  onAdd: PropTypes.func.isRequired,\n  backButtonLabel: PropTypes.string,\n  children: PropTypes.node,\n  showContactDisplayPlaceholder: PropTypes.bool,\n  sourceIcons: PropTypes.object,\n};\n\nCallCtrlContainer.defaultProps = {\n  getAvatarUrl: () => null,\n  showContactDisplayPlaceholder: false,\n  children: undefined,\n  sourceIcons: undefined,\n};\n\nexport {\n  mapToProps,\n  mapToFunctions,\n  CallCtrlPage,\n  CallCtrlContainer as default,\n};\n"]}