{"version":3,"sources":["containers/DialerNCallsPage/index.js"],"names":["TabTitle","type","currentLocale","active","styles","tabTitle","i18n","getString","propTypes","PropTypes","string","isRequired","bool","defaultProps","renderTabs","currentPath","goto","tabs","icon","routerMap","dialer","label","path","isActive","allCalls","MessageTabButton","tabBar","DialerNCallsPanel","onLogCall","onCreateContact","onCallsEmpty","sourceIcons","showTab","phoneTypeRenderer","recipientsContactInfoRenderer","recipientsContactPhoneRenderer","dialButtonMuted","showViewContact","showContactDisplayPlaceholder","contentMap","tabsHeader","root","content","func","object","mapToProps","_","phone","locale","routerInteraction","webphone","callingMode","callingSettings","sessions","length","callingModes","mapToFunctions","push","DialerNCallsPage"],"mappings":"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","file":"index.js","sourcesContent":["import { connect } from 'react-redux';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport callingModes from 'ringcentral-integration/modules/CallingSettings/callingModes';\nimport classnames from 'classnames';\n\nimport DialerPage from '../DialerPage';\nimport ActiveCallsPage from '../ActiveCallsPage';\nimport withPhone from '../../lib/withPhone';\nimport NavigationBar from '../../components/NavigationBar';\nimport MessageTabButton from '../../components/MessageTabButton';\nimport styles from './styles.scss';\nimport i18n from './i18n';\nimport routerMap from './routerMap';\n\nfunction TabTitle({\n  type,\n  currentLocale,\n  active,\n}) {\n  return (\n    <span className={classnames(styles.tabTitle, active ? styles.active : null)}>\n      {i18n.getString(type, currentLocale)}\n    </span>\n  );\n}\n\nTabTitle.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  active: PropTypes.bool,\n};\n\nTabTitle.defaultProps = {\n  active: false,\n};\n\nfunction renderTabs(\n  currentLocale,\n  currentPath,\n  goto,\n) {\n  const tabs = [\n    {\n      icon: <TabTitle\n        type={routerMap.dialer}\n        currentLocale={currentLocale}\n        active={currentPath === routerMap.dialer} />,\n      label: i18n.getString(routerMap.dialer, currentLocale),\n      path: routerMap.dialer,\n      isActive: () => currentPath === routerMap.dialer,\n    },\n    {\n      icon: <TabTitle\n        type={routerMap.allCalls}\n        currentLocale={currentLocale}\n        active={currentPath === routerMap.allCalls} />,\n      label: i18n.getString(routerMap.allCalls, currentLocale),\n      path: routerMap.allCalls,\n      isActive: () => currentPath === routerMap.allCalls,\n    },\n  ];\n  return (\n    <NavigationBar\n      button={MessageTabButton}\n      className={styles.tabBar}\n      currentPath={currentPath}\n      goTo={goto}\n      tabs={tabs}\n      fullSizeInk={false}\n    />\n  );\n}\n\nfunction DialerNCallsPanel({\n  currentLocale,\n  currentPath,\n  onLogCall,\n  onCreateContact,\n  onCallsEmpty,\n  sourceIcons,\n  goto,\n  showTab,\n  phoneTypeRenderer,\n  recipientsContactInfoRenderer,\n  recipientsContactPhoneRenderer,\n  dialButtonMuted,\n  showViewContact,\n  showContactDisplayPlaceholder,\n}) {\n  const contentMap = {\n    '/dialer': <DialerPage\n      phoneTypeRenderer={phoneTypeRenderer}\n      recipientsContactInfoRenderer={recipientsContactInfoRenderer}\n      recipientsContactPhoneRenderer={recipientsContactPhoneRenderer}\n      dialButtonMuted={dialButtonMuted}\n    />,\n    '/calls': <ActiveCallsPage\n      onLogCall={onLogCall}\n      onCreateContact={onCreateContact}\n      onCallsEmpty={onCallsEmpty}\n      sourceIcons={sourceIcons}\n      showViewContact={showViewContact}\n      showContactDisplayPlaceholder={showContactDisplayPlaceholder}\n    />\n  };\n  const tabsHeader = renderTabs(currentLocale, currentPath, goto);\n  if (showTab) {\n    return (\n      <div className={styles.root}>\n        {tabsHeader}\n        <div className={styles.content}>\n          {contentMap[currentPath]}\n        </div>\n      </div>\n    );\n  }\n  return contentMap[currentPath];\n}\n\n\nDialerNCallsPanel.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  currentPath: PropTypes.string.isRequired,\n  onLogCall: PropTypes.func,\n  onCreateContact: PropTypes.func,\n  onCallsEmpty: PropTypes.func,\n  sourceIcons: PropTypes.object,\n  goto: PropTypes.func.isRequired,\n  phoneTypeRenderer: PropTypes.func,\n  recipientsContactInfoRenderer: PropTypes.func,\n  recipientsContactPhoneRenderer: PropTypes.func,\n  dialButtonMuted: PropTypes.bool,\n  showViewContact: PropTypes.bool,\n  showContactDisplayPlaceholder: PropTypes.bool,\n};\n\n\nDialerNCallsPanel.defaultProps = {\n  sourceIcons: null,\n  onLogCall: null,\n  onCreateContact: null,\n  onCallsEmpty: null,\n  phoneTypeRenderer: null,\n  recipientsContactInfoRenderer: null,\n  recipientsContactPhoneRenderer: null,\n  dialButtonMuted: false,\n  showViewContact: true,\n  showContactDisplayPlaceholder: false,\n};\n\n\nfunction mapToProps(_, {\n  phone: {\n    locale,\n    routerInteraction,\n    webphone,\n    callingSettings: { callingMode },\n  },\n  sourceIcons,\n  phoneTypeRenderer,\n  recipientsContactInfoRenderer,\n  recipientsContactPhoneRenderer,\n}) {\n  return {\n    currentPath: routerInteraction.currentPath,\n    currentLocale: locale.currentLocale,\n    sourceIcons,\n    showTab: webphone.sessions.length && callingMode === callingModes.webphone,\n    phoneTypeRenderer,\n    recipientsContactInfoRenderer,\n    recipientsContactPhoneRenderer,\n  };\n}\n\nfunction mapToFunctions(_, {\n  phone: {\n    routerInteraction,\n  },\n  onLogCall,\n  onCreateContact,\n  onCallsEmpty,\n  sourceIcons,\n}) {\n  return {\n    goto: path => routerInteraction.push(path),\n    onLogCall,\n    onCreateContact,\n    onCallsEmpty,\n    sourceIcons,\n  };\n}\n\nconst DialerNCallsPage = withPhone(connect(mapToProps, mapToFunctions)(DialerNCallsPanel));\n\nexport default DialerNCallsPage;\n"]}