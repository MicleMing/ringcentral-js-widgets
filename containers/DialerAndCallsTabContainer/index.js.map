{"version":3,"sources":["containers/DialerAndCallsTabContainer/index.js"],"names":["TabContentView","props","getTabs","currentLocale","currentPath","path","label","i18n","getString","isActive","Component","propTypes","applicable","PropTypes","bool","isRequired","string","goTo","func","mapToProps","_","phone","locale","callingSettings","routerInteraction","conferenceCall","webphone","conferenceCallEquipped","isWebphoneMode","callingMode","callingModes","sessions","length","mapToFunctions","push","DialerAndCallsTabContainer","default"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;IAEMA,c;;;AAQJ,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA,sJACXA,KADW;;AAGjB,UAAKC,OAAL,GAAe,8BACb;AAAA,aAAM,MAAKD,KAAL,CAAWE,aAAjB;AAAA,KADa,EAEb;AAAA,aAAM,MAAKF,KAAL,CAAWG,WAAjB;AAAA,KAFa,EAGb,UAACD,aAAD,EAAgBC,WAAhB;AAAA,aAAiC,CAC/B;AACEC,cAAM,SADR;AAEEC,eAAOC,eAAKC,SAAL,CAAe,QAAf,EAAyBL,aAAzB,CAFT;AAGEM,gBAHF,sBAGa;AAAE,iBAAOL,gBAAgB,SAAvB;AAAmC;AAHlD,OAD+B,EAM/B;AACEC,cAAM,QADR;AAEEC,eAAOC,eAAKC,SAAL,CAAe,UAAf,EAA2BL,aAA3B,CAFT;AAGEM,gBAHF,sBAGa;AAAE,iBAAOL,gBAAgB,QAAvB;AAAkC;AAHjD,OAN+B,CAAjC;AAAA,KAHa,CAAf;AAHiB;AAmBlB;;;;6BAEQ;AACP,aACE,8BAAC,yBAAD,6BACM,KAAKH,KADX;AAEE,cAAM,KAAKC,OAAL;AAFR,SADF;AAMD;;;EApC0BQ,gB,UACpBC,S,GAAY;AACjBC,cAAYC,oBAAUC,IAAV,CAAeC,UADV;AAEjBZ,iBAAeU,oBAAUG,MAAV,CAAiBD,UAFf;AAGjBX,eAAaS,oBAAUG,MAAV,CAAiBD,UAHb;AAIjBE,QAAMJ,oBAAUK,IAAV,CAAeH;AAJJ,C;;;AAsCrB,SAASI,UAAT,CAAoBC,CAApB,QAQG;AAAA,wBAPDC,KAOC;AAAA,MANCC,MAMD,cANCA,MAMD;AAAA,MALCC,eAKD,cALCA,eAKD;AAAA,MAJCC,iBAID,cAJCA,iBAID;AAAA,MAHCC,cAGD,cAHCA,cAGD;AAAA,MAFCC,QAED,cAFCA,QAED;;AACD,MAAMC,yBAAyB,CAAC,CAACF,cAAjC;AACA,MAAMG,iBAAkBL,gBAAgBM,WAAhB,KAAgCC,uBAAaJ,QAArE;AACA,MAAMd,aAAa,CAAC,EAAEe,0BAA0BC,cAA1B,IAA4CF,SAASK,QAAT,CAAkBC,MAAhE,CAApB;AACA,SAAO;AACLpB,0BADK;AAELT,mBAAemB,OAAOnB,aAFjB;AAGLC,iBAAaoB,kBAAkBpB;AAH1B,GAAP;AAKD;;AAED,SAAS6B,cAAT,CAAwBb,CAAxB,SAIG;AAAA,MAFCI,iBAED,SAHDH,KAGC,CAFCG,iBAED;;AACD,SAAO;AACLP,QADK,gBACAZ,IADA,EACM;AACTmB,wBAAkBU,IAAlB,CAAuB7B,IAAvB;AACD;AAHI,GAAP;AAKD;;AAED,IAAM8B,6BAA6B,yBAAU,yBAC3ChB,UAD2C,EAE3Cc,cAF2C,EAG3CjC,cAH2C,CAAV,CAAnC;;QAMEmB,U,GAAAA,U;QACAc,c,GAAAA,c;QAC8BG,O,GAA9BD,0B","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport callingModes from 'ringcentral-integration/modules/CallingSettings/callingModes';\nimport TabContentPanel from '../../components/TabContentPanel';\nimport withPhone from '../../lib/withPhone';\nimport i18n from './i18n';\n\nclass TabContentView extends Component {\n  static propTypes = {\n    applicable: PropTypes.bool.isRequired,\n    currentLocale: PropTypes.string.isRequired,\n    currentPath: PropTypes.string.isRequired,\n    goTo: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.getTabs = createSelector(\n      () => this.props.currentLocale,\n      () => this.props.currentPath,\n      (currentLocale, currentPath) => ([\n        {\n          path: '/dialer',\n          label: i18n.getString('dialer', currentLocale),\n          isActive() { return currentPath === '/dialer'; },\n        },\n        {\n          path: '/calls',\n          label: i18n.getString('allCalls', currentLocale),\n          isActive() { return currentPath === '/calls'; }\n        },\n      ]),\n    );\n  }\n\n  render() {\n    return (\n      <TabContentPanel\n        {...this.props}\n        tabs={this.getTabs()}\n      />\n    );\n  }\n}\n\nfunction mapToProps(_, {\n  phone: {\n    locale,\n    callingSettings,\n    routerInteraction,\n    conferenceCall,\n    webphone,\n  },\n}) {\n  const conferenceCallEquipped = !!conferenceCall;\n  const isWebphoneMode = (callingSettings.callingMode === callingModes.webphone);\n  const applicable = !!(conferenceCallEquipped && isWebphoneMode && webphone.sessions.length);\n  return {\n    applicable,\n    currentLocale: locale.currentLocale,\n    currentPath: routerInteraction.currentPath,\n  };\n}\n\nfunction mapToFunctions(_, {\n  phone: {\n    routerInteraction,\n  },\n}) {\n  return {\n    goTo(path) {\n      routerInteraction.push(path);\n    },\n  };\n}\n\nconst DialerAndCallsTabContainer = withPhone(connect(\n  mapToProps,\n  mapToFunctions,\n)(TabContentView));\n\nexport {\n  mapToProps,\n  mapToFunctions,\n  DialerAndCallsTabContainer as default,\n};\n"]}