{"version":3,"sources":["containers/CallsOnholdPage/index.js"],"names":["mapToProps","_","phone","callMonitor","contactMatcher","props","baseProps","contactMapping","dataMapping","calls","activeOnHoldCalls","filter","call","direction","callDirections","inbound","mapToFunctions","params","webphone","conferenceCall","routerInteraction","getAvatarUrl","onMerge","sessionId","replace","session","_sessions","get","setMergeParty","toSessionId","sessionToMergeWith","mergingPair","fromSessionId","isCurrentOnhold","isOnHold","local","webphoneSessions","mergeToConference","conferenceData","conferences","conferenceSession","isConferenceOnhold","hold","resume","onBackButtonClick","goBack","onAdd","push","fromNumber","CallsOnholdPage","CallsOnholdPanel"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;;;AAEA;;;;AACA;;;;AAEA;;;;AAKA,SAASA,UAAT,CAAoBC,CAApB,QAOG;AAAA,MANDC,KAMC,QANDA,KAMC;AAAA,wBALDA,KAKC;AAAA,MAJCC,WAID,cAJCA,WAID;AAAA,MAHCC,cAGD,cAHCA,cAGD;AAAA,MADEC,KACF;;AACD,MAAMC,YAAY,iCAAeL,CAAf;AAChBC;AADgB,KAEbG,KAFa,EAAlB;AAIA,MAAME,iBAAiBH,kBAAkBA,eAAeI,WAAxD;;AAEA,oCACKF,SADL;AAEEG,WAAON,YAAYO,iBAAZ,CAA8BC,MAA9B,CAAqC;AAAA,aAAQC,KAAKC,SAAL,KAAmBC,yBAAeC,OAA1C;AAAA,KAArC,CAFT;AAGER;AAHF;AAKD;;AAED,SAASS,cAAT,CAAwBf,CAAxB,SAUG;AAAA,MATDgB,MASC,SATDA,MASC;AAAA,MARDf,KAQC,SARDA,KAQC;AAAA,0BAPDA,KAOC;AAAA,MANCgB,QAMD,eANCA,QAMD;AAAA,MALCC,cAKD,eALCA,cAKD;AAAA,MAJCC,iBAID,eAJCA,iBAID;AAAA,MAFDC,YAEC,SAFDA,YAEC;AAAA,MADEhB,KACF;;AACD,MAAMC,YAAY,qCAAmBL,CAAnB;AAChBgB,kBADgB;AAEhBf;AAFgB,KAGbG,KAHa,EAAlB;AAKA,oCACKC,SADL;AAEQgB,WAFR;AAAA,4GAEgBC,SAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAGIH,kCAAkBI,OAAlB,CAA0B,eAA1B;AACMC,uBAJV,GAIoBP,SAASQ,SAAT,CAAmBC,GAAnB,CAAuBJ,SAAvB,CAJpB;;AAKIJ,+BAAeS,aAAf,CAA6B,EAAEC,aAAaN,SAAf,EAA7B;AACMO,kCANV,GAM+BZ,SAASQ,SAAT,CAAmBC,GAAnB,CAAuBR,eAAeY,WAAf,CAA2BC,aAAlD,CAN/B;AAOUC,+BAPV,GAO4BH,sBAAsBA,mBAAmBI,QAAnB,GAA8BC,KAPhF;AAQUC,gCARV,GAQ6BN,qBACrB,CAACA,kBAAD,EAAqBL,OAArB,CADqB,GAErB,CAACA,OAAD,CAVR;AAAA;AAAA,uBAWUN,eAAekB,iBAAf,CAAiCD,gBAAjC,CAXV;;AAAA;AAYUE,8BAZV,GAY2B,sBAAcnB,eAAeoB,WAA7B,EAA0C,CAA1C,CAZ3B;AAaUC,iCAbV,GAa8BtB,SAASQ,SAAT,CAAmBC,GAAnB,CAAuBW,eAAef,SAAtC,CAb9B;AAcUkB,kCAdV,GAc+BD,kBAAkBN,QAAlB,GAA6BC,KAd5D;;AAAA,sBAgBQG,kBAAkBL,eAhB1B;AAAA;AAAA;AAAA;;AAiBMf,yBAASwB,IAAT,CAAcJ,eAAef,SAA7B;AAjBN;;AAAA;;AAqBI,oBAAIe,kBAAkBG,kBAAtB,EAA0C;AACxC;;;;AAIAvB,2BAASyB,MAAT,CAAgBL,eAAef,SAA/B;AACD;;AA3BL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA6BEqB,qBA7BF,+BA6BsB;AAClBxB,wBAAkByB,MAAlB;AACD,KA/BH;AAgCEC,SAhCF,mBAgCU;AACN1B,wBAAkB2B,IAAlB,6BAAiD9B,OAAO+B,UAAxD;AACD,KAlCH;;AAmCE3B;AAnCF;AAqCD;;AAED,IAAM4B,kBAAkB,yBAAU,yBAChCjD,UADgC,EAEhCgB,cAFgC,EAGhCkC,0BAHgC,CAAV,CAAxB;;kBAKeD,e","file":"index.js","sourcesContent":["import { connect } from 'react-redux';\nimport callDirections from 'ringcentral-integration/enums/callDirections';\n\nimport withPhone from '../../lib/withPhone';\nimport CallsOnholdPanel from '../../components/CallsOnholdPanel';\n\nimport {\n  mapToProps as mapToBaseProps,\n  mapToFunctions as mapToBaseFunctions,\n} from '../ActiveCallsPage';\n\nfunction mapToProps(_, {\n  phone,\n  phone: {\n    callMonitor,\n    contactMatcher,\n  },\n  ...props\n}) {\n  const baseProps = mapToBaseProps(_, {\n    phone,\n    ...props,\n  });\n  const contactMapping = contactMatcher && contactMatcher.dataMapping;\n\n  return {\n    ...baseProps,\n    calls: callMonitor.activeOnHoldCalls.filter(call => call.direction !== callDirections.inbound),\n    contactMapping,\n  };\n}\n\nfunction mapToFunctions(_, {\n  params,\n  phone,\n  phone: {\n    webphone,\n    conferenceCall,\n    routerInteraction,\n  },\n  getAvatarUrl,\n  ...props\n}) {\n  const baseProps = mapToBaseFunctions(_, {\n    params,\n    phone,\n    ...props,\n  });\n  return {\n    ...baseProps,\n    async onMerge(sessionId) {\n      routerInteraction.replace('/calls/active');\n      const session = webphone._sessions.get(sessionId);\n      conferenceCall.setMergeParty({ toSessionId: sessionId });\n      const sessionToMergeWith = webphone._sessions.get(conferenceCall.mergingPair.fromSessionId);\n      const isCurrentOnhold = sessionToMergeWith && sessionToMergeWith.isOnHold().local;\n      const webphoneSessions = sessionToMergeWith\n        ? [sessionToMergeWith, session]\n        : [session];\n      await conferenceCall.mergeToConference(webphoneSessions);\n      const conferenceData = Object.values(conferenceCall.conferences)[0];\n      const conferenceSession = webphone._sessions.get(conferenceData.sessionId);\n      const isConferenceOnhold = conferenceSession.isOnHold().local;\n\n      if (conferenceData && isCurrentOnhold) {\n        webphone.hold(conferenceData.sessionId);\n        return;\n      }\n\n      if (conferenceData && isConferenceOnhold) {\n        /**\n         * because session termination operation in conferenceCall._mergeToConference,\n         * need to wait for webphone.getActiveSessionIdReducer to update\n         */\n        webphone.resume(conferenceData.sessionId);\n      }\n    },\n    onBackButtonClick() {\n      routerInteraction.goBack();\n    },\n    onAdd() {\n      routerInteraction.push(`/conferenceCall/dialer/${params.fromNumber}`);\n    },\n    getAvatarUrl,\n  };\n}\n\nconst CallsOnholdPage = withPhone(connect(\n  mapToProps,\n  mapToFunctions,\n)(CallsOnholdPanel));\n\nexport default CallsOnholdPage;\n"]}