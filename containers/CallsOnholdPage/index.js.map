{"version":3,"sources":["containers/CallsOnholdPage/index.js"],"names":["mapToProps","_","phone","callMonitor","contactMatcher","props","baseProps","contactMapping","dataMapping","calls","activeOnHoldCalls","filter","call","direction","callDirections","inbound","mapToFunctions","params","webphone","conferenceCall","routerInteraction","getAvatarUrl","onMerge","sessionId","replace","session","_sessions","get","setMergeParty","to","sessionToMergeWith","state","mergingPair","from","webphoneSessions","mergeToConference","conferenceData","conferences","isOnHold","local","resume","id","onBackButtonClick","goBack","onAdd","push","fromNumber","CallsOnholdPage","CallsOnholdPanel"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;;;AAEA;;;;AACA;;;;AAEA;;;;AAKA,SAASA,UAAT,CAAoBC,CAApB,QAOG;AAAA,MANDC,KAMC,QANDA,KAMC;AAAA,wBALDA,KAKC;AAAA,MAJCC,WAID,cAJCA,WAID;AAAA,MAHCC,cAGD,cAHCA,cAGD;AAAA,MADEC,KACF;;AACD,MAAMC,YAAY,iCAAeL,CAAf;AAChBC;AADgB,KAEbG,KAFa,EAAlB;AAIA,MAAME,iBAAiBH,kBAAkBA,eAAeI,WAAxD;;AAEA,oCACKF,SADL;AAEEG,WAAON,YAAYO,iBAAZ,CAA8BC,MAA9B,CAAqC;AAAA,aAAQC,KAAKC,SAAL,KAAmBC,yBAAeC,OAA1C;AAAA,KAArC,CAFT;AAGER;AAHF;AAKD;;AAED,SAASS,cAAT,CAAwBf,CAAxB,SAUG;AAAA,MATDgB,MASC,SATDA,MASC;AAAA,MARDf,KAQC,SARDA,KAQC;AAAA,0BAPDA,KAOC;AAAA,MANCgB,QAMD,eANCA,QAMD;AAAA,MALCC,cAKD,eALCA,cAKD;AAAA,MAJCC,iBAID,eAJCA,iBAID;AAAA,MAFDC,YAEC,SAFDA,YAEC;AAAA,MADEhB,KACF;;AACD,MAAMC,YAAY,qCAAmBL,CAAnB;AAChBgB,kBADgB;AAEhBf;AAFgB,KAGbG,KAHa,EAAlB;AAKA,oCACKC,SADL;AAEQgB,WAFR;AAAA,4GAEgBC,SAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAGIH,kCAAkBI,OAAlB,CAA0B,eAA1B;AACMC,uBAJV,GAIoBP,SAASQ,SAAT,CAAmBC,GAAnB,CAAuBJ,SAAvB,CAJpB;;AAKIJ,+BAAeS,aAAf,CAA6B,EAAEC,IAAIJ,OAAN,EAA7B;AACMK,kCANV,GAM+BX,eAAeY,KAAf,CAAqBC,WAArB,CAAiCC,IANhE;AAOUC,gCAPV,GAO6BJ,qBACrB,CAACA,kBAAD,EAAqBL,OAArB,CADqB,GAErB,CAACA,OAAD,CATR;AAAA;AAAA,uBAUUN,eAAegB,iBAAf,CAAiCD,gBAAjC,CAVV;;AAAA;AAWUE,8BAXV,GAW2B,sBAAcjB,eAAekB,WAA7B,EAA0C,CAA1C,CAX3B;;AAYI,oBAAID,kBAAkBA,eAAeX,OAAf,CAAuBa,QAAvB,GAAkCC,KAAxD,EAA+D;AAC7D;;;;AAIArB,2BAASsB,MAAT,CAAgBJ,eAAeX,OAAf,CAAuBgB,EAAvC;AACD;;AAlBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAoBEC,qBApBF,+BAoBsB;AAClBtB,wBAAkBuB,MAAlB;AACD,KAtBH;AAuBEC,SAvBF,mBAuBU;AACNxB,wBAAkByB,IAAlB,6BAAiD5B,OAAO6B,UAAxD;AACD,KAzBH;;AA0BEzB;AA1BF;AA4BD;;AAED,IAAM0B,kBAAkB,yBAAU,yBAChC/C,UADgC,EAEhCgB,cAFgC,EAGhCgC,0BAHgC,CAAV,CAAxB;;kBAKeD,e","file":"index.js","sourcesContent":["import { connect } from 'react-redux';\nimport callDirections from 'ringcentral-integration/enums/callDirections';\n\nimport withPhone from '../../lib/withPhone';\nimport CallsOnholdPanel from '../../components/CallsOnholdPanel';\n\nimport {\n  mapToProps as mapToBaseProps,\n  mapToFunctions as mapToBaseFunctions,\n} from '../ActiveCallsPage';\n\nfunction mapToProps(_, {\n  phone,\n  phone: {\n    callMonitor,\n    contactMatcher,\n  },\n  ...props\n}) {\n  const baseProps = mapToBaseProps(_, {\n    phone,\n    ...props,\n  });\n  const contactMapping = contactMatcher && contactMatcher.dataMapping;\n\n  return {\n    ...baseProps,\n    calls: callMonitor.activeOnHoldCalls.filter(call => call.direction !== callDirections.inbound),\n    contactMapping,\n  };\n}\n\nfunction mapToFunctions(_, {\n  params,\n  phone,\n  phone: {\n    webphone,\n    conferenceCall,\n    routerInteraction,\n  },\n  getAvatarUrl,\n  ...props\n}) {\n  const baseProps = mapToBaseFunctions(_, {\n    params,\n    phone,\n    ...props,\n  });\n  return {\n    ...baseProps,\n    async onMerge(sessionId) {\n      routerInteraction.replace('/calls/active');\n      const session = webphone._sessions.get(sessionId);\n      conferenceCall.setMergeParty({ to: session });\n      const sessionToMergeWith = conferenceCall.state.mergingPair.from;\n      const webphoneSessions = sessionToMergeWith\n        ? [sessionToMergeWith, session]\n        : [session];\n      await conferenceCall.mergeToConference(webphoneSessions);\n      const conferenceData = Object.values(conferenceCall.conferences)[0];\n      if (conferenceData && conferenceData.session.isOnHold().local) {\n        /**\n         * because session termination operation in conferenceCall._mergeToConference,\n         * need to wait for webphone.getActiveSessionIdReducer to update\n         */\n        webphone.resume(conferenceData.session.id);\n      }\n    },\n    onBackButtonClick() {\n      routerInteraction.goBack();\n    },\n    onAdd() {\n      routerInteraction.push(`/conferenceCall/dialer/${params.fromNumber}`);\n    },\n    getAvatarUrl,\n  };\n}\n\nconst CallsOnholdPage = withPhone(connect(\n  mapToProps,\n  mapToFunctions,\n)(CallsOnholdPanel));\n\nexport default CallsOnholdPage;\n"]}