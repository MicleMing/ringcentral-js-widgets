{"version":3,"sources":["lib/isSameLocalNumber/index.js"],"names":["isSameLocalNumber","a","b","replace"],"mappings":";;;;;kBAMwBA,iB;;AANxB;;AAMe,SAASA,iBAAT,CAA2BC,CAA3B,EAA8BC,CAA9B,EAAiC;AAC9C,MAAID,MAAMC,CAAV,EAAa;AACX,WAAO,IAAP;AACD;AACD,MAAI,qCAAcD,CAAd,CAAJ,EAAsB;AACpB,WAAO,oCAAa,mCAAYA,CAAZ,CAAb,EAA6B,UAA7B,EAAyCE,OAAzC,CAAiD,QAAjD,EAA2D,EAA3D,MAAmED,CAA1E;AACD;AACD,MAAI,qCAAcA,CAAd,CAAJ,EAAsB;AACpB,WAAO,oCAAa,mCAAYA,CAAZ,CAAb,EAA6B,UAA7B,EAAyCC,OAAzC,CAAiD,QAAjD,EAA2D,EAA3D,MAAmEF,CAA1E;AACD;AACD,SAAO,KAAP;AACD;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["import {\n  isValidNumber,\n  formatNumber,\n  parseNumber\n} from 'libphonenumber-js';\n\nexport default function isSameLocalNumber(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (isValidNumber(a)) {\n    return formatNumber(parseNumber(a), 'National').replace(/[^\\d]/g, '') === b;\n  }\n  if (isValidNumber(b)) {\n    return formatNumber(parseNumber(b), 'National').replace(/[^\\d]/g, '') === a;\n  }\n  return false;\n}\n\n// export default function isSameLocalNumber(a, b) {\n//   if (a === b) return true;\n//   if (isValidNumber(a)) {\n//     return formatLocal(countryForE164Number(a), a).replace(/[^\\d]/g, '') === b;\n//   }\n//   if (isValidNumber(b)) {\n//     return formatLocal(countryForE164Number(b), b).replace(/[^\\d]/g, '') === a;\n//   }\n//   return false;\n// }\n"]}